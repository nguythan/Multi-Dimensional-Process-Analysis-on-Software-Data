commit_id,filename,status,additions,deletions,changes,blob_url,raw_url,contents_url,patch
46ae53157af058588f88717bcb00499363e399e0,src/vs/platform/terminal/common/terminal.ts,modified,10,2,12,https://github.com/microsoft/vscode/blob/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fplatform%2Fterminal%2Fcommon%2Fterminal.ts,https://github.com/microsoft/vscode/raw/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fplatform%2Fterminal%2Fcommon%2Fterminal.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fplatform%2Fterminal%2Fcommon%2Fterminal.ts?ref=46ae53157af058588f88717bcb00499363e399e0,"@@ -953,8 +953,16 @@ export interface ITerminalBackend {  	readonly remoteAuthority: string | undefined;    	readonly isResponsive: boolean; -	readonly whenConnected: Promise<void>; -	setConnected(): void; + +	/** +	 * A promise that resolves when the backend is ready to be used, ie. after terminal persistence +	 * has been actioned. +	 */ +	readonly whenReady: Promise<void>; +	/** +	 * Signal to the backend that persistence has been actioned and is ready for use. +	 */ +	setReady(): void;    	/**  	 * Fired when the ptyHost process becomes non-responsive, this should disable stdin for all"
46ae53157af058588f88717bcb00499363e399e0,src/vs/platform/terminal/node/ptyHostService.ts,modified,10,2,12,https://github.com/microsoft/vscode/blob/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostService.ts,https://github.com/microsoft/vscode/raw/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostService.ts?ref=46ae53157af058588f88717bcb00499363e399e0,"@@ -223,7 +223,10 @@ export class PtyHostService extends Disposable implements IPtyService {  	listProcesses(): Promise<IProcessDetails[]> {  		return this._proxy.listProcesses();  	} -	getPerformanceMarks(): Promise<performance.PerformanceMark[]> { +	async getPerformanceMarks(): Promise<performance.PerformanceMark[]> { +		if (!this.__proxy) { +			return []; +		}  		return this._proxy.getPerformanceMarks();  	}  	reduceConnectionGraceTime(): Promise<void> { @@ -283,7 +286,12 @@ export class PtyHostService extends Disposable implements IPtyService {  		const shellEnv = await this._resolveShellEnv();  		return detectAvailableProfiles(profiles, defaultProfile, includeDetectedProfiles, this._configurationService, shellEnv, undefined, this._logService, this._resolveVariables.bind(this, workspaceId));  	} -	getEnvironment(): Promise<IProcessEnvironment> { +	async getEnvironment(): Promise<IProcessEnvironment> { +		// If the pty host is yet to be launched, just return the environment of this process as it +		// is essentially the same when used to evaluate terminal profiles. +		if (!this.__proxy) { +			return { ...process.env }; +		}  		return this._proxy.getEnvironment();  	}  	getWslPath(original: string, direction: 'unix-to-win' | 'win-to-unix'): Promise<string> {"
46ae53157af058588f88717bcb00499363e399e0,src/vs/workbench/contrib/terminal/browser/remoteTerminalBackend.ts,modified,2,2,4,https://github.com/microsoft/vscode/blob/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FremoteTerminalBackend.ts,https://github.com/microsoft/vscode/raw/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FremoteTerminalBackend.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FremoteTerminalBackend.ts?ref=46ae53157af058588f88717bcb00499363e399e0,"@@ -50,8 +50,8 @@ class RemoteTerminalBackend extends BaseTerminalBackend implements ITerminalBack  	private readonly _ptys: Map<number, RemotePty> = new Map();    	private readonly _whenConnected = new DeferredPromise<void>(); -	get whenConnected(): Promise<void> { return this._whenConnected.p; } -	setConnected(): void { this._whenConnected.complete(); } +	get whenReady(): Promise<void> { return this._whenConnected.p; } +	setReady(): void { this._whenConnected.complete(); }    	private readonly _onDidRequestDetach = this._register(new Emitter<{ requestId: number; workspaceId: string; instanceId: number }>());  	readonly onDidRequestDetach = this._onDidRequestDetach.event;"
46ae53157af058588f88717bcb00499363e399e0,src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts,modified,4,4,8,https://github.com/microsoft/vscode/blob/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalProfileResolverService.ts,https://github.com/microsoft/vscode/raw/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalProfileResolverService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalProfileResolverService.ts?ref=46ae53157af058588f88717bcb00499363e399e0,"@@ -26,8 +26,8 @@ import { terminalProfileArgsMatch, isUriComponents } from 'vs/platform/terminal/  import { ITerminalInstanceService } from 'vs/workbench/contrib/terminal/browser/terminal';    export interface IProfileContextProvider { -	getDefaultSystemShell: (remoteAuthority: string | undefined, os: OperatingSystem) => Promise<string>; -	getEnvironment: (remoteAuthority: string | undefined) => Promise<IProcessEnvironment>; +	getDefaultSystemShell(remoteAuthority: string | undefined, os: OperatingSystem): Promise<string>; +	getEnvironment(remoteAuthority: string | undefined): Promise<IProcessEnvironment>;  }    const generatedProfileName = 'Generated'; @@ -274,11 +274,12 @@ export abstract class BaseTerminalProfileResolverService implements ITerminalPro  	}    	private async _resolveProfile(profile: ITerminalProfile, options: IShellLaunchConfigResolveOptions): Promise<ITerminalProfile> { +		const env = await this._context.getEnvironment(options.remoteAuthority); +  		if (options.os === OperatingSystem.Windows) {  			// Change Sysnative to System32 if the OS is Windows but NOT WoW64. It's  			// safe to assume that this was used by accident as Sysnative does not  			// exist and will break the terminal in non-WoW64 environments. -			const env = await this._context.getEnvironment(options.remoteAuthority);  			const isWoW64 = !!env.hasOwnProperty('PROCESSOR_ARCHITEW6432');  			const windir = env.windir;  			if (!isWoW64 && windir) { @@ -295,7 +296,6 @@ export abstract class BaseTerminalProfileResolverService implements ITerminalPro  		}    		// Resolve path variables -		const env = await this._context.getEnvironment(options.remoteAuthority);  		const activeWorkspaceRootUri = this._historyService.getLastActiveWorkspaceRoot(options.remoteAuthority ? Schemas.vscodeRemote : Schemas.file);  		const lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined;  		profile.path = await this._resolveVariables(profile.path, env, lastActiveWorkspace);"
46ae53157af058588f88717bcb00499363e399e0,src/vs/workbench/contrib/terminal/browser/terminalService.ts,modified,20,20,40,https://github.com/microsoft/vscode/blob/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalService.ts,https://github.com/microsoft/vscode/raw/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalService.ts?ref=46ae53157af058588f88717bcb00499363e399e0,"@@ -282,6 +282,25 @@ export class TerminalService implements ITerminalService {    		const isPersistentRemote = !!this._environmentService.remoteAuthority && enableTerminalReconnection;   +		this._primaryBackend?.onDidRequestDetach(async (e) => { +			const instanceToDetach = this.getInstanceFromResource(getTerminalUri(e.workspaceId, e.instanceId)); +			if (instanceToDetach) { +				const persistentProcessId = instanceToDetach?.persistentProcessId; +				if (persistentProcessId && !instanceToDetach.shellLaunchConfig.isFeatureTerminal && !instanceToDetach.shellLaunchConfig.customPtyImplementation) { +					if (instanceToDetach.target === TerminalLocation.Editor) { +						this._terminalEditorService.detachInstance(instanceToDetach); +					} else { +						this._terminalGroupService.getGroupForInstance(instanceToDetach)?.removeInstance(instanceToDetach); +					} +					await instanceToDetach.detachProcessAndDispose(TerminalExitReason.User); +					await this._primaryBackend?.acceptDetachInstanceReply(e.requestId, persistentProcessId); +				} else { +					// will get rejected without a persistentProcessId to attach to +					await this._primaryBackend?.acceptDetachInstanceReply(e.requestId, undefined); +				} +			} +		}); +  		mark('code/terminal/willReconnect');  		let reconnectedPromise: Promise<any>;  		if (isPersistentRemote) { @@ -301,30 +320,11 @@ export class TerminalService implements ITerminalService {  			mark('code/terminal/willGetPerformanceMarks');  			await Promise.all(Array.from(this._terminalInstanceService.getRegisteredBackends()).map(async backend => {  				this._timerService.setPerformanceMarks(backend.remoteAuthority === undefined ? 'localPtyHost' : 'remotePtyHost', await backend.getPerformanceMarks()); -				backend.setConnected(); +				backend.setReady();  			}));  			mark('code/terminal/didGetPerformanceMarks');  			this._whenConnected.complete();  		}); - -		this._primaryBackend?.onDidRequestDetach(async (e) => { -			const instanceToDetach = this.getInstanceFromResource(getTerminalUri(e.workspaceId, e.instanceId)); -			if (instanceToDetach) { -				const persistentProcessId = instanceToDetach?.persistentProcessId; -				if (persistentProcessId && !instanceToDetach.shellLaunchConfig.isFeatureTerminal && !instanceToDetach.shellLaunchConfig.customPtyImplementation) { -					if (instanceToDetach.target === TerminalLocation.Editor) { -						this._terminalEditorService.detachInstance(instanceToDetach); -					} else { -						this._terminalGroupService.getGroupForInstance(instanceToDetach)?.removeInstance(instanceToDetach); -					} -					await instanceToDetach.detachProcessAndDispose(TerminalExitReason.User); -					await this._primaryBackend?.acceptDetachInstanceReply(e.requestId, persistentProcessId); -				} else { -					// will get rejected without a persistentProcessId to attach to -					await this._primaryBackend?.acceptDetachInstanceReply(e.requestId, undefined); -				} -			} -		});  	}    	getPrimaryBackend(): ITerminalBackend | undefined {"
46ae53157af058588f88717bcb00499363e399e0,src/vs/workbench/contrib/terminal/electron-sandbox/localTerminalBackend.ts,modified,84,60,144,https://github.com/microsoft/vscode/blob/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Felectron-sandbox%2FlocalTerminalBackend.ts,https://github.com/microsoft/vscode/raw/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Felectron-sandbox%2FlocalTerminalBackend.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Felectron-sandbox%2FlocalTerminalBackend.ts?ref=46ae53157af058588f88717bcb00499363e399e0,"@@ -3,7 +3,7 @@   *  Licensed under the MIT License. See License.txt in the project root for license information.   *--------------------------------------------------------------------------------------------*/   -import { Emitter, Event } from 'vs/base/common/event'; +import { Emitter } from 'vs/base/common/event';  import { IProcessEnvironment, isMacintosh, isWindows, OperatingSystem } from 'vs/base/common/platform';  import { withNullAsUndefined } from 'vs/base/common/types';  import { URI } from 'vs/base/common/uri'; @@ -51,12 +51,20 @@ export class LocalTerminalBackendContribution implements IWorkbenchContribution  class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBackend {  	readonly remoteAuthority = undefined;   -	private _proxy!: IPtyService;  	private readonly _ptys: Map<number, LocalPty> = new Map();   -	private readonly _whenConnected = new DeferredPromise<void>(); -	get whenConnected(): Promise<void> { return this._whenConnected.p; } -	setConnected(): void { this._whenConnected.complete(); } +	private _directProxyClientEventually: DeferredPromise<MessagePortClient> | undefined; +	private _directProxy: IPtyService | undefined; +	/** +	 * Communicate to the direct proxy (renderer<->ptyhost) if it's available, otherwise use the +	 * indirect proxy (renderer<->main<->ptyhost). The latter may not need to actually launch the +	 * pty host, for example when detecting profiles. +	 */ +	private get _proxy(): IPtyService { return this._directProxy || this._localPtyService; } + +	private readonly _whenReady = new DeferredPromise<void>(); +	get whenReady(): Promise<void> { return this._whenReady.p; } +	setReady(): void { this._whenReady.complete(); }    	private readonly _onDidRequestDetach = this._register(new Emitter<{ requestId: number; workspaceId: string; instanceId: number }>());  	readonly onDidRequestDetach = this._onDidRequestDetach.event; @@ -81,19 +89,26 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  	) {  		super(_localPtyService, logService, historyService, _configurationResolverService, statusBarService, workspaceContextService);   -		this._register(Event.runAndSubscribe(this.onPtyHostRestart, () => { -			this._logService.debug('Starting pty host'); -			const clientEventually = new DeferredPromise<MessagePortClient>(); -			this._proxy = ProxyChannel.toService<IPtyService>(getDelayedChannel(clientEventually.p.then(client => client.getChannel(TerminalIpcChannels.PtyHostWindow)))); -			this._connectToDirectProxy(clientEventually); -		})); - -		// Eagerly fetch the backend's environment for memoization -		this.getEnvironment(); +		this.onPtyHostRestart(() => this._connectToDirectProxy());  	}   -	private async _connectToDirectProxy(clientEventually: DeferredPromise<MessagePortClient>): Promise<void> { -		// The pty host should not get launched until the first window restored phase +	/** +	 * Request a direct connection to the pty host, this will launch the pty host process if necessary. +	 */ +	private async _connectToDirectProxy(): Promise<void> { +		// Check if connecting is in progress +		if (this._directProxyClientEventually) { +			await this._directProxyClientEventually.p; +			return; +		} + +		this._logService.debug('Starting pty host'); +		const directProxyClientEventually = new DeferredPromise<MessagePortClient>(); +		this._directProxyClientEventually = directProxyClientEventually; +		const directProxy = ProxyChannel.toService<IPtyService>(getDelayedChannel(this._directProxyClientEventually.p.then(client => client.getChannel(TerminalIpcChannels.PtyHostWindow)))); +		this._directProxy = directProxy; + +		// The pty host should not get launched until at least the window restored phase  		await this._lifecycleService.when(LifecyclePhase.Restored);    		mark('code/terminal/willConnectPtyHost'); @@ -106,37 +121,37 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  			// used for pty host management messages, it would make sense in the future to use a  			// separate interface/service for this one.  			const client = new MessagePortClient(port, `window:${this._environmentService.window.id}`); -			clientEventually.complete(client); +			directProxyClientEventually.complete(client);  			this._onPtyHostConnected.fire();    			// Attach process listeners -			this._proxy.onProcessData(e => this._ptys.get(e.id)?.handleData(e.event)); -			this._proxy.onDidChangeProperty(e => this._ptys.get(e.id)?.handleDidChangeProperty(e.property)); -			this._proxy.onProcessExit(e => { +			directProxy.onProcessData(e => this._ptys.get(e.id)?.handleData(e.event)); +			directProxy.onDidChangeProperty(e => this._ptys.get(e.id)?.handleDidChangeProperty(e.property)); +			directProxy.onProcessExit(e => {  				const pty = this._ptys.get(e.id);  				if (pty) {  					pty.handleExit(e.event);  					this._ptys.delete(e.id);  				}  			}); -			this._proxy.onProcessReady(e => this._ptys.get(e.id)?.handleReady(e.event)); -			this._proxy.onProcessReplay(e => this._ptys.get(e.id)?.handleReplay(e.event)); -			this._proxy.onProcessOrphanQuestion(e => this._ptys.get(e.id)?.handleOrphanQuestion()); -			this._proxy.onDidRequestDetach(e => this._onDidRequestDetach.fire(e)); +			directProxy.onProcessReady(e => this._ptys.get(e.id)?.handleReady(e.event)); +			directProxy.onProcessReplay(e => this._ptys.get(e.id)?.handleReplay(e.event)); +			directProxy.onProcessOrphanQuestion(e => this._ptys.get(e.id)?.handleOrphanQuestion()); +			directProxy.onDidRequestDetach(e => this._onDidRequestDetach.fire(e));    			// Listen for config changes  			const initialConfig = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION);  			for (const match of Object.keys(initialConfig.autoReplies)) {  				// Ensure the reply is value  				const reply = initialConfig.autoReplies[match] as string | null;  				if (reply) { -					this._proxy.installAutoReply(match, reply); +					directProxy.installAutoReply(match, reply);  				}  			}  			// TODO: Could simplify update to a single call  			this._register(this._configurationService.onDidChangeConfiguration(async e => {  				if (e.affectsConfiguration(TerminalSettingId.AutoReplies)) { -					this._proxy.uninstallAllAutoReplies(); +					directProxy.uninstallAllAutoReplies();  					const config = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION);  					for (const match of Object.keys(config.autoReplies)) {  						// Ensure the reply is value @@ -147,6 +162,9 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  					}  				}  			})); + +			// Eagerly fetch the backend's environment for memoization +			this.getEnvironment();  		});  	}   @@ -190,6 +208,7 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  		options: ITerminalProcessOptions,  		shouldPersist: boolean  	): Promise<ITerminalChildProcess> { +		await this._connectToDirectProxy();  		const executableEnv = await this._shellEnvironmentService.getShellEnv();  		const id = await this._proxy.createProcess(shellLaunchConfig, cwd, cols, rows, unicodeVersion, env, executableEnv, options, shouldPersist, this._getWorkspaceId(), this._getWorkspaceName());  		const pty = new LocalPty(id, shouldPersist, this._proxy); @@ -198,6 +217,7 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  	}    	async attachToProcess(id: number): Promise<ITerminalChildProcess | undefined> { +		await this._connectToDirectProxy();  		try {  			await this._proxy.attachToProcess(id);  			const pty = new LocalPty(id, true, this._proxy); @@ -210,6 +230,7 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  	}    	async attachToRevivedProcess(id: number): Promise<ITerminalChildProcess | undefined> { +		await this._connectToDirectProxy();  		try {  			const newId = await this._proxy.getRevivedPtyNewId(id) ?? id;  			return await this.attachToProcess(newId); @@ -220,6 +241,7 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  	}    	async listProcesses(): Promise<IProcessDetails[]> { +		await this._connectToDirectProxy();  		return this._proxy.listProcesses();  	}   @@ -237,7 +259,7 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke    	async getProfiles(profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean) {  		// TODO: Differentiate interfaces of direct to pty host and pty host service (or just move them all to pty host) -		return this._localPtyService.getProfiles?.(this._workspaceContextService.getWorkspace().id, profiles, defaultProfile, includeDetectedProfiles) || []; +		return this._proxy.getProfiles?.(this._workspaceContextService.getWorkspace().id, profiles, defaultProfile, includeDetectedProfiles) || [];  	}    	@memoize @@ -273,40 +295,42 @@ class LocalTerminalBackend extends BaseTerminalBackend implements ITerminalBacke  		// Revive processes if needed  		const serializedState = this._storageService.get(TerminalStorageKeys.TerminalBufferState, StorageScope.WORKSPACE);  		const parsed = this._deserializeTerminalState(serializedState); -		if (parsed) { -			try { -				// Create variable resolver -				const activeWorkspaceRootUri = this._historyService.getLastActiveWorkspaceRoot(); -				const lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined; -				const variableResolver = terminalEnvironment.createVariableResolver(lastActiveWorkspace, await this._terminalProfileResolverService.getEnvironment(this.remoteAuthority), this._configurationResolverService); - -				// Re-resolve the environments and replace it on the state so local terminals use a fresh -				// environment -				mark('code/terminal/willGetReviveEnvironments'); -				await Promise.all(parsed.map(state => new Promise<void>(r => { -					this._resolveEnvironmentForRevive(variableResolver, state.shellLaunchConfig).then(freshEnv => { -						state.processLaunchConfig.env = freshEnv; -						r(); -					}); -				}))); -				mark('code/terminal/didGetReviveEnvironments'); - -				mark('code/terminal/willReviveTerminalProcesses'); -				await this._proxy.reviveTerminalProcesses(parsed, Intl.DateTimeFormat().resolvedOptions().locale); -				mark('code/terminal/didReviveTerminalProcesses'); -				this._storageService.remove(TerminalStorageKeys.TerminalBufferState, StorageScope.WORKSPACE); -				// If reviving processes, send the terminal layout info back to the pty host as it -				// will not have been persisted on application exit -				const layoutInfo = this._storageService.get(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE); -				if (layoutInfo) { -					mark('code/terminal/willSetTerminalLayoutInfo'); -					await this._proxy.setTerminalLayoutInfo(JSON.parse(layoutInfo)); -					mark('code/terminal/didSetTerminalLayoutInfo'); -					this._storageService.remove(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE); -				} -			} catch (e: unknown) { -				this._logService.warn('LocalTerminalBackend#getTerminalLayoutInfo Error', e && typeof e === 'object' && 'message' in e ? e.message : e); +		if (!parsed) { +			return undefined; +		} + +		try { +			// Create variable resolver +			const activeWorkspaceRootUri = this._historyService.getLastActiveWorkspaceRoot(); +			const lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined; +			const variableResolver = terminalEnvironment.createVariableResolver(lastActiveWorkspace, await this._terminalProfileResolverService.getEnvironment(this.remoteAuthority), this._configurationResolverService); + +			// Re-resolve the environments and replace it on the state so local terminals use a fresh +			// environment +			mark('code/terminal/willGetReviveEnvironments'); +			await Promise.all(parsed.map(state => new Promise<void>(r => { +				this._resolveEnvironmentForRevive(variableResolver, state.shellLaunchConfig).then(freshEnv => { +					state.processLaunchConfig.env = freshEnv; +					r(); +				}); +			}))); +			mark('code/terminal/didGetReviveEnvironments'); + +			mark('code/terminal/willReviveTerminalProcesses'); +			await this._proxy.reviveTerminalProcesses(parsed, Intl.DateTimeFormat().resolvedOptions().locale); +			mark('code/terminal/didReviveTerminalProcesses'); +			this._storageService.remove(TerminalStorageKeys.TerminalBufferState, StorageScope.WORKSPACE); +			// If reviving processes, send the terminal layout info back to the pty host as it +			// will not have been persisted on application exit +			const layoutInfo = this._storageService.get(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE); +			if (layoutInfo) { +				mark('code/terminal/willSetTerminalLayoutInfo'); +				await this._proxy.setTerminalLayoutInfo(JSON.parse(layoutInfo)); +				mark('code/terminal/didSetTerminalLayoutInfo'); +				this._storageService.remove(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE);  			} +		} catch (e: unknown) { +			this._logService.warn('LocalTerminalBackend#getTerminalLayoutInfo Error', e && typeof e === 'object' && 'message' in e ? e.message : e);  		}    		return this._proxy.getTerminalLayoutInfo(layoutArgs);"
46ae53157af058588f88717bcb00499363e399e0,src/vs/workbench/services/timer/browser/timerService.ts,modified,1,1,2,https://github.com/microsoft/vscode/blob/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fservices%2Ftimer%2Fbrowser%2FtimerService.ts,https://github.com/microsoft/vscode/raw/46ae53157af058588f88717bcb00499363e399e0/src%2Fvs%2Fworkbench%2Fservices%2Ftimer%2Fbrowser%2FtimerService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fservices%2Ftimer%2Fbrowser%2FtimerService.ts?ref=46ae53157af058588f88717bcb00499363e399e0,"@@ -504,7 +504,7 @@ export abstract class AbstractTimerService implements ITimerService {  			this._extensionService.whenInstalledExtensionsRegistered(), // extensions registered  			_lifecycleService.when(LifecyclePhase.Restored),			// workbench created and parts restored  			layoutService.whenRestored,									// layout restored (including visible editors resolved) -			Promise.all(Array.from(Registry.as<ITerminalBackendRegistry>(TerminalExtensions.Backend).backends.values()).map(e => e.whenConnected)) +			Promise.all(Array.from(Registry.as<ITerminalBackendRegistry>(TerminalExtensions.Backend).backends.values()).map(e => e.whenReady))  		]).then(() => {  			// set perf mark from renderer  			this.setPerformanceMarks('renderer', perf.getMarks());"
0734f94e7ec686784e52fedbb160dbe9a6444aa8,src/vs/base/parts/quickinput/browser/quickInput.ts,modified,1,0,1,https://github.com/microsoft/vscode/blob/0734f94e7ec686784e52fedbb160dbe9a6444aa8/src%2Fvs%2Fbase%2Fparts%2Fquickinput%2Fbrowser%2FquickInput.ts,https://github.com/microsoft/vscode/raw/0734f94e7ec686784e52fedbb160dbe9a6444aa8/src%2Fvs%2Fbase%2Fparts%2Fquickinput%2Fbrowser%2FquickInput.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fbase%2Fparts%2Fquickinput%2Fbrowser%2FquickInput.ts?ref=0734f94e7ec686784e52fedbb160dbe9a6444aa8,"@@ -1588,6 +1588,7 @@ export class QuickInputController extends Disposable {  		ui.message.style.display = visibilities.message ? '' : 'none';  		ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';  		ui.list.display(!!visibilities.list); +		ui.list.canSelectMany = !!visibilities.checkBox;  		ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');  		this.updateLayout(); // TODO  	}"
0734f94e7ec686784e52fedbb160dbe9a6444aa8,src/vs/base/parts/quickinput/browser/quickInputList.ts,modified,10,2,12,https://github.com/microsoft/vscode/blob/0734f94e7ec686784e52fedbb160dbe9a6444aa8/src%2Fvs%2Fbase%2Fparts%2Fquickinput%2Fbrowser%2FquickInputList.ts,https://github.com/microsoft/vscode/raw/0734f94e7ec686784e52fedbb160dbe9a6444aa8/src%2Fvs%2Fbase%2Fparts%2Fquickinput%2Fbrowser%2FquickInputList.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fbase%2Fparts%2Fquickinput%2Fbrowser%2FquickInputList.ts?ref=0734f94e7ec686784e52fedbb160dbe9a6444aa8,"@@ -42,6 +42,7 @@ interface IListElement {  	readonly labelHighlights?: IMatch[];  	readonly descriptionHighlights?: IMatch[];  	readonly detailHighlights?: IMatch[]; +	readonly hasCheckBox: boolean;  	readonly checked: boolean;  	readonly separator?: IQuickPickSeparator;  	readonly fireButtonTriggered: (event: IQuickPickItemButtonEvent<IQuickPickItem>) => void; @@ -58,6 +59,7 @@ class ListElement implements IListElement, IDisposable {  	hidden = false;  	private readonly _onChecked = new Emitter<boolean>();  	onChecked = this._onChecked.event; +	hasCheckBox!: boolean;  	_checked?: boolean;  	get checked() {  		return !!this._checked; @@ -247,6 +249,7 @@ export class QuickInputList {  	private inputElements: Array<IQuickPickItem | IQuickPickSeparator> = [];  	private elements: ListElement[] = [];  	private elementsToIndexes = new Map<IQuickPickItem, number>(); +	canSelectMany = false;  	matchOnDescription = false;  	matchOnDetail = false;  	matchOnLabel = true; @@ -440,6 +443,7 @@ export class QuickInputList {  					saneAriaLabel,  					saneDescription,  					saneDetail, +					hasCheckBox: this.canSelectMany,  					labelHighlights: item.highlights?.label,  					descriptionHighlights: item.highlights?.description,  					detailHighlights: item.highlights?.detail, @@ -737,7 +741,11 @@ class QuickInputAccessibilityProvider implements IListAccessibilityProvider<List  		return 'listbox';  	}   -	getRole() { -		return 'option'; +	isChecked(element: ListElement) { +		return element.checked; +	} + +	getRole(element: ListElement) { +		return element.hasCheckBox ? 'checkbox' : 'option';  	}  }"
c8040119b04b7a80ed1eb9069521bec3ea33a090,src/vs/workbench/contrib/notebook/browser/controller/editActions.ts,modified,56,1,57,https://github.com/microsoft/vscode/blob/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fcontroller%2FeditActions.ts,https://github.com/microsoft/vscode/raw/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fcontroller%2FeditActions.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fcontroller%2FeditActions.ts?ref=c8040119b04b7a80ed1eb9069521bec3ea33a090,"@@ -19,7 +19,7 @@ import { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegis  import { IQuickInputService, IQuickPickItem, QuickPickInput } from 'vs/platform/quickinput/common/quickInput';  import { changeCellToKind, runDeleteAction } from 'vs/workbench/contrib/notebook/browser/controller/cellOperations';  import { CellToolbarOrder, CELL_TITLE_CELL_GROUP_ID, CELL_TITLE_OUTPUT_GROUP_ID, executeNotebookCondition, INotebookActionContext, INotebookCellActionContext, NotebookAction, NotebookCellAction, NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT } from 'vs/workbench/contrib/notebook/browser/controller/coreActions'; -import { NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_MARKDOWN_EDIT_MODE, NOTEBOOK_CELL_TYPE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_HAS_OUTPUTS, NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_OUTPUT_FOCUSED, NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON } from 'vs/workbench/contrib/notebook/common/notebookContextKeys'; +import { NOTEBOOK_CELL_EDITABLE, NOTEBOOK_CELL_HAS_OUTPUTS, NOTEBOOK_CELL_LIST_FOCUSED, NOTEBOOK_CELL_MARKDOWN_EDIT_MODE, NOTEBOOK_CELL_TYPE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_HAS_OUTPUTS, NOTEBOOK_IS_ACTIVE_EDITOR, NOTEBOOK_OUPTUT_INPUT_FOCUSED, NOTEBOOK_OUTPUT_FOCUSED, NOTEBOOK_USE_CONSOLIDATED_OUTPUT_BUTTON } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';  import { CellEditState, CHANGE_CELL_LANGUAGE, DETECT_CELL_LANGUAGE, QUIT_EDIT_CELL_COMMAND_ID } from 'vs/workbench/contrib/notebook/browser/notebookBrowser';  import * as icons from 'vs/workbench/contrib/notebook/browser/notebookIcons';  import { CellEditType, CellKind, ICellEditOperation, NotebookCellExecutionState, NotebookSetting } from 'vs/workbench/contrib/notebook/common/notebookCommon'; @@ -132,6 +132,61 @@ registerAction2(class QuitEditCellAction extends NotebookCellAction {  	}  });   +registerAction2(class UnfocusCellOutput extends NotebookCellAction { +	constructor() { +		super( +			{ +				id: 'notebook.cell.unfocusOutput', +				title: localize('notebookActions.unfocusOutput', ""Stop Editing Cell""), +				menu: { +					id: MenuId.NotebookCellTitle, +					when: ContextKeyExpr.and( +						NOTEBOOK_CELL_TYPE.isEqualTo('markup'), +						NOTEBOOK_CELL_MARKDOWN_EDIT_MODE, +						NOTEBOOK_CELL_EDITABLE), +					order: CellToolbarOrder.SaveCell, +					group: CELL_TITLE_CELL_GROUP_ID +				}, +				icon: icons.stopEditIcon, +				keybinding: [ +					{ +						when: ContextKeyExpr.and(quitEditCondition, +							EditorContextKeys.hoverVisible.toNegated(), +							EditorContextKeys.hasNonEmptySelection.toNegated(), +							EditorContextKeys.hasMultipleSelections.toNegated()), +						primary: KeyCode.Escape, +						weight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5 +					}, +					{ +						when: ContextKeyExpr.and(NOTEBOOK_EDITOR_FOCUSED, +							NOTEBOOK_OUTPUT_FOCUSED, +							NOTEBOOK_OUPTUT_INPUT_FOCUSED.toNegated()), +						primary: KeyCode.Escape, +						weight: KeybindingWeight.WorkbenchContrib + 1 +					}, +					{ +						when: ContextKeyExpr.and( +							quitEditCondition, +							NOTEBOOK_CELL_TYPE.isEqualTo('markup')), +						primary: KeyMod.WinCtrl | KeyCode.Enter, +						win: { +							primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter +						}, +						weight: NOTEBOOK_EDITOR_WIDGET_ACTION_WEIGHT - 5 +					}, +				] +			}); +	} + +	async runWithContext(accessor: ServicesAccessor, context: INotebookCellActionContext) { +		if (context.cell.cellKind === CellKind.Markup) { +			context.cell.updateEditState(CellEditState.Preview, QUIT_EDIT_CELL_COMMAND_ID); +		} + +		await context.notebookEditor.focusNotebookCell(context.cell, 'container', { skipReveal: true }); +	} +}); +  registerAction2(class DeleteCellAction extends NotebookCellAction {  	constructor() {  		super("
c8040119b04b7a80ed1eb9069521bec3ea33a090,src/vs/workbench/contrib/notebook/browser/diff/notebookDiffEditor.ts,modified,4,0,4,https://github.com/microsoft/vscode/blob/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fdiff%2FnotebookDiffEditor.ts,https://github.com/microsoft/vscode/raw/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fdiff%2FnotebookDiffEditor.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fdiff%2FnotebookDiffEditor.ts?ref=c8040119b04b7a80ed1eb9069521bec3ea33a090,"@@ -183,6 +183,10 @@ export class NotebookTextDiffEditor extends EditorPane implements INotebookTextD  		// throw new Error('Method not implemented.');  	}   +	didFocusOutputInputChange(focus: boolean): void { +		// noop +	} +  	getScrollTop() {  		return this._list?.scrollTop ?? 0;  	}"
c8040119b04b7a80ed1eb9069521bec3ea33a090,src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts,modified,8,1,9,https://github.com/microsoft/vscode/blob/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2FnotebookEditorWidget.ts,https://github.com/microsoft/vscode/raw/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2FnotebookEditorWidget.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2FnotebookEditorWidget.ts?ref=c8040119b04b7a80ed1eb9069521bec3ea33a090,"@@ -71,7 +71,7 @@ import { NotebookOverviewRuler } from 'vs/workbench/contrib/notebook/browser/vie  import { ListTopCellToolbar } from 'vs/workbench/contrib/notebook/browser/viewParts/notebookTopCellToolbar';  import { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';  import { CellEditType, CellKind, INotebookSearchOptions, RENDERER_NOT_AVAILABLE, SelectionStateType } from 'vs/workbench/contrib/notebook/common/notebookCommon'; -import { NOTEBOOK_CURSOR_NAVIGATION_MODE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_OUTPUT_FOCUSED } from 'vs/workbench/contrib/notebook/common/notebookContextKeys'; +import { NOTEBOOK_CURSOR_NAVIGATION_MODE, NOTEBOOK_EDITOR_EDITABLE, NOTEBOOK_EDITOR_FOCUSED, NOTEBOOK_OUTPUT_FOCUSED, NOTEBOOK_OUPTUT_INPUT_FOCUSED } from 'vs/workbench/contrib/notebook/common/notebookContextKeys';  import { INotebookExecutionService } from 'vs/workbench/contrib/notebook/common/notebookExecutionService';  import { INotebookExecutionStateService } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';  import { INotebookKernelService } from 'vs/workbench/contrib/notebook/common/notebookKernelService'; @@ -198,6 +198,7 @@ export class NotebookEditorWidget extends Disposable implements INotebookEditorD  	private readonly _outputFocus: IContextKey<boolean>;  	private readonly _editorEditable: IContextKey<boolean>;  	private readonly _cursorNavMode: IContextKey<boolean>; +	private readonly _outputInputFocus: IContextKey<boolean>;  	protected readonly _contributions = new Map<string, INotebookEditorContribution>();  	private _scrollBeyondLastLine: boolean;  	private readonly _insetModifyQueueByOutputId = new SequencerByKey<string>(); @@ -390,6 +391,7 @@ export class NotebookEditorWidget extends Disposable implements INotebookEditorD  		this._isVisible = true;  		this._editorFocus = NOTEBOOK_EDITOR_FOCUSED.bindTo(this.scopedContextKeyService);  		this._outputFocus = NOTEBOOK_OUTPUT_FOCUSED.bindTo(this.scopedContextKeyService); +		this._outputInputFocus = NOTEBOOK_OUPTUT_INPUT_FOCUSED.bindTo(this.scopedContextKeyService);  		this._editorEditable = NOTEBOOK_EDITOR_EDITABLE.bindTo(this.scopedContextKeyService);  		this._cursorNavMode = NOTEBOOK_CURSOR_NAVIGATION_MODE.bindTo(this.scopedContextKeyService);   @@ -1348,6 +1350,7 @@ export class NotebookEditorWidget extends Disposable implements INotebookEditorD  			didEndDragMarkupCell: that._didEndDragMarkupCell.bind(that),  			didResizeOutput: that._didResizeOutput.bind(that),  			updatePerformanceMetadata: that._updatePerformanceMetadata.bind(that), +			didFocusOutputInputChange: that._didFocusOutputInputChange.bind(that),  		}, id, viewType, resource, {  			...this._notebookOptions.computeWebviewOptions(),  			fontFamily: this._generateFontFamily() @@ -1973,6 +1976,10 @@ export class NotebookEditorWidget extends Disposable implements INotebookEditorD  		return false;  	}   +	_didFocusOutputInputChange(hasFocus: boolean) { +		this._outputInputFocus.set(hasFocus); +	} +  	//#endregion    	//#region Editor Features"
c8040119b04b7a80ed1eb9069521bec3ea33a090,src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts,modified,4,0,4,https://github.com/microsoft/vscode/blob/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FbackLayerWebView.ts,https://github.com/microsoft/vscode/raw/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FbackLayerWebView.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FbackLayerWebView.ts?ref=c8040119b04b7a80ed1eb9069521bec3ea33a090,"@@ -94,6 +94,7 @@ export interface INotebookDelegateForWebview {  	setScrollTop(scrollTop: number): void;  	triggerScroll(event: IMouseWheelEvent): void;  	updatePerformanceMetadata(cellId: string, executionId: string, duration: number, rendererId: string): void; +	didFocusOutputInputChange(focus: boolean): void;  }    interface BacklayerWebviewOptions { @@ -877,6 +878,9 @@ export class BackLayerWebView<T extends ICommonCellInfo> extends Themable {  					this.notebookEditor.updatePerformanceMetadata(data.cellId, data.executionId, data.duration, data.rendererId);  					break;  				} +				case 'outputInputFocus': { +					this.notebookEditor.didFocusOutputInputChange(data.hasFocus); +				}  			}  		}));  "
c8040119b04b7a80ed1eb9069521bec3ea33a090,src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts,modified,6,0,6,https://github.com/microsoft/vscode/blob/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FwebviewMessages.ts,https://github.com/microsoft/vscode/raw/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FwebviewMessages.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FwebviewMessages.ts?ref=c8040119b04b7a80ed1eb9069521bec3ea33a090,"@@ -47,6 +47,11 @@ export interface IOutputBlurMessage extends BaseToWebviewMessage {  	readonly id: string;  }   +export interface IOutputInputFocusMessage extends BaseToWebviewMessage { +	readonly type: 'outputInputFocus'; +	readonly hasFocus: boolean; +} +  export interface IScrollToRevealMessage extends BaseToWebviewMessage {  	readonly type: 'scroll-to-reveal';  	readonly scrollTop: number; @@ -475,6 +480,7 @@ export type FromWebviewMessage = WebviewInitialized |  	IMouseLeaveMessage |  	IOutputFocusMessage |  	IOutputBlurMessage | +	IOutputInputFocusMessage |  	IScrollToRevealMessage |  	IWheelMessage |  	IScrollAckMessage |"
c8040119b04b7a80ed1eb9069521bec3ea33a090,src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts,modified,24,1,25,https://github.com/microsoft/vscode/blob/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FwebviewPreloads.ts,https://github.com/microsoft/vscode/raw/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FwebviewPreloads.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fbrowser%2Fview%2Frenderers%2FwebviewPreloads.ts?ref=c8040119b04b7a80ed1eb9069521bec3ea33a090,"@@ -5,7 +5,7 @@    import type { Event } from 'vs/base/common/event';  import type { IDisposable } from 'vs/base/common/lifecycle'; -import type * as webviewMessages from 'vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages'; +import * as webviewMessages from 'vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages';  import type { NotebookCellMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';  import type * as rendererApi from 'vscode-notebook-renderer';   @@ -94,6 +94,8 @@ async function webviewPreloads(ctx: PreloadContext) {  	let currentRenderOptions = ctx.renderOptions;  	const settingChange: EmitterLike<RenderOptions> = createEmitter<RenderOptions>();   +	let isInputElementFocused: boolean | undefined = undefined; +  	const acquireVsCodeApi = globalThis.acquireVsCodeApi;  	const vscode = acquireVsCodeApi();  	delete (globalThis as any).acquireVsCodeApi; @@ -137,11 +139,32 @@ async function webviewPreloads(ctx: PreloadContext) {  			};  		};   +	// check if an input element is focused within the output element +	const checkOutputInputFocus = () => { + +		const activeElement = document.activeElement; +		if (!activeElement) { +			return; +		} + +		isInputElementFocused = !!activeElement && (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA'); + +		if (isInputElementFocused) { +			postNotebookMessage<webviewMessages.IOutputInputFocusMessage>('outputInputFocus', { hasFocus: true }); + +			activeElement.addEventListener('onblur', () => { +				postNotebookMessage<webviewMessages.IOutputInputFocusMessage>('outputInputFocus', { hasFocus: false }); +			}, { once: true }); +		} +	}; +  	const handleInnerClick = (event: MouseEvent) => {  		if (!event || !event.view || !event.view.document) {  			return;  		}   +		checkOutputInputFocus(); +  		for (const node of event.composedPath()) {  			if (node instanceof HTMLElement && node.classList.contains('output')) {  				// output"
c8040119b04b7a80ed1eb9069521bec3ea33a090,src/vs/workbench/contrib/notebook/common/notebookContextKeys.ts,modified,1,0,1,https://github.com/microsoft/vscode/blob/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fcommon%2FnotebookContextKeys.ts,https://github.com/microsoft/vscode/raw/c8040119b04b7a80ed1eb9069521bec3ea33a090/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fcommon%2FnotebookContextKeys.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fnotebook%2Fcommon%2FnotebookContextKeys.ts?ref=c8040119b04b7a80ed1eb9069521bec3ea33a090,"@@ -20,6 +20,7 @@ export const INTERACTIVE_WINDOW_IS_ACTIVE_EDITOR = ContextKeyExpr.equals('active  export const NOTEBOOK_EDITOR_FOCUSED = new RawContextKey<boolean>('notebookEditorFocused', false);  export const NOTEBOOK_CELL_LIST_FOCUSED = new RawContextKey<boolean>('notebookCellListFocused', false);  export const NOTEBOOK_OUTPUT_FOCUSED = new RawContextKey<boolean>('notebookOutputFocused', false); +export const NOTEBOOK_OUPTUT_INPUT_FOCUSED = new RawContextKey<boolean>('notebookOutputInputFocused', false);  export const NOTEBOOK_EDITOR_EDITABLE = new RawContextKey<boolean>('notebookEditable', true);  export const NOTEBOOK_HAS_RUNNING_CELL = new RawContextKey<boolean>('notebookHasRunningCell', false);  export const NOTEBOOK_HAS_SOMETHING_RUNNING = new RawContextKey<boolean>('notebookHasSomethingRunning', false);"
2faeb5268effa737597848c49261991bf0ab8058,extensions/vscode-test-resolver/package.json,modified,7,7,14,https://github.com/microsoft/vscode/blob/2faeb5268effa737597848c49261991bf0ab8058/extensions%2Fvscode-test-resolver%2Fpackage.json,https://github.com/microsoft/vscode/raw/2faeb5268effa737597848c49261991bf0ab8058/extensions%2Fvscode-test-resolver%2Fpackage.json,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Fvscode-test-resolver%2Fpackage.json?ref=2faeb5268effa737597848c49261991bf0ab8058,"@@ -7,7 +7,7 @@    ""enableProposedApi"": true,    ""enabledApiProposals"": [      ""resolvers"", -	""tunnels"" +    ""tunnels""    ],    ""private"": true,    ""engines"": { @@ -23,13 +23,8 @@    },    ""activationEvents"": [      ""onResolveRemoteAuthority:test"", -    ""onCommand:vscode-testresolver.newWindow"", -    ""onCommand:vscode-testresolver.currentWindow"",      ""onCommand:vscode-testresolver.newWindowWithError"", -    ""onCommand:vscode-testresolver.showLog"", -    ""onCommand:vscode-testresolver.openTunnel"", -    ""onCommand:vscode-testresolver.startRemoteServer"", -    ""onCommand:vscode-testresolver.toggleConnectionPause"" +    ""onStartupFinished""    ],    ""main"": ""./out/extension"",    ""devDependencies"": { @@ -156,6 +151,11 @@            ""description"": ""If set, the test resolver tunnel factory will support mock public ports. Forwarded ports will not actually be public. Requires reload."",            ""type"": ""boolean"",            ""default"": false +        }, +        ""testresolver.downloadServerInBackground"": { +          ""description"": ""If set, the test resolver downloads the server bits when it discoveres a new update"", +          ""type"": ""boolean"", +          ""default"": false          }        }      }"
2faeb5268effa737597848c49261991bf0ab8058,extensions/vscode-test-resolver/src/download.ts,modified,61,45,106,https://github.com/microsoft/vscode/blob/2faeb5268effa737597848c49261991bf0ab8058/extensions%2Fvscode-test-resolver%2Fsrc%2Fdownload.ts,https://github.com/microsoft/vscode/raw/2faeb5268effa737597848c49261991bf0ab8058/extensions%2Fvscode-test-resolver%2Fsrc%2Fdownload.ts,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Fvscode-test-resolver%2Fsrc%2Fdownload.ts?ref=2faeb5268effa737597848c49261991bf0ab8058,"@@ -4,36 +4,58 @@   *--------------------------------------------------------------------------------------------*/    import * as https from 'https'; -import * as fs from 'fs'; +import { promises as fs, createWriteStream } from 'fs';  import * as path from 'path';  import * as cp from 'child_process'; -import { parse as parseUrl } from 'url'; +import { URL } from 'url';   -function ensureFolderExists(loc: string) { -	if (!fs.existsSync(loc)) { -		const parent = path.dirname(loc); -		if (parent) { -			ensureFolderExists(parent); -		} -		fs.mkdirSync(loc); +async function ensureFolderExists(loc: string) { +	if (!(await folderExists(loc))) { +		await fs.mkdir(loc, { recursive: true });  	}  }   -function getDownloadUrl(updateUrl: string, commit: string, platform: string, quality: string): string { +async function folderExists(location: string) { +	try { +		return (await fs.stat(location)).isDirectory; +	} catch (e) { +		return false; +	} +} + +async function fileExists(location: string) { +	try { +		return (await fs.stat(location)).isFile; +	} catch (e) { +		return false; +	} + +} + +export function getDownloadUrl(updateUrl: string, commit: string, platform: string, quality: string): string { +	return `${updateUrl}/commit:${commit}/server-${platform}/${quality}`; +} + +export function getPlatform() { +	return process.platform === 'win32' ? 'win32-x64' : process.platform === 'darwin' ? 'darwin' : 'linux-x64'; +} + +export function getDownloadLocation(updateUrl: string, commit: string, platform: string, quality: string): string {  	return `${updateUrl}/commit:${commit}/server-${platform}/${quality}`;  }   -async function downloadVSCodeServerArchive(updateUrl: string, commit: string, quality: string, destDir: string, log: (messsage: string) => void): Promise<string> { -	ensureFolderExists(destDir); +export async function downloadVSCodeServerArchive(updateUrl: string, commit: string, quality: string, destDir: string, log: (messsage: string) => void): Promise<string> { +	await ensureFolderExists(destDir);   -	const platform = process.platform === 'win32' ? 'win32-x64' : process.platform === 'darwin' ? 'darwin' : 'linux-x64'; +	const platform = getPlatform();  	const downloadUrl = getDownloadUrl(updateUrl, commit, platform, quality); +	console.log('downloadUrl' + downloadUrl);    	return new Promise((resolve, reject) => {  		log(`Downloading VS Code Server from: ${downloadUrl}`); -		const requestOptions: https.RequestOptions = parseUrl(downloadUrl); +		const requestOptions: https.RequestOptions = new URL(downloadUrl);   -		https.get(requestOptions, res => { +		https.get(requestOptions, async res => {  			if (res.statusCode !== 302) {  				reject('Failed to get VS Code server archive location');  			} @@ -42,38 +64,32 @@ async function downloadVSCodeServerArchive(updateUrl: string, commit: string, qu  				reject('Failed to get VS Code server archive location');  				return;  			} - -			const archiveRequestOptions: https.RequestOptions = parseUrl(archiveUrl); -			if (archiveUrl.endsWith('.zip')) { -				const archivePath = path.resolve(destDir, `vscode-server-${commit}.zip`); -				const outStream = fs.createWriteStream(archivePath); -				outStream.on('close', () => { +			const archivePath = path.resolve(destDir, `vscode-server-${quality}-${platform}-${commit}.${archiveUrl.endsWith('.zip') ? 'zip' : 'tgz'}`); +			fileExists(archivePath).then(exists => { +				if (exists) {  					resolve(archivePath); -				}); -				https.get(archiveRequestOptions, res => { -					res.pipe(outStream); -				}); -			} else { -				const zipPath = path.resolve(destDir, `vscode-server-${commit}.tgz`); -				const outStream = fs.createWriteStream(zipPath); -				https.get(archiveRequestOptions, res => { -					res.pipe(outStream); -				}); -				outStream.on('close', () => { -					resolve(zipPath); -				}); -			} +				} else { +					const outStream = createWriteStream(archivePath); +					outStream.on('close', () => { +						resolve(archivePath); +					}); +					const archiveRequestOptions: https.RequestOptions = new URL(archiveUrl); +					https.get(archiveRequestOptions, res => { +						res.pipe(outStream); +					}); +				} +			});  		});  	});  }    /**   * Unzip a .zip or .tar.gz VS Code archive   */ -function unzipVSCodeServer(vscodeArchivePath: string, extractDir: string, destDir: string, log: (messsage: string) => void) { +async function unzipVSCodeServer(vscodeArchivePath: string, extractDir: string, destDir: string, log: (messsage: string) => void) {  	log(`Extracting ${vscodeArchivePath}`);  	if (vscodeArchivePath.endsWith('.zip')) { -		const tempDir = fs.mkdtempSync(path.join(destDir, 'vscode-server-extract')); +		const tempDir = await fs.mkdtemp(path.join(destDir, 'vscode-server-extract'));  		if (process.platform === 'win32') {  			cp.spawnSync('powershell.exe', [  				'-NoProfile', @@ -86,33 +102,33 @@ function unzipVSCodeServer(vscodeArchivePath: string, extractDir: string, destDi  		} else {  			cp.spawnSync('unzip', [vscodeArchivePath, '-d', `${tempDir}`]);  		} -		fs.renameSync(path.join(tempDir, process.platform === 'win32' ? 'vscode-server-win32-x64' : 'vscode-server-darwin-x64'), extractDir); +		await fs.rename(path.join(tempDir, process.platform === 'win32' ? 'vscode-server-win32-x64' : 'vscode-server-darwin-x64'), extractDir);  	} else {  		// tar does not create extractDir by default -		if (!fs.existsSync(extractDir)) { -			fs.mkdirSync(extractDir); -		} +		await ensureFolderExists(extractDir);  		cp.spawnSync('tar', ['-xzf', vscodeArchivePath, '-C', extractDir, '--strip-components', '1']);  	}  }    export async function downloadAndUnzipVSCodeServer(updateUrl: string, commit: string, quality: string = 'stable', destDir: string, log: (messsage: string) => void): Promise<string> {    	const extractDir = path.join(destDir, commit); -	if (fs.existsSync(extractDir)) { +	if (await folderExists(extractDir)) {  		log(`Found ${extractDir}. Skipping download.`);  	} else {  		log(`Downloading VS Code Server ${quality} - ${commit} into ${extractDir}.`);  		try {  			const vscodeArchivePath = await downloadVSCodeServerArchive(updateUrl, commit, quality, destDir, log); -			if (fs.existsSync(vscodeArchivePath)) { +			if (await fileExists(vscodeArchivePath)) {  				unzipVSCodeServer(vscodeArchivePath, extractDir, destDir, log);  				// Remove archive -				fs.unlinkSync(vscodeArchivePath); +				await fs.unlink(vscodeArchivePath);  			}  		} catch (err) {  			throw Error(`Failed to download and unzip VS Code ${quality} - ${commit}`);  		}  	} -	return Promise.resolve(extractDir); +	return extractDir;  } + +"
2faeb5268effa737597848c49261991bf0ab8058,extensions/vscode-test-resolver/src/extension.ts,modified,63,15,78,https://github.com/microsoft/vscode/blob/2faeb5268effa737597848c49261991bf0ab8058/extensions%2Fvscode-test-resolver%2Fsrc%2Fextension.ts,https://github.com/microsoft/vscode/raw/2faeb5268effa737597848c49261991bf0ab8058/extensions%2Fvscode-test-resolver%2Fsrc%2Fextension.ts,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Fvscode-test-resolver%2Fsrc%2Fextension.ts?ref=2faeb5268effa737597848c49261991bf0ab8058,"@@ -6,12 +6,12 @@  import * as vscode from 'vscode';  import * as cp from 'child_process';  import * as path from 'path'; -import * as fs from 'fs'; +import { promises as fs, readFileSync } from 'fs';  import * as os from 'os';  import * as net from 'net';  import * as http from 'http';  import * as crypto from 'crypto'; -import { downloadAndUnzipVSCodeServer } from './download'; +import { downloadAndUnzipVSCodeServer, downloadVSCodeServerArchive } from './download';  import { terminateProcess } from './util/processes';    let extHostProcess: cp.ChildProcess | undefined; @@ -20,23 +20,33 @@ const enum CharCode {  	LineFeed = 10  }   -let outputChannel: vscode.OutputChannel; +let _outputChannel: vscode.OutputChannel; +function getOutputChannel() { +	if (!_outputChannel) { +		_outputChannel = vscode.window.createOutputChannel('TestResolver'); +	} +	return _outputChannel; +}    export function activate(context: vscode.ExtensionContext) {    	let connectionPaused = false;  	const connectionPausedEvent = new vscode.EventEmitter<boolean>();   +	const { updateUrl, commit, quality, serverDataFolderName, serverApplicationName, dataFolderName } = getProductConfiguration(); +	const remoteDataDir = process.env['TESTRESOLVER_DATA_FOLDER'] || path.join(os.homedir(), `${serverDataFolderName || dataFolderName}-testresolver`); +	const serverBin = path.join(remoteDataDir, 'bin'); +  	function doResolve(_authority: string, progress: vscode.Progress<{ message?: string; increment?: number }>): Promise<vscode.ResolvedAuthority> {  		if (connectionPaused) {  			throw vscode.RemoteAuthorityResolverError.TemporarilyNotAvailable('Not available right now');  		}  		const connectionToken = String(crypto.randomInt(0xffffffffff)); +		const outputChannel = getOutputChannel();    		// eslint-disable-next-line no-async-promise-executor  		const serverPromise = new Promise<vscode.ResolvedAuthority>(async (res, rej) => {  			progress.report({ message: 'Starting Test Resolver' }); -			outputChannel = vscode.window.createOutputChannel('TestResolver');    			let isResolved = false;  			async function processError(message: string) { @@ -88,10 +98,8 @@ export function activate(context: vscode.ExtensionContext) {  				return;  			}   -			const { updateUrl, commit, quality, serverDataFolderName, serverApplicationName, dataFolderName } = getProductConfiguration();  			const commandArgs = ['--host=127.0.0.1', '--port=0', '--disable-telemetry', '--use-host-proxy', '--accept-server-license-terms'];  			const env = getNewEnv(); -			const remoteDataDir = process.env['TESTRESOLVER_DATA_FOLDER'] || path.join(os.homedir(), `${serverDataFolderName || dataFolderName}-testresolver`);  			const logsDir = process.env['TESTRESOLVER_LOGS_FOLDER'];  			if (logsDir) {  				commandArgs.push('--logsPath', logsDir); @@ -122,7 +130,6 @@ export function activate(context: vscode.ExtensionContext) {  				const serverCommand = `${serverApplicationName}${process.platform === 'win32' ? '.cmd' : ''}`;  				let serverLocation = env['VSCODE_REMOTE_SERVER_PATH']; // support environment variable to specify location of server on disk  				if (!serverLocation) { -					const serverBin = path.join(remoteDataDir, 'bin');  					progress.report({ message: 'Installing VSCode Server' });  					serverLocation = await downloadAndUnzipVSCodeServer(updateUrl, commit, quality, serverBin, m => outputChannel.appendLine(m));  				} @@ -231,7 +238,7 @@ export function activate(context: vscode.ExtensionContext) {  					const r: vscode.ResolverResult = new vscode.ResolvedAuthority('127.0.0.1', port, connectionToken);  					r.tunnelFeatures = {  						elevation: true, -						privacyOptions: vscode.workspace.getConfiguration('testresolver').get('supportPublicPorts') ? [ +						privacyOptions: getConfiguration('supportPublicPorts') ? [  							{  								id: 'public',  								label: 'Public', @@ -300,9 +307,7 @@ export function activate(context: vscode.ExtensionContext) {  		});  	}));  	context.subscriptions.push(vscode.commands.registerCommand('vscode-testresolver.showLog', () => { -		if (outputChannel) { -			outputChannel.show(); -		} +		getOutputChannel().show();  	}));    	const pauseStatusBarEntry = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left); @@ -351,6 +356,10 @@ export function activate(context: vscode.ExtensionContext) {    	}));  	vscode.commands.executeCommand('setContext', 'forwardedPortsViewEnabled', true); + +	if (getConfiguration('downloadServerInBackground')) { +		const backgroundDownloader = enableDownloadInBackground(serverBin, m => getOutputChannel().appendLine(m)); +	}  }    type ActionItem = (vscode.MessageItem & { execute: () => void }); @@ -393,7 +402,7 @@ export interface IProductConfiguration {  }    function getProductConfiguration(): IProductConfiguration { -	const content = fs.readFileSync(path.join(vscode.env.appRoot, 'product.json')).toString(); +	const content = readFileSync(path.join(vscode.env.appRoot, 'product.json')).toString();  	return JSON.parse(content) as IProductConfiguration;  }   @@ -420,7 +429,7 @@ async function showCandidatePort(_host: string, port: number, _detail: string):  }    async function tunnelFactory(tunnelOptions: vscode.TunnelOptions, tunnelCreationOptions: vscode.TunnelCreationOptions): Promise<vscode.Tunnel> { -	outputChannel.appendLine(`Tunnel factory request: Remote ${tunnelOptions.remoteAddress.port} -> local ${tunnelOptions.localAddressPort}`); +	getOutputChannel().appendLine(`Tunnel factory request: Remote ${tunnelOptions.remoteAddress.port} -> local ${tunnelOptions.localAddressPort}`);  	if (tunnelCreationOptions.elevationRequired) {  		await vscode.window.showInformationMessage('This is a fake elevation message. A real resolver would show a native elevation prompt.', { modal: true }, 'Ok');  	} @@ -474,7 +483,7 @@ async function tunnelFactory(tunnelOptions: vscode.TunnelOptions, tunnelCreation  			}  			proxyServer.listen(localPort, '127.0.0.1', () => {  				const localPort = (<net.AddressInfo>proxyServer.address()).port; -				outputChannel.appendLine(`New test resolver tunnel service: Remote ${tunnelOptions.remoteAddress.port} -> local ${localPort}`); +				getOutputChannel().appendLine(`New test resolver tunnel service: Remote ${tunnelOptions.remoteAddress.port} -> local ${localPort}`);  				const tunnel = newTunnel({ host: '127.0.0.1', port: localPort });  				tunnel.onDidDispose(() => proxyServer.close());  				res(tunnel); @@ -492,7 +501,7 @@ function runHTTPTestServer(port: number): vscode.Disposable {  	server.listen(port, '127.0.0.1');  	const message = `Opened HTTP server on http://127.0.0.1:${port}`;  	console.log(message); -	outputChannel.appendLine(message); +	getOutputChannel().appendLine(message);  	return {  		dispose: () => {  			server.close(); @@ -503,3 +512,42 @@ function runHTTPTestServer(port: number): vscode.Disposable {  		}  	};  } + +interface IUpdate { +	version: string; +	productVersion: string; +	supportsFastUpdate?: boolean; +	url?: string; +	hash?: string; +} + +export function enableDownloadInBackground(destDir: string, log: (messsage: string) => void): vscode.Disposable { +	const { updateUrl, quality } = getProductConfiguration(); +	let downloadedCommit: string | undefined = undefined; +	let archiveLocation: string | undefined; +	const handle = setInterval(async () => { +		try { +			const status = await vscode.commands.executeCommand('_update.state') as { state: string; update?: IUpdate }; +			if (status && status.update) { +				const commit = status.update.version; +				if (downloadedCommit !== commit) { +					if (archiveLocation) { +						fs.unlink(archiveLocation); +						archiveLocation = undefined; +					} +					archiveLocation = await downloadVSCodeServerArchive(updateUrl, commit, quality, destDir, log); +					downloadedCommit = commit; +				} +			} +		} catch (e) { +			log('Problems getting update information ' + String(e)); +		} +	}, 60 * 1000); + +	return { +		dispose: () => { +			clearInterval(handle); +		} +	}; +} +"
2faeb5268effa737597848c49261991bf0ab8058,src/vs/workbench/contrib/update/browser/update.ts,modified,4,0,4,https://github.com/microsoft/vscode/blob/2faeb5268effa737597848c49261991bf0ab8058/src%2Fvs%2Fworkbench%2Fcontrib%2Fupdate%2Fbrowser%2Fupdate.ts,https://github.com/microsoft/vscode/raw/2faeb5268effa737597848c49261991bf0ab8058/src%2Fvs%2Fworkbench%2Fcontrib%2Fupdate%2Fbrowser%2Fupdate.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fupdate%2Fbrowser%2Fupdate.ts?ref=2faeb5268effa737597848c49261991bf0ab8058,"@@ -437,6 +437,10 @@ export class UpdateContribution extends Disposable implements IWorkbenchContribu  			},  			when: CONTEXT_UPDATE_STATE.isEqualTo(StateType.Ready)  		}); + +		CommandsRegistry.registerCommand('_update.state', () => { +			return this.state; +		});  	}  }  "
e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,.stylelintrc.json,added,3,0,3,https://github.com/microsoft/vscode/blob/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/.stylelintrc.json,https://github.com/microsoft/vscode/raw/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/.stylelintrc.json,https://api.github.com/repos/microsoft/vscode/contents/.stylelintrc.json?ref=e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,"@@ -0,0 +1,3 @@ +{ +	""extends"": ""stylelint-config-standard"" +}"
e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,build/filters.js,modified,4,0,4,https://github.com/microsoft/vscode/blob/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/build%2Ffilters.js,https://github.com/microsoft/vscode/raw/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/build%2Ffilters.js,https://api.github.com/repos/microsoft/vscode/contents/build%2Ffilters.js?ref=e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,"@@ -194,3 +194,7 @@ module.exports.eslintFilter = [  		.filter(line => !!line)  		.map(line => `!${line}`)  ]; + +module.exports.stylelintFilter = [ +	'**/*.css' +];"
e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,build/stylelint.js,added,40,0,40,https://github.com/microsoft/vscode/blob/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/build%2Fstylelint.js,https://github.com/microsoft/vscode/raw/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/build%2Fstylelint.js,https://api.github.com/repos/microsoft/vscode/contents/build%2Fstylelint.js?ref=e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,"@@ -0,0 +1,40 @@ +/*--------------------------------------------------------------------------------------------- + *  Copyright (c) Microsoft Corporation. All rights reserved. + *  Licensed under the MIT License. See License.txt in the project root for license information. + *--------------------------------------------------------------------------------------------*/ + +const es = require('event-stream'); +const path = require('path'); +const vfs = require('vinyl-fs'); +const { stylelintFilter } = require('./filters'); + +function stylelint() { +	const gulpStylelint = require('gulp-stylelint'); +	return vfs +		.src(stylelintFilter, { base: '.', follow: true, allowEmpty: true }) +		.pipe( +			gulpStylelint({ +				configFile: path.join(__dirname, '../.stylelintrc.json'), +				failAfterError: true, +				reporters: [ +					{ formatter: 'verbose', console: true }, +					{ formatter: 'json', save: 'report.json' }, +				], +			}) +			// ) +			// .pipe( +			// 	gulpStylelint.results((results) => { +			// 		if (results.warningCount > 0 || results.errorCount > 0) { +			// 			throw new Error('stylelint failed with warnings and/or errors'); +			// 		} +			// 	}) +		).pipe(es.through(function () { /* noop, important for the stream to end */ })); +} + +if (require.main === module) { +	stylelint().on('error', (err) => { +		console.error(); +		console.error(err); +		process.exit(1); +	}); +}"
e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,package.json,modified,3,0,3,https://github.com/microsoft/vscode/blob/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/package.json,https://github.com/microsoft/vscode/raw/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/package.json,https://api.github.com/repos/microsoft/vscode/contents/package.json?ref=e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,"@@ -171,6 +171,7 @@      ""gulp-rename"": ""^1.2.0"",      ""gulp-replace"": ""^0.5.4"",      ""gulp-sourcemaps"": ""^3.0.0"", +    ""gulp-stylelint"": ""^13.0.0"",      ""gulp-svgmin"": ""^4.1.0"",      ""gulp-untar"": ""^0.0.7"",      ""gulp-vinyl-zip"": ""^2.1.2"", @@ -207,6 +208,8 @@      ""source-map"": ""0.6.1"",      ""source-map-support"": ""^0.3.2"",      ""style-loader"": ""^1.3.0"", +    ""stylelint"": ""^15.2.0"", +    ""stylelint-config-standard"": ""^30.0.1"",      ""ts-loader"": ""^9.2.7"",      ""ts-node"": ""^10.9.1"",      ""tsec"": ""0.1.4"","
e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,yarn.lock,modified,515,15,530,https://github.com/microsoft/vscode/blob/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/yarn.lock,https://github.com/microsoft/vscode/raw/e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0/yarn.lock,https://api.github.com/repos/microsoft/vscode/contents/yarn.lock?ref=e21b82cb93721fdddccdb5dcb59e5c80dcd33ae0,"@@ -310,6 +310,26 @@    dependencies:      ""@jridgewell/trace-mapping"" ""0.3.9""   +""@csstools/css-parser-algorithms@^2.0.1"": +  version ""2.0.1"" +  resolved ""https://registry.yarnpkg.com/@csstools/css-parser-algorithms/-/css-parser-algorithms-2.0.1.tgz#ff02629c7c95d1f4f8ea84d5ef1173461610535e"" +  integrity sha512-B9/8PmOtU6nBiibJg0glnNktQDZ3rZnGn/7UmDfrm2vMtrdlXO3p7ErE95N0up80IRk9YEtB5jyj/TmQ1WH3dw== + +""@csstools/css-tokenizer@^2.0.1"": +  version ""2.1.0"" +  resolved ""https://registry.yarnpkg.com/@csstools/css-tokenizer/-/css-tokenizer-2.1.0.tgz#fee4de3d444db3ce9007f3af6474af8ba3e4b930"" +  integrity sha512-dtqFyoJBHUxGi9zPZdpCKP1xk8tq6KPHJ/NY4qWXiYo6IcSGwzk3L8x2XzZbbyOyBs9xQARoGveU2AsgLj6D2A== + +""@csstools/media-query-list-parser@^2.0.1"": +  version ""2.0.1"" +  resolved ""https://registry.yarnpkg.com/@csstools/media-query-list-parser/-/media-query-list-parser-2.0.1.tgz#d85a366811563a5d002755ed10e5212a1613c91d"" +  integrity sha512-X2/OuzEbjaxhzm97UJ+95GrMeT29d1Ib+Pu+paGLuRWZnWRK9sI9r3ikmKXPWGA1C4y4JEdBEFpp9jEqCvLeRA== + +""@csstools/selector-specificity@^2.1.1"": +  version ""2.1.1"" +  resolved ""https://registry.yarnpkg.com/@csstools/selector-specificity/-/selector-specificity-2.1.1.tgz#c9c61d9fe5ca5ac664e1153bb0aa0eba1c6d6308"" +  integrity sha512-jwx+WCqszn53YHOfvFMJJRd/B2GqkCBt+1MJSG6o5/s8+ytHMvDZXsJgUEWLk12UnLd7HYKac4BYU5i/Ron1Cw== +  ""@discoveryjs/json-ext@^0.5.0"":    version ""0.5.3""    resolved ""https://registry.yarnpkg.com/@discoveryjs/json-ext/-/json-ext-0.5.3.tgz#90420f9f9c6d3987f176a19a7d8e764271a2f55d"" @@ -955,6 +975,11 @@    resolved ""https://registry.yarnpkg.com/@types/minimatch/-/minimatch-3.0.3.tgz#3dca0e3f33b200fc7d1139c0cd96c1268cadfd9d""    integrity sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA==   +""@types/minimist@^1.2.0"": +  version ""1.2.2"" +  resolved ""https://registry.yarnpkg.com/@types/minimist/-/minimist-1.2.2.tgz#ee771e2ba4b3dc5b372935d549fd9617bf345b8c"" +  integrity sha512-jhuKLIRrhvCPLqwPcx6INqmKeiA5EWrsCOPhrlFSrbrmU4ZMPjj5Ul/oLCMDO98XRUIwVm78xICz4EPCektzeQ== +  ""@types/minimist@^1.2.1"":    version ""1.2.1""    resolved ""https://registry.yarnpkg.com/@types/minimist/-/minimist-1.2.1.tgz#283f669ff76d7b8260df8ab7a4262cc83d988256"" @@ -993,6 +1018,11 @@    resolved ""https://registry.yarnpkg.com/@types/node/-/node-16.11.31.tgz#1dad8138efee6808809bb80f9e66bbe3e46c9277""    integrity sha512-wh/d0pcu/Ie2mqTIqh4tjd0mLAB4JWxOjHQtLN20HS7sjMHiV4Afr+90hITTyZcxowwha5wjv32jGEn1zkEFMg==   +""@types/normalize-package-data@^2.4.0"": +  version ""2.4.1"" +  resolved ""https://registry.yarnpkg.com/@types/normalize-package-data/-/normalize-package-data-2.4.1.tgz#d3357479a0fdfdd5907fe67e17e0a85c906e1301"" +  integrity sha512-Gj7cI7z+98M282Tqmp2K5EIsoouUEzbBJhQQzDE3jSIRk6r9gsz0oUokqIUR4u1R3dMHo0pDHM7sNOHyhulypw== +  ""@types/q@^1.5.1"":    version ""1.5.4""    resolved ""https://registry.yarnpkg.com/@types/q/-/q-1.5.4.tgz#15925414e0ad2cd765bfef58842f7e26a7accb24"" @@ -1705,6 +1735,16 @@ ajv@^6.1.0, ajv@^6.10.0, ajv@^6.10.2, ajv@^6.12.3, ajv@^6.12.4, ajv@^6.12.5, ajv      json-schema-traverse ""^0.4.1""      uri-js ""^4.2.2""   +ajv@^8.0.1: +  version ""8.12.0"" +  resolved ""https://registry.yarnpkg.com/ajv/-/ajv-8.12.0.tgz#d1a0527323e22f53562c567c00991577dfbe19d1"" +  integrity sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA== +  dependencies: +    fast-deep-equal ""^3.1.1"" +    json-schema-traverse ""^1.0.0"" +    require-from-string ""^2.0.2"" +    uri-js ""^4.2.2"" +  alphanum-sort@^1.0.0:    version ""1.0.2""    resolved ""https://registry.yarnpkg.com/alphanum-sort/-/alphanum-sort-1.0.2.tgz#97a1119649b211ad33691d9f9f486a8ec9fbe0a3"" @@ -1992,7 +2032,7 @@ array-unique@^0.3.2:    resolved ""https://registry.yarnpkg.com/array-unique/-/array-unique-0.3.2.tgz#a894b75d4bc4f6cd679ef3244a9fd8f46ae2d428""    integrity sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=   -arrify@^1.0.0: +arrify@^1.0.0, arrify@^1.0.1:    version ""1.0.1""    resolved ""https://registry.yarnpkg.com/arrify/-/arrify-1.0.1.tgz#898508da2226f380df904728456849c1501a4b0d""    integrity sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0= @@ -2049,6 +2089,11 @@ astral-regex@^1.0.0:    resolved ""https://registry.yarnpkg.com/astral-regex/-/astral-regex-1.0.0.tgz#6c8c3fb827dd43ee3918f27b82782ab7658a6fd9""    integrity sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg==   +astral-regex@^2.0.0: +  version ""2.0.0"" +  resolved ""https://registry.yarnpkg.com/astral-regex/-/astral-regex-2.0.0.tgz#483143c567aeed4785759c0865786dc77d7d2e31"" +  integrity sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ== +  async-done@^1.2.0, async-done@^1.2.2:    version ""1.3.2""    resolved ""https://registry.yarnpkg.com/async-done/-/async-done-1.3.2.tgz#5e15aa729962a4b07414f528a88cdf18e0b290a2"" @@ -2123,6 +2168,11 @@ balanced-match@^1.0.0:    resolved ""https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.2.tgz#e83e3a7e3f300b34cb9d87f615fa0cbf357690ee""    integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==   +balanced-match@^2.0.0: +  version ""2.0.0"" +  resolved ""https://registry.yarnpkg.com/balanced-match/-/balanced-match-2.0.0.tgz#dc70f920d78db8b858535795867bf48f820633d9"" +  integrity sha512-1ugUSr8BHXRnK23KfuYS+gVMC3LB8QGH9W1iGtDPsNWoQbgtXSExkBu2aDR4epiGWZOjZsj6lDl/N/AqqTC3UA== +  base64-js@^1.0.2, base64-js@^1.3.1, base64-js@^1.5.1:    version ""1.5.1""    resolved ""https://registry.yarnpkg.com/base64-js/-/base64-js-1.5.1.tgz#1b1b440160a5bf7ad40b650f095963481903930a"" @@ -2556,6 +2606,15 @@ callsites@^3.0.0:    resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73""    integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==   +camelcase-keys@^6.2.2: +  version ""6.2.2"" +  resolved ""https://registry.yarnpkg.com/camelcase-keys/-/camelcase-keys-6.2.2.tgz#5e755d6ba51aa223ec7d3d52f25778210f9dc3c0"" +  integrity sha512-YrwaA0vEKazPBkn0ipTiMpSajYDSe+KjQfrjhcBMxJt/znbvlHd8Pw/Vamaz5EB4Wfhs3SUR3Z9mwRu/P3s3Yg== +  dependencies: +    camelcase ""^5.3.1"" +    map-obj ""^4.0.0"" +    quick-lru ""^4.0.1"" +  camelcase@^3.0.0:    version ""3.0.0""    resolved ""https://registry.yarnpkg.com/camelcase/-/camelcase-3.0.0.tgz#32fc4b9fcdaf845fcdf7e73bb97cac2261f0ab0a"" @@ -2616,6 +2675,14 @@ chalk@^2.0.0, chalk@^2.1.0, chalk@^2.4.1, chalk@^2.4.2:      escape-string-regexp ""^1.0.5""      supports-color ""^5.3.0""   +chalk@^3.0.0: +  version ""3.0.0"" +  resolved ""https://registry.yarnpkg.com/chalk/-/chalk-3.0.0.tgz#3f73c2bf526591f574cc492c51e2456349f844e4"" +  integrity sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg== +  dependencies: +    ansi-styles ""^4.1.0"" +    supports-color ""^7.1.0"" +  chalk@^4.0.0, chalk@^4.1.0:    version ""4.1.0""    resolved ""https://registry.yarnpkg.com/chalk/-/chalk-4.1.0.tgz#4e14870a618d9e2edd97dd8345fd9d9dc315646a"" @@ -2949,6 +3016,11 @@ color@^3.0.0:      color-convert ""^1.9.1""      color-string ""^1.5.4""   +colord@^2.9.3: +  version ""2.9.3"" +  resolved ""https://registry.yarnpkg.com/colord/-/colord-2.9.3.tgz#4f8ce919de456f1d5c1c368c307fe20f3e59fb43"" +  integrity sha512-jeC1axXpnb0/2nn/Y1LPuLdgXBLH7aDcHu4KEKfqw3CUhX7ZpfBSlPKyqXE6btIgEzfWtrX3/tyBCaCvXvMkOw== +  colorette@^1.2.1, colorette@^1.2.2:    version ""1.2.2""    resolved ""https://registry.yarnpkg.com/colorette/-/colorette-1.2.2.tgz#cbcc79d5e99caea2dbf10eb3a26fd8b3e6acfa94"" @@ -3165,6 +3237,16 @@ cosmiconfig@^5.0.0:      js-yaml ""^3.13.1""      parse-json ""^4.0.0""   +cosmiconfig@^8.0.0: +  version ""8.1.0"" +  resolved ""https://registry.yarnpkg.com/cosmiconfig/-/cosmiconfig-8.1.0.tgz#947e174c796483ccf0a48476c24e4fefb7e1aea8"" +  integrity sha512-0tLZ9URlPGU7JsKq0DQOQ3FoRsYX8xDZ7xMiATQfaiGMz7EHowNkbU9u1coAOmnh9p/1ySpm0RB3JNWRXM5GCg== +  dependencies: +    import-fresh ""^3.2.1"" +    js-yaml ""^4.1.0"" +    parse-json ""^5.0.0"" +    path-type ""^4.0.0"" +  create-ecdh@^4.0.0:    version ""4.0.4""    resolved ""https://registry.yarnpkg.com/create-ecdh/-/create-ecdh-4.0.4.tgz#d6e7f4bffa66736085a0762fd3a632684dabcc4e"" @@ -3263,6 +3345,11 @@ css-declaration-sorter@^4.0.1:      postcss ""^7.0.1""      timsort ""^0.3.0""   +css-functions-list@^3.1.0: +  version ""3.1.0"" +  resolved ""https://registry.yarnpkg.com/css-functions-list/-/css-functions-list-3.1.0.tgz#cf5b09f835ad91a00e5959bcfc627cd498e1321b"" +  integrity sha512-/9lCvYZaUbBGvYUgYGFJ4dcYiyqdhSjG7IPVluoV8A1ILjkF7ilmhp1OGUz8n+nmBcu0RNrQAzgD8B6FJbrt2w== +  css-loader@^3.6.0:    version ""3.6.0""    resolved ""https://registry.yarnpkg.com/css-loader/-/css-loader-3.6.0.tgz#2e4b2c7e6e2d27f8c8f28f61bffcd2e6c91ef645"" @@ -3332,6 +3419,14 @@ css-tree@^1.1.3:      mdn-data ""2.0.14""      source-map ""^0.6.1""   +css-tree@^2.3.1: +  version ""2.3.1"" +  resolved ""https://registry.yarnpkg.com/css-tree/-/css-tree-2.3.1.tgz#10264ce1e5442e8572fc82fbe490644ff54b5c20"" +  integrity sha512-6Fv1DV/TYw//QF5IzQdqsNDjx/wc8TrMBZsqjL9eW01tWb7R7k/mq+/VXfJCl7SoD5emsJop9cOByJZfs8hYIw== +  dependencies: +    mdn-data ""2.0.30"" +    source-map-js ""^1.0.1"" +  css-what@^3.2.1:    version ""3.4.2""    resolved ""https://registry.yarnpkg.com/css-what/-/css-what-3.4.2.tgz#ea7026fcb01777edbde52124e21f327e7ae950e4"" @@ -3521,7 +3616,15 @@ debug@^4.3.4:    dependencies:      ms ""2.1.2""   -decamelize@^1.1.1, decamelize@^1.2.0: +decamelize-keys@^1.1.0: +  version ""1.1.1"" +  resolved ""https://registry.yarnpkg.com/decamelize-keys/-/decamelize-keys-1.1.1.tgz#04a2d523b2f18d80d0158a43b895d56dff8d19d8"" +  integrity sha512-WiPxgEirIV0/eIOMcnFBA3/IJZAZqKnwAwWyvvdi4lsr1WCN22nhdf/3db3DoZcUjTV2SqfzIwNyp6y2xs3nmg== +  dependencies: +    decamelize ""^1.1.0"" +    map-obj ""^1.0.0"" + +decamelize@^1.1.0, decamelize@^1.1.1, decamelize@^1.2.0:    version ""1.2.0""    resolved ""https://registry.yarnpkg.com/decamelize/-/decamelize-1.2.0.tgz#f6534d15148269b20352e7bee26f501f9a191290""    integrity sha1-9lNNFRSCabIDUue+4m9QH5oZEpA= @@ -4618,6 +4721,17 @@ fast-glob@^3.2.11, fast-glob@^3.2.5, fast-glob@^3.2.9:      merge2 ""^1.3.0""      micromatch ""^4.0.4""   +fast-glob@^3.2.12: +  version ""3.2.12"" +  resolved ""https://registry.yarnpkg.com/fast-glob/-/fast-glob-3.2.12.tgz#7f39ec99c2e6ab030337142da9e0c18f37afae80"" +  integrity sha512-DVj4CQIYYow0BlaelwK1pHl5n5cRSJfM60UA0zK891sVInoPri2Ekj7+e1CT3/3qxXenpI+nBBmQAcJPJgaj4w== +  dependencies: +    ""@nodelib/fs.stat"" ""^2.0.2"" +    ""@nodelib/fs.walk"" ""^1.2.3"" +    glob-parent ""^5.1.2"" +    merge2 ""^1.3.0"" +    micromatch ""^4.0.4"" +  fast-json-stable-stringify@^2.0.0:    version ""2.1.0""    resolved ""https://registry.yarnpkg.com/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz#874bf69c6f404c2b5d99c481341399fd55892633"" @@ -4643,6 +4757,11 @@ fastest-levenshtein@^1.0.12:    resolved ""https://registry.yarnpkg.com/fastest-levenshtein/-/fastest-levenshtein-1.0.12.tgz#9990f7d3a88cc5a9ffd1f1745745251700d497e2""    integrity sha512-On2N+BpYJ15xIC974QNVuYGMOlEVt4s0EOI3wwMqOmK1fdDY+FN/zltPV8vosq4ad4c/gJ1KHScUn/6AWIgiow==   +fastest-levenshtein@^1.0.16: +  version ""1.0.16"" +  resolved ""https://registry.yarnpkg.com/fastest-levenshtein/-/fastest-levenshtein-1.0.16.tgz#210e61b6ff181de91ea9b3d1b84fdedd47e034e5"" +  integrity sha512-eRnCtTTtGZFpQCwhJiUOuxPQWRXVKYDn0b2PeHfXL6/Zi53SLAzAHfVhVWK2AryC/WH05kGfxhFIPvTF0SXQzg== +  fastq@^1.6.0:    version ""1.9.0""    resolved ""https://registry.yarnpkg.com/fastq/-/fastq-1.9.0.tgz#e16a72f338eaca48e91b5c23593bcc2ef66b7947"" @@ -5264,6 +5383,13 @@ global-modules@^1.0.0:      is-windows ""^1.0.1""      resolve-dir ""^1.0.0""   +global-modules@^2.0.0: +  version ""2.0.0"" +  resolved ""https://registry.yarnpkg.com/global-modules/-/global-modules-2.0.0.tgz#997605ad2345f27f51539bea26574421215c7780"" +  integrity sha512-NGbfmJBp9x8IxyJSd1P+otYK8vonoJactOogrVfFRIAEY1ukil8RSKDz2Yo7wh1oihl51l/r6W4epkeKJHqL8A== +  dependencies: +    global-prefix ""^3.0.0"" +  global-prefix@^1.0.1:    version ""1.0.2""    resolved ""https://registry.yarnpkg.com/global-prefix/-/global-prefix-1.0.2.tgz#dbf743c6c14992593c655568cb66ed32c0122ebe"" @@ -5275,6 +5401,15 @@ global-prefix@^1.0.1:      is-windows ""^1.0.1""      which ""^1.2.14""   +global-prefix@^3.0.0: +  version ""3.0.0"" +  resolved ""https://registry.yarnpkg.com/global-prefix/-/global-prefix-3.0.0.tgz#fc85f73064df69f50421f47f883fe5b913ba9b97"" +  integrity sha512-awConJSVCHVGND6x3tmMaKcQvwXLhjdkmomy2W+Goaui8YPgYgXJZewhg3fWC+DlfqqQuWg8AwqjGTD2nAPVWg== +  dependencies: +    ini ""^1.3.5"" +    kind-of ""^6.0.2"" +    which ""^1.3.1"" +  global-tunnel-ng@^2.7.1:    version ""2.7.1""    resolved ""https://registry.yarnpkg.com/global-tunnel-ng/-/global-tunnel-ng-2.7.1.tgz#d03b5102dfde3a69914f5ee7d86761ca35d57d8f"" @@ -5328,6 +5463,11 @@ globby@^11.1.0:      merge2 ""^1.4.1""      slash ""^3.0.0""   +globjoin@^0.1.4: +  version ""0.1.4"" +  resolved ""https://registry.yarnpkg.com/globjoin/-/globjoin-0.1.4.tgz#2f4494ac8919e3767c5cbb691e9f463324285d43"" +  integrity sha512-xYfnw62CKG8nLkZBfWbhWwDw02CHty86jfPcc2cr3ZfeuK9ysoVPPEUxf21bAD/rWAgk52SuBrLJlefNy8mvFg== +  glogg@^1.0.0:    version ""1.0.2""    resolved ""https://registry.yarnpkg.com/glogg/-/glogg-1.0.2.tgz#2d7dd702beda22eb3bffadf880696da6d846313f"" @@ -5583,6 +5723,18 @@ gulp-sourcemaps@^3.0.0:      strip-bom-string ""^1.0.0""      through2 ""^2.0.0""   +gulp-stylelint@^13.0.0: +  version ""13.0.0"" +  resolved ""https://registry.yarnpkg.com/gulp-stylelint/-/gulp-stylelint-13.0.0.tgz#c66a43ec09bc3bd28c18711218759692349eed1b"" +  integrity sha512-qFWBXnYDsGy6ttzqptctMZjJhhGc0FdFE+UNPlj/5fTyuUo5mfxcc7pzN4hIJnvB79BO1WikLtdtXuC/G2AhGA== +  dependencies: +    chalk ""^3.0.0"" +    fancy-log ""^1.3.3"" +    plugin-error ""^1.0.1"" +    source-map ""^0.7.3"" +    strip-ansi ""^6.0.0"" +    through2 ""^3.0.1"" +  gulp-svgmin@^4.1.0:    version ""4.1.0""    resolved ""https://registry.yarnpkg.com/gulp-svgmin/-/gulp-svgmin-4.1.0.tgz#38c7928663b036a676c56e78cc62fd3f906a0133"" @@ -5656,6 +5808,11 @@ har-validator@~5.1.3:      ajv ""^6.12.3""      har-schema ""^2.0.0""   +hard-rejection@^2.1.0: +  version ""2.1.0"" +  resolved ""https://registry.yarnpkg.com/hard-rejection/-/hard-rejection-2.1.0.tgz#1c6eda5c1685c63942766d79bb40ae773cecd883"" +  integrity sha512-VIZB+ibDhx7ObhAe7OVtoEbuP4h/MuOTHJ+J8h/eBXotJYl0fBgR72xDFCKgIh22OJZIOVNxBMWuhAr10r8HdA== +  has-ansi@^2.0.0:    version ""2.0.0""    resolved ""https://registry.yarnpkg.com/has-ansi/-/has-ansi-2.0.0.tgz#34f5049ce1ecdf2b0649af3ef24e45ed35416d91"" @@ -5779,6 +5936,13 @@ hosted-git-info@^2.1.4:    resolved ""https://registry.yarnpkg.com/hosted-git-info/-/hosted-git-info-2.8.9.tgz#dffc0bf9a21c02209090f2aa69429e1414daf3f9""    integrity sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==   +hosted-git-info@^4.0.1: +  version ""4.1.0"" +  resolved ""https://registry.yarnpkg.com/hosted-git-info/-/hosted-git-info-4.1.0.tgz#827b82867e9ff1c8d0c4d9d53880397d2c86d224"" +  integrity sha512-kyCuEOWjJqZuDbRHzL8V93NzQhwIB71oFWSyzVo+KPZI+pnQPPxucdkrOZvkLRnrf5URsQM+IJ09Dw29cRALIA== +  dependencies: +    lru-cache ""^6.0.0"" +  hsl-regex@^1.0.0:    version ""1.0.0""    resolved ""https://registry.yarnpkg.com/hsl-regex/-/hsl-regex-1.0.0.tgz#d49330c789ed819e276a4c0d272dffa30b18fe6e"" @@ -5801,6 +5965,11 @@ html-escaper@^2.0.0:    resolved ""https://registry.yarnpkg.com/html-escaper/-/html-escaper-2.0.0.tgz#71e87f931de3fe09e56661ab9a29aadec707b491""    integrity sha512-a4u9BeERWGu/S8JiWEAQcdrg9v4QArtP9keViQjGMdff20fBdd8waotXaNmODqBe6uZ3Nafi7K/ho4gCQHV3Ig==   +html-tags@^3.2.0: +  version ""3.2.0"" +  resolved ""https://registry.yarnpkg.com/html-tags/-/html-tags-3.2.0.tgz#dbb3518d20b726524e4dd43de397eb0a95726961"" +  integrity sha512-vy7ClnArOZwCnqZgvv+ddgHgJiAFXe3Ge9ML5/mBctVJoUoYPCdxVucOywjDARn6CVoh3dRSFdPHy2sX80L0Wg== +  http-assert@^1.3.0:    version ""1.5.0""    resolved ""https://registry.yarnpkg.com/http-assert/-/http-assert-1.5.0.tgz#c389ccd87ac16ed2dfa6246fd73b926aa00e6b8f"" @@ -6004,6 +6173,11 @@ ignore@^5.2.0:    resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.2.0.tgz#6d3bac8fa7fe0d45d9f9be7bac2fc279577e345a""    integrity sha512-CmxgYGiEPCLhfLnpPp1MoRmifwEIOgjcHXxOBjv7mY96c+eWScsOP9c112ZyLdWHi0FxHjI+4uVhKYp/gcdRmQ==   +ignore@^5.2.4: +  version ""5.2.4"" +  resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.2.4.tgz#a291c0c6178ff1b960befe47fcdec301674a6324"" +  integrity sha512-MAb38BcSbH0eHNBxn7ql2NH/kX33OkB3lZ1BNdh7ENeRChHTYsTvWrMubiIAMNS2llXEEgZ1MUOBtXChP3kaFQ== +  import-cwd@^2.0.0:    version ""2.1.0""    resolved ""https://registry.yarnpkg.com/import-cwd/-/import-cwd-2.1.0.tgz#aa6cf36e722761285cb371ec6519f53e2435b0a9"" @@ -6034,6 +6208,11 @@ import-from@^2.1.0:    dependencies:      resolve-from ""^3.0.0""   +import-lazy@^4.0.0: +  version ""4.0.0"" +  resolved ""https://registry.yarnpkg.com/import-lazy/-/import-lazy-4.0.0.tgz#e8eb627483a0a43da3c03f3e35548be5cb0cc153"" +  integrity sha512-rKtvo6a868b5Hu3heneU+L4yEQ4jYKLtjpnPeUdK7h0yzXGmyBTypknlkCvHFBqfX9YlorEiMM6Dnq/5atfHkw== +  import-local@^3.0.2:    version ""3.0.2""    resolved ""https://registry.yarnpkg.com/import-local/-/import-local-3.0.2.tgz#a8cfd0431d1de4a2199703d003e3e62364fa6db6"" @@ -6085,7 +6264,7 @@ inherits@2.0.3:    resolved ""https://registry.yarnpkg.com/inherits/-/inherits-2.0.3.tgz#633c2c83e3da42a502f52466022480f4208261de""    integrity sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=   -ini@^1.3.4, ini@~1.3.0: +ini@^1.3.4, ini@^1.3.5, ini@~1.3.0:    version ""1.3.8""    resolved ""https://registry.yarnpkg.com/ini/-/ini-1.3.8.tgz#a29da425b48806f34767a4efce397269af28432c""    integrity sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew== @@ -6257,6 +6436,13 @@ is-core-module@^2.2.0:    dependencies:      has ""^1.0.3""   +is-core-module@^2.5.0: +  version ""2.11.0"" +  resolved ""https://registry.yarnpkg.com/is-core-module/-/is-core-module-2.11.0.tgz#ad4cb3e3863e814523c96f3f58d26cc570ff0144"" +  integrity sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw== +  dependencies: +    has ""^1.0.3"" +  is-data-descriptor@^0.1.4:    version ""0.1.4""    resolved ""https://registry.yarnpkg.com/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz#0b5ee648388e2c860282e793f1856fec3f301b56"" @@ -6401,7 +6587,7 @@ is-obj@^2.0.0:    resolved ""https://registry.yarnpkg.com/is-obj/-/is-obj-2.0.0.tgz#473fb05d973705e3fd9620545018ca8e22ef4982""    integrity sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==   -is-plain-obj@^1.1: +is-plain-obj@^1.1, is-plain-obj@^1.1.0:    version ""1.1.0""    resolved ""https://registry.yarnpkg.com/is-plain-obj/-/is-plain-obj-1.1.0.tgz#71a50c8429dfca773c92a390a4a03b39fcd51d3e""    integrity sha1-caUMhCnfync8kqOQpKA7OfzVHT4= @@ -6699,11 +6885,21 @@ json-parse-better-errors@^1.0.1, json-parse-better-errors@^1.0.2:    resolved ""https://registry.yarnpkg.com/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz#bb867cfb3450e69107c131d1c514bab3dc8bcaa9""    integrity sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==   +json-parse-even-better-errors@^2.3.0: +  version ""2.3.1"" +  resolved ""https://registry.yarnpkg.com/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz#7c47805a94319928e05777405dc12e1f7a4ee02d"" +  integrity sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w== +  json-schema-traverse@^0.4.1:    version ""0.4.1""    resolved ""https://registry.yarnpkg.com/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz#69f6a87d9513ab8bb8fe63bdb0979c448e684660""    integrity sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==   +json-schema-traverse@^1.0.0: +  version ""1.0.0"" +  resolved ""https://registry.yarnpkg.com/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz#ae7bcb3656ab77a73ba5c49bf654f38e6b6860e2"" +  integrity sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug== +  json-schema@0.2.3:    version ""0.2.3""    resolved ""https://registry.yarnpkg.com/json-schema/-/json-schema-0.2.3.tgz#b480c892e59a2f05954ce727bd3f2a4e882f9e13"" @@ -6804,11 +7000,16 @@ kind-of@^5.0.0, kind-of@^5.0.2:    resolved ""https://registry.yarnpkg.com/kind-of/-/kind-of-5.1.0.tgz#729c91e2d857b7a419a1f9aa65685c4c33f5845d""    integrity sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==   -kind-of@^6.0.0, kind-of@^6.0.2: +kind-of@^6.0.0, kind-of@^6.0.2, kind-of@^6.0.3:    version ""6.0.3""    resolved ""https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.3.tgz#07c05034a6c349fa06e24fa35aa76db4580ce4dd""    integrity sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==   +known-css-properties@^0.26.0: +  version ""0.26.0"" +  resolved ""https://registry.yarnpkg.com/known-css-properties/-/known-css-properties-0.26.0.tgz#008295115abddc045a9f4ed7e2a84dc8b3a77649"" +  integrity sha512-5FZRzrZzNTBruuurWpvZnvP9pum+fe0HcK8z/ooo+U+Hmp4vtbyp1/QDsqmufirXy4egGzbaH/y2uCZf+6W5Kg== +  koa-compose@^4.1.0:    version ""4.1.0""    resolved ""https://registry.yarnpkg.com/koa-compose/-/koa-compose-4.1.0.tgz#507306b9371901db41121c812e923d0d67d3e877"" @@ -6954,6 +7155,11 @@ liftoff@^3.1.0:      rechoir ""^0.6.2""      resolve ""^1.1.7""   +lines-and-columns@^1.1.6: +  version ""1.2.4"" +  resolved ""https://registry.yarnpkg.com/lines-and-columns/-/lines-and-columns-1.2.4.tgz#eca284f75d2965079309dc0ad9255abb2ebc1632"" +  integrity sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg== +  load-json-file@^1.0.0:    version ""1.1.0""    resolved ""https://registry.yarnpkg.com/load-json-file/-/load-json-file-1.1.0.tgz#956905708d58b4bab4c2261b04f59f31c99374c0"" @@ -7060,6 +7266,11 @@ lodash.some@^4.2.2:    resolved ""https://registry.yarnpkg.com/lodash.some/-/lodash.some-4.6.0.tgz#1bb9f314ef6b8baded13b549169b2a945eb68e4d""    integrity sha1-G7nzFO9ri63tE7VJFpsqlF62jk0=   +lodash.truncate@^4.4.2: +  version ""4.4.2"" +  resolved ""https://registry.yarnpkg.com/lodash.truncate/-/lodash.truncate-4.4.2.tgz#5a350da0b1113b837ecfffd5812cbe58d6eae193"" +  integrity sha512-jttmRe7bRse52OsWIMDLaXxWqRAmtIUccAQ3garviCqJjafXOfNMO0yMfNpdD6zbGaTU0P5Nz7e7gAT6cKmJRw== +  lodash.uniq@^4.5.0:    version ""4.5.0""    resolved ""https://registry.yarnpkg.com/lodash.uniq/-/lodash.uniq-4.5.0.tgz#d0225373aeb652adc1bc82e4945339a842754773"" @@ -7178,6 +7389,16 @@ map-cache@^0.2.0, map-cache@^0.2.2:    resolved ""https://registry.yarnpkg.com/map-cache/-/map-cache-0.2.2.tgz#c32abd0bd6525d9b051645bb4f26ac5dc98a0dbf""    integrity sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=   +map-obj@^1.0.0: +  version ""1.0.1"" +  resolved ""https://registry.yarnpkg.com/map-obj/-/map-obj-1.0.1.tgz#d933ceb9205d82bdcf4886f6742bdc2b4dea146d"" +  integrity sha512-7N/q3lyZ+LVCp7PzuxrJr4KMbBE2hW7BT7YNia330OFxIf4d3r5zVpicP2650l7CPN6RM9zOJRl3NGpqSiw3Eg== + +map-obj@^4.0.0: +  version ""4.3.0"" +  resolved ""https://registry.yarnpkg.com/map-obj/-/map-obj-4.3.0.tgz#9304f906e93faae70880da102a9f1df0ea8bb05a"" +  integrity sha512-hdN1wVrZbb29eBGiGjJbeP8JbKjq1urkHJ/LIP/NY48MZ1QVXUsQBV1G1zvYFHn1XE06cwjBsOI2K3Ulnj1YXQ== +  map-stream@0.0.7:    version ""0.0.7""    resolved ""https://registry.yarnpkg.com/map-stream/-/map-stream-0.0.7.tgz#8a1f07896d82b10926bd3744a2420009f88974a8"" @@ -7212,6 +7433,11 @@ matcher@^3.0.0:    dependencies:      escape-string-regexp ""^4.0.0""   +mathml-tag-names@^2.1.3: +  version ""2.1.3"" +  resolved ""https://registry.yarnpkg.com/mathml-tag-names/-/mathml-tag-names-2.1.3.tgz#4ddadd67308e780cf16a47685878ee27b736a0a3"" +  integrity sha512-APMBEanjybaPzUrfqU0IMU5I0AswKMH7k8OTLs0vvV4KZpExkTkY87nR/zpbuTPj+gARop7aGUbl11pnDfW6xg== +  md5.js@^1.3.4:    version ""1.3.5""    resolved ""https://registry.yarnpkg.com/md5.js/-/md5.js-1.3.5.tgz#b5d07b8e3216e3e27cd728d72f70d1e6a342005f"" @@ -7235,6 +7461,11 @@ mdn-data@2.0.14:    resolved ""https://registry.yarnpkg.com/mdn-data/-/mdn-data-2.0.14.tgz#7113fc4281917d63ce29b43446f701e68c25ba50""    integrity sha512-dn6wd0uw5GsdswPFfsgMp5NSB0/aDe6fK94YJV/AJDYXL6HVLWBsxeq7js7Ad+mU2K9LAlwpk6kN2D5mwCPVow==   +mdn-data@2.0.30: +  version ""2.0.30"" +  resolved ""https://registry.yarnpkg.com/mdn-data/-/mdn-data-2.0.30.tgz#ce4df6f80af6cfbe218ecd5c552ba13c4dfa08cc"" +  integrity sha512-GaqWWShW4kv/G9IEucWScBx9G1/vsFZZJUO+tD26M8J8z3Kw5RDQjaoZe03YAClgeS/SWPOcb4nkFBTEi5DUEA== +  mdn-data@2.0.4:    version ""2.0.4""    resolved ""https://registry.yarnpkg.com/mdn-data/-/mdn-data-2.0.4.tgz#699b3c38ac6f1d728091a64650b65d388502fd5b"" @@ -7289,6 +7520,24 @@ memorystream@^0.3.1:    resolved ""https://registry.yarnpkg.com/memorystream/-/memorystream-0.3.1.tgz#86d7090b30ce455d63fbae12dda51a47ddcaf9b2""    integrity sha1-htcJCzDORV1j+64S3aUaR93K+bI=   +meow@^9.0.0: +  version ""9.0.0"" +  resolved ""https://registry.yarnpkg.com/meow/-/meow-9.0.0.tgz#cd9510bc5cac9dee7d03c73ee1f9ad959f4ea364"" +  integrity sha512-+obSblOQmRhcyBt62furQqRAQpNyWXo8BuQ5bN7dG8wmwQ+vwHKp/rCFD4CrTP8CsDQD1sjoZ94K417XEUk8IQ== +  dependencies: +    ""@types/minimist"" ""^1.2.0"" +    camelcase-keys ""^6.2.2"" +    decamelize ""^1.2.0"" +    decamelize-keys ""^1.1.0"" +    hard-rejection ""^2.1.0"" +    minimist-options ""4.1.0"" +    normalize-package-data ""^3.0.0"" +    read-pkg-up ""^7.0.1"" +    redent ""^3.0.0"" +    trim-newlines ""^3.0.0"" +    type-fest ""^0.18.0"" +    yargs-parser ""^20.2.3"" +  merge-options@^1.0.1:    version ""1.0.1""    resolved ""https://registry.yarnpkg.com/merge-options/-/merge-options-1.0.1.tgz#2a64b24457becd4e4dc608283247e94ce589aa32"" @@ -7428,6 +7677,11 @@ mimic-response@^3.1.0:    resolved ""https://registry.yarnpkg.com/mimic-response/-/mimic-response-3.1.0.tgz#2d1d59af9c1b129815accc2c46a022a5ce1fa3c9""    integrity sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==   +min-indent@^1.0.0: +  version ""1.0.1"" +  resolved ""https://registry.yarnpkg.com/min-indent/-/min-indent-1.0.1.tgz#a63f681673b30571fbe8bc25686ae746eefa9869"" +  integrity sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg== +  minimalistic-assert@^1.0.0, minimalistic-assert@^1.0.1:    version ""1.0.1""    resolved ""https://registry.yarnpkg.com/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz#2e194de044626d4a10e7f7fbc00ce73e83e4d5c7"" @@ -7459,6 +7713,15 @@ minimatch@^5.0.1, minimatch@^5.1.0:    dependencies:      brace-expansion ""^2.0.1""   +minimist-options@4.1.0: +  version ""4.1.0"" +  resolved ""https://registry.yarnpkg.com/minimist-options/-/minimist-options-4.1.0.tgz#c0655713c53a8a2ebd77ffa247d342c40f010619"" +  integrity sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A== +  dependencies: +    arrify ""^1.0.1"" +    is-plain-obj ""^1.1.0"" +    kind-of ""^6.0.3"" +  minimist@^1.2.0, minimist@^1.2.3, minimist@^1.2.5, minimist@^1.2.6, minimist@^1.2.7:    version ""1.2.7""    resolved ""https://registry.yarnpkg.com/minimist/-/minimist-1.2.7.tgz#daa1c4d91f507390437c6a8bc01078e7000c4d18"" @@ -7675,6 +7938,11 @@ nanoid@3.3.1:    resolved ""https://registry.yarnpkg.com/nanoid/-/nanoid-3.3.1.tgz#6347a18cac88af88f58af0b3594b723d5e99bb35""    integrity sha512-n6Vs/3KGyxPQd6uO0eH4Bv0ojGSUvuLlIHtC3Y0kEO23YRge8H9x1GCzLn28YX0H66pMkxuaeESFq4tKISKwdw==   +nanoid@^3.3.4: +  version ""3.3.4"" +  resolved ""https://registry.yarnpkg.com/nanoid/-/nanoid-3.3.4.tgz#730b67e3cd09e2deacf03c027c81c9d9dbc5e8ab"" +  integrity sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw== +  nanomatch@^1.2.9:    version ""1.2.13""    resolved ""https://registry.yarnpkg.com/nanomatch/-/nanomatch-1.2.13.tgz#b87a8aa4fc0de8fe6be88895b38983ff265bd119"" @@ -7866,7 +8134,7 @@ nopt@~4.0.1:      abbrev ""1""      osenv ""^0.1.4""   -normalize-package-data@^2.3.2: +normalize-package-data@^2.3.2, normalize-package-data@^2.5.0:    version ""2.5.0""    resolved ""https://registry.yarnpkg.com/normalize-package-data/-/normalize-package-data-2.5.0.tgz#e66db1838b200c1dfc233225d12cb36520e234a8""    integrity sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA== @@ -7876,6 +8144,16 @@ normalize-package-data@^2.3.2:      semver ""2 || 3 || 4 || 5""      validate-npm-package-license ""^3.0.1""   +normalize-package-data@^3.0.0: +  version ""3.0.3"" +  resolved ""https://registry.yarnpkg.com/normalize-package-data/-/normalize-package-data-3.0.3.tgz#dbcc3e2da59509a0983422884cd172eefdfa525e"" +  integrity sha512-p2W1sgqij3zMMyRC067Dg16bfzVH+w7hyegmpIvZ4JNjqtGOVAIvLmjBx3yP7YTe9vKJgkoNOPjwQGogDoMXFA== +  dependencies: +    hosted-git-info ""^4.0.1"" +    is-core-module ""^2.5.0"" +    semver ""^7.3.4"" +    validate-npm-package-license ""^3.0.1"" +  normalize-path@^1.0.0:    version ""1.0.0""    resolved ""https://registry.yarnpkg.com/normalize-path/-/normalize-path-1.0.0.tgz#32d0e472f91ff345701c15a8311018d3b0a90379"" @@ -8356,6 +8634,16 @@ parse-json@^4.0.0:      error-ex ""^1.3.1""      json-parse-better-errors ""^1.0.1""   +parse-json@^5.0.0: +  version ""5.2.0"" +  resolved ""https://registry.yarnpkg.com/parse-json/-/parse-json-5.2.0.tgz#c76fc66dee54231c962b22bcc8a72cf2f99753cd"" +  integrity sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg== +  dependencies: +    ""@babel/code-frame"" ""^7.0.0"" +    error-ex ""^1.3.1"" +    json-parse-even-better-errors ""^2.3.0"" +    lines-and-columns ""^1.1.6"" +  parse-node-version@^1.0.0:    version ""1.0.1""    resolved ""https://registry.yarnpkg.com/parse-node-version/-/parse-node-version-1.0.1.tgz#e2b5dbede00e7fa9bc363607f53327e8b073189b"" @@ -8701,6 +8989,11 @@ postcss-load-config@^2.1.1:      cosmiconfig ""^5.0.0""      import-cwd ""^2.0.0""   +postcss-media-query-parser@^0.2.3: +  version ""0.2.3"" +  resolved ""https://registry.yarnpkg.com/postcss-media-query-parser/-/postcss-media-query-parser-0.2.3.tgz#27b39c6f4d94f81b1a73b8f76351c609e5cef244"" +  integrity sha512-3sOlxmbKcSHMjlUXQZKQ06jOswE7oVkXPxmZdoB1r5l0q6gTFTQSHxNxOrCccElbW7dxNytifNEo8qidX2Vsig== +  postcss-merge-longhand@^4.0.11:    version ""4.0.11""    resolved ""https://registry.yarnpkg.com/postcss-merge-longhand/-/postcss-merge-longhand-4.0.11.tgz#62f49a13e4a0ee04e7b98f42bb16062ca2549e24"" @@ -8906,6 +9199,16 @@ postcss-reduce-transforms@^4.0.2:      postcss ""^7.0.0""      postcss-value-parser ""^3.0.0""   +postcss-resolve-nested-selector@^0.1.1: +  version ""0.1.1"" +  resolved ""https://registry.yarnpkg.com/postcss-resolve-nested-selector/-/postcss-resolve-nested-selector-0.1.1.tgz#29ccbc7c37dedfac304e9fff0bf1596b3f6a0e4e"" +  integrity sha512-HvExULSwLqHLgUy1rl3ANIqCsvMS0WHss2UOsXhXnQaZ9VCc2oBvIpXrl00IUFT5ZDITME0o6oiXeiHr2SAIfw== + +postcss-safe-parser@^6.0.0: +  version ""6.0.0"" +  resolved ""https://registry.yarnpkg.com/postcss-safe-parser/-/postcss-safe-parser-6.0.0.tgz#bb4c29894171a94bc5c996b9a30317ef402adaa1"" +  integrity sha512-FARHN8pwH+WiS2OPCxJI8FuRJpTVnn6ZNFiqAM2aeW2LwTHWWmWgIyKC6cUo0L8aeKiF/14MNvnpls6R2PBeMQ== +  postcss-selector-parser@^3.0.0:    version ""3.1.2""    resolved ""https://registry.yarnpkg.com/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz#b310f5c4c0fdaf76f94902bbaa30db6aa84f5270"" @@ -8924,6 +9227,14 @@ postcss-selector-parser@^6.0.0, postcss-selector-parser@^6.0.2:      indexes-of ""^1.0.1""      uniq ""^1.0.1""   +postcss-selector-parser@^6.0.11: +  version ""6.0.11"" +  resolved ""https://registry.yarnpkg.com/postcss-selector-parser/-/postcss-selector-parser-6.0.11.tgz#2e41dc39b7ad74046e1615185185cd0b17d0c8dc"" +  integrity sha512-zbARubNdogI9j7WY4nQJBiNqQf3sLS3wCP4WfOidu+p28LofJqDH1tcXypGrcmMHhDk2t9wGhCsYe/+szLTy1g== +  dependencies: +    cssesc ""^3.0.0"" +    util-deprecate ""^1.0.2"" +  postcss-svgo@^4.0.3:    version ""4.0.3""    resolved ""https://registry.yarnpkg.com/postcss-svgo/-/postcss-svgo-4.0.3.tgz#343a2cdbac9505d416243d496f724f38894c941e"" @@ -8957,7 +9268,7 @@ postcss-value-parser@^4.0.2:    resolved ""https://registry.yarnpkg.com/postcss-value-parser/-/postcss-value-parser-4.1.0.tgz#443f6a20ced6481a2bda4fa8532a6e55d789a2cb""    integrity sha512-97DXOFbQJhk71ne5/Mt6cOu6yxsSfM0QGQyl0L25Gca4yGWEGJaig7l7gbCX623VqTBNGLRLaVUCnNkcedlRSQ==   -postcss-value-parser@^4.1.0: +postcss-value-parser@^4.1.0, postcss-value-parser@^4.2.0:    version ""4.2.0""    resolved ""https://registry.yarnpkg.com/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz#723c09920836ba6d3e5af019f92bc0971c02e514""    integrity sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ== @@ -8970,6 +9281,15 @@ postcss-value-parser@^4.1.0:      picocolors ""^0.2.1""      source-map ""^0.6.1""   +postcss@^8.4.21: +  version ""8.4.21"" +  resolved ""https://registry.yarnpkg.com/postcss/-/postcss-8.4.21.tgz#c639b719a57efc3187b13a1d765675485f4134f4"" +  integrity sha512-tP7u/Sn/dVxK2NnruI4H9BG+x+Wxz6oeZ1cJ8P6G/PZY0IKk4k/63TDsQf2kQq3+qoJeLm2kIBUNlZe3zgb4Zg== +  dependencies: +    nanoid ""^3.3.4"" +    picocolors ""^1.0.0"" +    source-map-js ""^1.0.2"" +  prebuild-install@^7.0.1:    version ""7.0.1""    resolved ""https://registry.yarnpkg.com/prebuild-install/-/prebuild-install-7.0.1.tgz#c10075727c318efe72412f333e0ef625beaf3870"" @@ -9177,6 +9497,11 @@ queue@^4.2.1:    dependencies:      inherits ""~2.0.0""   +quick-lru@^4.0.1: +  version ""4.0.1"" +  resolved ""https://registry.yarnpkg.com/quick-lru/-/quick-lru-4.0.1.tgz#5b8878f113a58217848c6482026c73e1ba57727f"" +  integrity sha512-ARhCpm70fzdcvNQfPoy49IaanKkTlRWF2JMzqhcJbhSFRZv7nPTvZJdcY7301IPmvW+/p0RgIWnQDLJxifsQ7g== +  randombytes@^2.0.0, randombytes@^2.0.1, randombytes@^2.0.5, randombytes@^2.1.0:    version ""2.1.0""    resolved ""https://registry.yarnpkg.com/randombytes/-/randombytes-2.1.0.tgz#df6f84372f0270dc65cdf6291349ab7a473d4f2a"" @@ -9220,6 +9545,15 @@ read-pkg-up@^1.0.1:      find-up ""^1.0.0""      read-pkg ""^1.0.0""   +read-pkg-up@^7.0.1: +  version ""7.0.1"" +  resolved ""https://registry.yarnpkg.com/read-pkg-up/-/read-pkg-up-7.0.1.tgz#f3a6135758459733ae2b95638056e1854e7ef507"" +  integrity sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg== +  dependencies: +    find-up ""^4.1.0"" +    read-pkg ""^5.2.0"" +    type-fest ""^0.8.1"" +  read-pkg@^1.0.0:    version ""1.1.0""    resolved ""https://registry.yarnpkg.com/read-pkg/-/read-pkg-1.1.0.tgz#f5ffaa5ecd29cb31c0474bca7d756b6bb29e3f28"" @@ -9238,6 +9572,16 @@ read-pkg@^3.0.0:      normalize-package-data ""^2.3.2""      path-type ""^3.0.0""   +read-pkg@^5.2.0: +  version ""5.2.0"" +  resolved ""https://registry.yarnpkg.com/read-pkg/-/read-pkg-5.2.0.tgz#7bf295438ca5a33e56cd30e053b34ee7250c93cc"" +  integrity sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg== +  dependencies: +    ""@types/normalize-package-data"" ""^2.4.0"" +    normalize-package-data ""^2.5.0"" +    parse-json ""^5.0.0"" +    type-fest ""^0.6.0"" +  ""readable-stream@1 || 2"", readable-stream@^2.0.0, readable-stream@^2.0.1, readable-stream@^2.0.2, readable-stream@^2.0.5, readable-stream@^2.0.6, readable-stream@^2.1.5, readable-stream@^2.2.2, readable-stream@^2.3.0, readable-stream@^2.3.3, readable-stream@^2.3.5, readable-stream@^2.3.6, readable-stream@~2.3.6:    version ""2.3.7""    resolved ""https://registry.yarnpkg.com/readable-stream/-/readable-stream-2.3.7.tgz#1eca1cf711aef814c04f62252a36a62f6cb23b57"" @@ -9316,6 +9660,14 @@ rechoir@^0.7.0:    dependencies:      resolve ""^1.9.0""   +redent@^3.0.0: +  version ""3.0.0"" +  resolved ""https://registry.yarnpkg.com/redent/-/redent-3.0.0.tgz#e557b7998316bb53c9f1f56fa626352c6963059f"" +  integrity sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg== +  dependencies: +    indent-string ""^4.0.0"" +    strip-indent ""^3.0.0"" +  regex-not@^1.0.0, regex-not@^1.0.2:    version ""1.0.2""    resolved ""https://registry.yarnpkg.com/regex-not/-/regex-not-1.0.2.tgz#1f4ece27e00b0b65e0247a6810e6a85d83a5752c"" @@ -9433,6 +9785,11 @@ require-directory@^2.1.1:    resolved ""https://registry.yarnpkg.com/require-directory/-/require-directory-2.1.1.tgz#8c64ad5fd30dab1c976e2344ffe7f792a6a6df42""    integrity sha1-jGStX9MNqxyXbiNE/+f3kqam30I=   +require-from-string@^2.0.2: +  version ""2.0.2"" +  resolved ""https://registry.yarnpkg.com/require-from-string/-/require-from-string-2.0.2.tgz#89a7fdd938261267318eafe14f9c32e598c36909"" +  integrity sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw== +  require-main-filename@^1.0.1:    version ""1.0.1""    resolved ""https://registry.yarnpkg.com/require-main-filename/-/require-main-filename-1.0.1.tgz#97f717b69d48784f5f526a6c5aa8ffdda055a4d1"" @@ -9852,6 +10209,11 @@ signal-exit@^3.0.0, signal-exit@^3.0.2, signal-exit@^3.0.3:    resolved ""https://registry.yarnpkg.com/signal-exit/-/signal-exit-3.0.3.tgz#a1410c2edd8f077b08b4e253c8eacfcaf057461c""    integrity sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA==   +signal-exit@^3.0.7: +  version ""3.0.7"" +  resolved ""https://registry.yarnpkg.com/signal-exit/-/signal-exit-3.0.7.tgz#a9a1767f8af84155114eaabd73f99273c8f59ad9"" +  integrity sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ== +  simple-concat@^1.0.0:    version ""1.0.1""    resolved ""https://registry.yarnpkg.com/simple-concat/-/simple-concat-1.0.1.tgz#f46976082ba35c2263f1c8ab5edfe26c41c9552f"" @@ -9904,6 +10266,15 @@ slice-ansi@^2.1.0:      astral-regex ""^1.0.0""      is-fullwidth-code-point ""^2.0.0""   +slice-ansi@^4.0.0: +  version ""4.0.0"" +  resolved ""https://registry.yarnpkg.com/slice-ansi/-/slice-ansi-4.0.0.tgz#500e8dd0fd55b05815086255b3195adf2a45fe6b"" +  integrity sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ== +  dependencies: +    ansi-styles ""^4.0.0"" +    astral-regex ""^2.0.0"" +    is-fullwidth-code-point ""^3.0.0"" +  smart-buffer@^4.1.0:    version ""4.1.0""    resolved ""https://registry.yarnpkg.com/smart-buffer/-/smart-buffer-4.1.0.tgz#91605c25d91652f4661ea69ccf45f1b331ca21ba"" @@ -9961,6 +10332,11 @@ source-list-map@^2.0.0, source-list-map@^2.0.1:    resolved ""https://registry.yarnpkg.com/source-list-map/-/source-list-map-2.0.1.tgz#3993bd873bfc48479cca9ea3a547835c7c154b34""    integrity sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw==   +source-map-js@^1.0.1, source-map-js@^1.0.2: +  version ""1.0.2"" +  resolved ""https://registry.yarnpkg.com/source-map-js/-/source-map-js-1.0.2.tgz#adbc361d9c62df380125e7f161f71c826f1e490c"" +  integrity sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw== +  source-map-resolve@^0.5.0:    version ""0.5.3""    resolved ""https://registry.yarnpkg.com/source-map-resolve/-/source-map-resolve-0.5.3.tgz#190866bece7553e1f8f267a2ee82c606b5509a1a"" @@ -10402,6 +10778,13 @@ strip-final-newline@^2.0.0:    resolved ""https://registry.yarnpkg.com/strip-final-newline/-/strip-final-newline-2.0.0.tgz#89b852fb2fcbe936f6f4b3187afb0a12c1ab58ad""    integrity sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==   +strip-indent@^3.0.0: +  version ""3.0.0"" +  resolved ""https://registry.yarnpkg.com/strip-indent/-/strip-indent-3.0.0.tgz#c32e1cee940b6b3432c771bc2c54bcce73cd3001"" +  integrity sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ== +  dependencies: +    min-indent ""^1.0.0"" +  strip-json-comments@3.1.1, strip-json-comments@^3.1.0, strip-json-comments@^3.1.1:    version ""3.1.1""    resolved ""https://registry.yarnpkg.com/strip-json-comments/-/strip-json-comments-3.1.1.tgz#31f1281b3832630434831c310c01cccda8cbe006"" @@ -10420,6 +10803,11 @@ style-loader@^1.3.0:      loader-utils ""^2.0.0""      schema-utils ""^2.7.0""   +style-search@^0.1.0: +  version ""0.1.0"" +  resolved ""https://registry.yarnpkg.com/style-search/-/style-search-0.1.0.tgz#7958c793e47e32e07d2b5cafe5c0bf8e12e77902"" +  integrity sha512-Dj1Okke1C3uKKwQcetra4jSuk0DqbzbYtXipzFlFMZtowbF1x7BKJwB9AayVMyFARvU8EDrZdcax4At/452cAg== +  stylehacks@^4.0.0:    version ""4.0.3""    resolved ""https://registry.yarnpkg.com/stylehacks/-/stylehacks-4.0.3.tgz#6718fcaf4d1e07d8a1318690881e8d96726a71d5"" @@ -10429,6 +10817,66 @@ stylehacks@^4.0.0:      postcss ""^7.0.0""      postcss-selector-parser ""^3.0.0""   +stylelint-config-recommended@^10.0.1: +  version ""10.0.1"" +  resolved ""https://registry.yarnpkg.com/stylelint-config-recommended/-/stylelint-config-recommended-10.0.1.tgz#25a8828acf6cde87dac6db2950c8c4ed82a69ae1"" +  integrity sha512-TQ4xQ48tW4QSlODcti7pgSRqBZcUaBzuh0jPpfiMhwJKBPkqzTIAU+IrSWL/7BgXlOM90DjB7YaNgFpx8QWhuA== + +stylelint-config-standard@^30.0.1: +  version ""30.0.1"" +  resolved ""https://registry.yarnpkg.com/stylelint-config-standard/-/stylelint-config-standard-30.0.1.tgz#a84d57c240c37f7db47023ab9d2e64c49090e1eb"" +  integrity sha512-NbeHOmpRQhjZh5XB1B/S4MLRWvz4xxAxeDBjzl0tY2xEcayNhLbaRGF0ZQzq+DQZLCcPpOHeS2Ru1ydbkhkmLg== +  dependencies: +    stylelint-config-recommended ""^10.0.1"" + +stylelint@^15.2.0: +  version ""15.2.0"" +  resolved ""https://registry.yarnpkg.com/stylelint/-/stylelint-15.2.0.tgz#e906eb59df83bde075d148623216f298f9ceb03a"" +  integrity sha512-wjg5OLn8zQwjlj5cYUgyQpMWKzct42AG5dYlqkHRJQJqsystFFn3onqEc263KH4xfEI0W3lZCnlIhFfS64uwSA== +  dependencies: +    ""@csstools/css-parser-algorithms"" ""^2.0.1"" +    ""@csstools/css-tokenizer"" ""^2.0.1"" +    ""@csstools/media-query-list-parser"" ""^2.0.1"" +    ""@csstools/selector-specificity"" ""^2.1.1"" +    balanced-match ""^2.0.0"" +    colord ""^2.9.3"" +    cosmiconfig ""^8.0.0"" +    css-functions-list ""^3.1.0"" +    css-tree ""^2.3.1"" +    debug ""^4.3.4"" +    fast-glob ""^3.2.12"" +    fastest-levenshtein ""^1.0.16"" +    file-entry-cache ""^6.0.1"" +    global-modules ""^2.0.0"" +    globby ""^11.1.0"" +    globjoin ""^0.1.4"" +    html-tags ""^3.2.0"" +    ignore ""^5.2.4"" +    import-lazy ""^4.0.0"" +    imurmurhash ""^0.1.4"" +    is-plain-object ""^5.0.0"" +    known-css-properties ""^0.26.0"" +    mathml-tag-names ""^2.1.3"" +    meow ""^9.0.0"" +    micromatch ""^4.0.5"" +    normalize-path ""^3.0.0"" +    picocolors ""^1.0.0"" +    postcss ""^8.4.21"" +    postcss-media-query-parser ""^0.2.3"" +    postcss-resolve-nested-selector ""^0.1.1"" +    postcss-safe-parser ""^6.0.0"" +    postcss-selector-parser ""^6.0.11"" +    postcss-value-parser ""^4.2.0"" +    resolve-from ""^5.0.0"" +    string-width ""^4.2.3"" +    strip-ansi ""^6.0.1"" +    style-search ""^0.1.0"" +    supports-hyperlinks ""^2.3.0"" +    svg-tags ""^1.0.0"" +    table ""^6.8.1"" +    v8-compile-cache ""^2.3.0"" +    write-file-atomic ""^5.0.0"" +  sumchecker@^3.0.1:    version ""3.0.1""    resolved ""https://registry.yarnpkg.com/sumchecker/-/sumchecker-3.0.1.tgz#6377e996795abb0b6d348e9b3e1dfb24345a8e42"" @@ -10455,19 +10903,27 @@ supports-color@^5.3.0:    dependencies:      has-flag ""^3.0.0""   +supports-color@^7.0.0, supports-color@^7.2.0: +  version ""7.2.0"" +  resolved ""https://registry.yarnpkg.com/supports-color/-/supports-color-7.2.0.tgz#1b7dcdcb32b8138801b3e478ba6a51caa89648da"" +  integrity sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw== +  dependencies: +    has-flag ""^4.0.0"" +  supports-color@^7.1.0:    version ""7.1.0""    resolved ""https://registry.yarnpkg.com/supports-color/-/supports-color-7.1.0.tgz#68e32591df73e25ad1c4b49108a2ec507962bfd1""    integrity sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==    dependencies:      has-flag ""^4.0.0""   -supports-color@^7.2.0: -  version ""7.2.0"" -  resolved ""https://registry.yarnpkg.com/supports-color/-/supports-color-7.2.0.tgz#1b7dcdcb32b8138801b3e478ba6a51caa89648da"" -  integrity sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw== +supports-hyperlinks@^2.3.0: +  version ""2.3.0"" +  resolved ""https://registry.yarnpkg.com/supports-hyperlinks/-/supports-hyperlinks-2.3.0.tgz#3943544347c1ff90b15effb03fc14ae45ec10624"" +  integrity sha512-RpsAZlpWcDwOPQA22aCH4J0t7L8JmAvsCxfOSEwm7cQs3LshN36QaTkwd70DnBOXDWGssw2eUoc8CaRWT0XunA==    dependencies:      has-flag ""^4.0.0"" +    supports-color ""^7.0.0""    sver-compat@^1.5.0:    version ""1.5.0"" @@ -10477,6 +10933,11 @@ sver-compat@^1.5.0:      es6-iterator ""^2.0.1""      es6-symbol ""^3.1.1""   +svg-tags@^1.0.0: +  version ""1.0.0"" +  resolved ""https://registry.yarnpkg.com/svg-tags/-/svg-tags-1.0.0.tgz#58f71cee3bd519b59d4b2a843b6c7de64ac04764"" +  integrity sha512-ovssysQTa+luh7A5Weu3Rta6FJlFBBbInjOh722LIt6klpU2/HtdUbszju/G4devcvk8PGt7FCLv5wftu3THUA== +  svgo@^1.0.0:    version ""1.3.2""    resolved ""https://registry.yarnpkg.com/svgo/-/svgo-1.3.2.tgz#b6dc511c063346c9e415b81e43401145b96d4167"" @@ -10519,6 +10980,17 @@ table@^5.2.3:      slice-ansi ""^2.1.0""      string-width ""^3.0.0""   +table@^6.8.1: +  version ""6.8.1"" +  resolved ""https://registry.yarnpkg.com/table/-/table-6.8.1.tgz#ea2b71359fe03b017a5fbc296204471158080bdf"" +  integrity sha512-Y4X9zqrCftUhMeH2EptSSERdVKt/nEdijTOacGD/97EKjhQ/Qs8RTlEGABSJNNN8lac9kheH+af7yAkEWlgneA== +  dependencies: +    ajv ""^8.0.1"" +    lodash.truncate ""^4.4.2"" +    slice-ansi ""^4.0.0"" +    string-width ""^4.2.3"" +    strip-ansi ""^6.0.1"" +  tapable@^1.0.0, tapable@^1.1.3:    version ""1.1.3""    resolved ""https://registry.yarnpkg.com/tapable/-/tapable-1.1.3.tgz#a1fccc06b58db61fd7a45da2da44f5f3a3e67ba2"" @@ -10847,6 +11319,11 @@ tree-kill@^1.2.2:    resolved ""https://registry.yarnpkg.com/tree-kill/-/tree-kill-1.2.2.tgz#4ca09a9092c88b73a7cdc5e8a01b507b0790a0cc""    integrity sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==   +trim-newlines@^3.0.0: +  version ""3.0.1"" +  resolved ""https://registry.yarnpkg.com/trim-newlines/-/trim-newlines-3.0.1.tgz#260a5d962d8b752425b32f3a7db0dcacd176c144"" +  integrity sha512-c1PTsA3tYrIsLGkJkzHF+w9F2EyxfXGo4UyJc4pFL++FMjnq0HJS69T3M7d//gKrFKwy429bouPescbjecU+Zw== +  ts-loader@^9.2.7:    version ""9.2.7""    resolved ""https://registry.yarnpkg.com/ts-loader/-/ts-loader-9.2.7.tgz#948654099ca96992b62ec47bd9cee5632006e101"" @@ -10965,11 +11442,26 @@ type-fest@^0.13.1:    resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.13.1.tgz#0172cb5bce80b0bd542ea348db50c7e21834d934""    integrity sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==   +type-fest@^0.18.0: +  version ""0.18.1"" +  resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.18.1.tgz#db4bc151a4a2cf4eebf9add5db75508db6cc841f"" +  integrity sha512-OIAYXk8+ISY+qTOwkHtKqzAuxchoMiD9Udx+FSGQDuiRR+PJKJHc2NJAXlbhkGwTt/4/nKZxELY1w3ReWOL8mw== +  type-fest@^0.20.2:    version ""0.20.2""    resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.20.2.tgz#1bf207f4b28f91583666cb5fbd327887301cd5f4""    integrity sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==   +type-fest@^0.6.0: +  version ""0.6.0"" +  resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.6.0.tgz#8d2a2370d3df886eb5c90ada1c5bf6188acf838b"" +  integrity sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg== + +type-fest@^0.8.1: +  version ""0.8.1"" +  resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.8.1.tgz#09e249ebde851d3b1e48d27c105444667f17b83d"" +  integrity sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA== +  type-is@^1.6.16:    version ""1.6.18""    resolved ""https://registry.yarnpkg.com/type-is/-/type-is-1.6.18.tgz#4e552cd05df09467dcbc4ef739de89f2cf37c131"" @@ -11192,7 +11684,7 @@ use@^3.1.0:    resolved ""https://registry.yarnpkg.com/use/-/use-3.1.1.tgz#d50c8cac79a19fbc20f2911f56eb973f4e10070f""    integrity sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==   -util-deprecate@^1.0.1, util-deprecate@~1.0.1: +util-deprecate@^1.0.1, util-deprecate@^1.0.2, util-deprecate@~1.0.1:    version ""1.0.2""    resolved ""https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf""    integrity sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8= @@ -11253,7 +11745,7 @@ v8-compile-cache@^2.0.3:    resolved ""https://registry.yarnpkg.com/v8-compile-cache/-/v8-compile-cache-2.2.0.tgz#9471efa3ef9128d2f7c6a7ca39c4dd6b5055b132""    integrity sha512-gTpR5XQNKFwOd4clxfnhaqvfqMpqEwr4tOtCyz4MtYZX2JYhfr1JvBFKdS+7K/9rfpZR3VLX+YWBbKoxCgS43Q==   -v8-compile-cache@^2.2.0: +v8-compile-cache@^2.2.0, v8-compile-cache@^2.3.0:    version ""2.3.0""    resolved ""https://registry.yarnpkg.com/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz#2de19618c66dc247dcfb6f99338035d8245a2cee""    integrity sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA== @@ -11677,7 +12169,7 @@ which@2.0.2, which@^2.0.1:    dependencies:      isexe ""^2.0.0""   -which@^1.2.14, which@^1.2.9: +which@^1.2.14, which@^1.2.9, which@^1.3.1:    version ""1.3.1""    resolved ""https://registry.yarnpkg.com/which/-/which-1.3.1.tgz#a45043d54f5805316da8d62f9f50918d3da70b0a""    integrity sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ== @@ -11778,6 +12270,14 @@ wrappy@1:    resolved ""https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f""    integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=   +write-file-atomic@^5.0.0: +  version ""5.0.0"" +  resolved ""https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-5.0.0.tgz#54303f117e109bf3d540261125c8ea5a7320fab0"" +  integrity sha512-R7NYMnHSlV42K54lwY9lvW6MnSm1HSJqZL3xiSgi9E7//FYaI74r2G0rd+/X6VAMkHEdzxQaU5HUOXWUz5kA/w== +  dependencies: +    imurmurhash ""^0.1.4"" +    signal-exit ""^3.0.7"" +  write@1.0.3:    version ""1.0.3""    resolved ""https://registry.yarnpkg.com/write/-/write-1.0.3.tgz#0800e14523b923a387e415123c865616aae0f5c3"" @@ -11932,7 +12432,7 @@ yargs-parser@^18.1.2:      camelcase ""^5.0.0""      decamelize ""^1.2.0""   -yargs-parser@^20.2.2: +yargs-parser@^20.2.2, yargs-parser@^20.2.3:    version ""20.2.9""    resolved ""https://registry.yarnpkg.com/yargs-parser/-/yargs-parser-20.2.9.tgz#2eb7dc3b0289718fc295f362753845c41a0c94ee""    integrity sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w=="
fc29d4bcdb9890e1d45afe948093b7b197daa47c,src/vs/workbench/services/extensions/common/extensionsApiProposals.ts,modified,1,0,1,https://github.com/microsoft/vscode/blob/fc29d4bcdb9890e1d45afe948093b7b197daa47c/src%2Fvs%2Fworkbench%2Fservices%2Fextensions%2Fcommon%2FextensionsApiProposals.ts,https://github.com/microsoft/vscode/raw/fc29d4bcdb9890e1d45afe948093b7b197daa47c/src%2Fvs%2Fworkbench%2Fservices%2Fextensions%2Fcommon%2FextensionsApiProposals.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fservices%2Fextensions%2Fcommon%2FextensionsApiProposals.ts?ref=fc29d4bcdb9890e1d45afe948093b7b197daa47c,"@@ -8,6 +8,7 @@  export const allApiProposals = Object.freeze({  	authSession: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.authSession.d.ts',  	badges: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.badges.d.ts', +	commentEditorLanguage: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentEditorLanguage.d.ts',  	commentsResolvedState: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.commentsResolvedState.d.ts',  	contribEditSessions: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribEditSessions.d.ts',  	contribLabelFormatterWorkspaceTooltip: 'https://raw.githubusercontent.com/microsoft/vscode/main/src/vscode-dts/vscode.proposed.contribLabelFormatterWorkspaceTooltip.d.ts',"
fc29d4bcdb9890e1d45afe948093b7b197daa47c,src/vscode-dts/vscode.proposed.commentEditorLanguage.d.ts,added,30,0,30,https://github.com/microsoft/vscode/blob/fc29d4bcdb9890e1d45afe948093b7b197daa47c/src%2Fvscode-dts%2Fvscode.proposed.commentEditorLanguage.d.ts,https://github.com/microsoft/vscode/raw/fc29d4bcdb9890e1d45afe948093b7b197daa47c/src%2Fvscode-dts%2Fvscode.proposed.commentEditorLanguage.d.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvscode-dts%2Fvscode.proposed.commentEditorLanguage.d.ts?ref=fc29d4bcdb9890e1d45afe948093b7b197daa47c,"@@ -0,0 +1,30 @@ +/*--------------------------------------------------------------------------------------------- + *  Copyright (c) Microsoft Corporation. All rights reserved. + *  Licensed under the MIT License. See License.txt in the project root for license information. + *--------------------------------------------------------------------------------------------*/ + +declare module 'vscode' { + +	// https://github.com/microsoft/vscode/issues/145384 + +	/** +	 * Represents a {@link CommentController comment controller}'s {@link CommentController.options options}. +	 */ +	export interface CommentOptions { +		/** +		 * The language that will be used for the editor when creating a new comment and for editing comments unless further +		 * specified in the {@link Comment comment}. +		 */ +		languageId?: string; +	} + +	/** +	 * A comment is displayed within the editor or the Comments Panel, depending on how it is provided. +	 */ +	export interface Comment { +		/** +		 * The language that will be used for the editor when editing the comment. +		 */ +		languageId?: string; +	} +}"
6c8cdf325eb1dc8a0e2ea9205a1d2ca05f69c101,src/vs/workbench/contrib/remote/browser/remoteIndicator.ts,modified,6,10,16,https://github.com/microsoft/vscode/blob/6c8cdf325eb1dc8a0e2ea9205a1d2ca05f69c101/src%2Fvs%2Fworkbench%2Fcontrib%2Fremote%2Fbrowser%2FremoteIndicator.ts,https://github.com/microsoft/vscode/raw/6c8cdf325eb1dc8a0e2ea9205a1d2ca05f69c101/src%2Fvs%2Fworkbench%2Fcontrib%2Fremote%2Fbrowser%2FremoteIndicator.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fremote%2Fbrowser%2FremoteIndicator.ts?ref=6c8cdf325eb1dc8a0e2ea9205a1d2ca05f69c101,"@@ -47,7 +47,7 @@ import { IProductService } from 'vs/platform/product/common/productService';  import { DomEmitter } from 'vs/base/browser/event';  import { registerColor } from 'vs/platform/theme/common/colorRegistry';  import { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions'; -import { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation'; +import { CancellationToken } from 'vs/base/common/cancellation';  import { ThemeIcon } from 'vs/base/common/themables';  import { infoIcon } from 'vs/workbench/contrib/extensions/browser/extensionsIcons';  import { IOpenerService } from 'vs/platform/opener/common/opener'; @@ -325,22 +325,18 @@ export class RemoteStatusIndicator extends Disposable implements IWorkbenchContr  		for (let i = 0; i < this.remoteExtensionMetadata.length; i++) {  			const extensionId = this.remoteExtensionMetadata[i].id;  			const supportedPlatforms = this.remoteExtensionMetadata[i].supportedPlatforms; -			// Update compatibility -			const token = new CancellationTokenSource(); -			const galleryExtension = (await this.extensionGalleryService.getExtensions([{ id: extensionId }], token.token))[0]; -			if (!await this.extensionManagementService.canInstall(galleryExtension)) { -				this.remoteExtensionMetadata[i].isPlatformCompatible = false; +			const isInstalled = (await this.extensionManagementService.getInstalled()).find(value => ExtensionIdentifier.equals(value.identifier.id, extensionId)) ? true : false; + +			this.remoteExtensionMetadata[i].installed = isInstalled; +			if (isInstalled) { +				this.remoteExtensionMetadata[i].isPlatformCompatible = true;  			}  			else if (supportedPlatforms && !supportedPlatforms.includes(currentPlatform)) {  				this.remoteExtensionMetadata[i].isPlatformCompatible = false;  			}  			else {  				this.remoteExtensionMetadata[i].isPlatformCompatible = true; -				this.remoteExtensionMetadata[i].dependencies = galleryExtension.properties.extensionPack ?? [];  			} - -			// Check if installed and enabled -			this.remoteExtensionMetadata[i].installed = (await this.extensionManagementService.getInstalled()).find(value => ExtensionIdentifier.equals(value.identifier.id, extensionId)) ? true : false;  		}    		this.remoteMetadataInitialized = true;"
609e6369335d436a5fa14ec97467447d5608b51f,src/vs/workbench/api/browser/mainThreadSecretState.ts,modified,9,4,13,https://github.com/microsoft/vscode/blob/609e6369335d436a5fa14ec97467447d5608b51f/src%2Fvs%2Fworkbench%2Fapi%2Fbrowser%2FmainThreadSecretState.ts,https://github.com/microsoft/vscode/raw/609e6369335d436a5fa14ec97467447d5608b51f/src%2Fvs%2Fworkbench%2Fapi%2Fbrowser%2FmainThreadSecretState.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fapi%2Fbrowser%2FmainThreadSecretState.ts?ref=609e6369335d436a5fa14ec97467447d5608b51f,"@@ -110,6 +110,7 @@ class OldMainThreadSecretState extends Disposable implements MainThreadSecretSta  export class MainThreadSecretState extends Disposable implements MainThreadSecretStateShape {  	private readonly _proxy: ExtHostSecretStateShape;   +	// TODO: Remove this when all known embedders implement a secret storage provider  	private readonly _oldMainThreadSecretState: OldMainThreadSecretState | undefined;    	private readonly _sequencer = new SequencerByKey<string>(); @@ -131,7 +132,11 @@ export class MainThreadSecretState extends Disposable implements MainThreadSecre    		this._proxy = extHostContext.getProxy(ExtHostContext.ExtHostSecretState);   -		if (environmentService.options?.credentialsProvider) { +		// If the embedder doesn't implement a secret storage provider, then we need to use the old API +		// to ensure that secrets are still stored in a secure way. This is only temporary until all +		// embedders implement a secret storage provider. +		// TODO: Remove this when all known embedders implement a secret storage provider +		if (environmentService.options?.credentialsProvider && !environmentService.options?.secretStorageProvider) {  			this._oldMainThreadSecretState = this._register(new OldMainThreadSecretState(  				this._proxy,  				credentialsService, @@ -158,7 +163,7 @@ export class MainThreadSecretState extends Disposable implements MainThreadSecre  	}    	private async doGetPassword(extensionId: string, key: string): Promise<string | undefined> { -		// TODO: Remove this when we remove the old API +		// TODO: Remove this when all known embedders implement a secret storage provider  		if (this._oldMainThreadSecretState) {  			return await this._oldMainThreadSecretState.$getPassword(extensionId, key);  		} @@ -184,7 +189,7 @@ export class MainThreadSecretState extends Disposable implements MainThreadSecre  	}    	private async doSetPassword(extensionId: string, key: string, value: string): Promise<void> { -		// TODO: Remove this when we remove the old API +		// TODO: Remove this when all known embedders implement a secret storage provider  		if (this._oldMainThreadSecretState) {  			return await this._oldMainThreadSecretState.$setPassword(extensionId, key, value);  		} @@ -200,7 +205,7 @@ export class MainThreadSecretState extends Disposable implements MainThreadSecre  	}    	private async doDeletePassword(extensionId: string, key: string): Promise<void> { -		// TODO: Remove this when we remove the old API +		// TODO: Remove this when all known embedders implement a secret storage provider  		if (this._oldMainThreadSecretState) {  			return await this._oldMainThreadSecretState.$deletePassword(extensionId, key);  		}"
c9073ad0c8f57bcbea556d67d8044a068667f2d7,extensions/css-language-features/yarn.lock,modified,3,3,6,https://github.com/microsoft/vscode/blob/c9073ad0c8f57bcbea556d67d8044a068667f2d7/extensions%2Fcss-language-features%2Fyarn.lock,https://github.com/microsoft/vscode/raw/c9073ad0c8f57bcbea556d67d8044a068667f2d7/extensions%2Fcss-language-features%2Fyarn.lock,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Fcss-language-features%2Fyarn.lock?ref=c9073ad0c8f57bcbea556d67d8044a068667f2d7,"@@ -34,9 +34,9 @@ minimatch@^5.1.0:      brace-expansion ""^2.0.1""    semver@^7.3.7: -  version ""7.3.7"" -  resolved ""https://registry.yarnpkg.com/semver/-/semver-7.3.7.tgz#12c5b649afdbf9049707796e22a4028814ce523f"" -  integrity sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g== +  version ""7.5.3"" +  resolved ""https://registry.yarnpkg.com/semver/-/semver-7.5.3.tgz#161ce8c2c6b4b3bdca6caadc9fa3317a4c4fe88e"" +  integrity sha512-QBlUtyVk/5EeHbi7X0fw6liDZc7BBmEaSYn01fMU1OUYbf6GPsbTtd8WmnqbI20SeycoHSeiybkE/q1Q+qlThQ==    dependencies:      lru-cache ""^6.0.0""  "
9618e4fa2a80e3ea788a6098a72d46c8db058a91,build/npm/gyp/yarn.lock,modified,3,3,6,https://github.com/microsoft/vscode/blob/9618e4fa2a80e3ea788a6098a72d46c8db058a91/build%2Fnpm%2Fgyp%2Fyarn.lock,https://github.com/microsoft/vscode/raw/9618e4fa2a80e3ea788a6098a72d46c8db058a91/build%2Fnpm%2Fgyp%2Fyarn.lock,https://api.github.com/repos/microsoft/vscode/contents/build%2Fnpm%2Fgyp%2Fyarn.lock?ref=9618e4fa2a80e3ea788a6098a72d46c8db058a91,"@@ -520,9 +520,9 @@ safe-buffer@~5.2.0:    integrity sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==    semver@^7.3.5: -  version ""7.3.8"" -  resolved ""https://registry.yarnpkg.com/semver/-/semver-7.3.8.tgz#07a78feafb3f7b32347d725e33de7e2a2df67798"" -  integrity sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A== +  version ""7.5.3"" +  resolved ""https://registry.yarnpkg.com/semver/-/semver-7.5.3.tgz#161ce8c2c6b4b3bdca6caadc9fa3317a4c4fe88e"" +  integrity sha512-QBlUtyVk/5EeHbi7X0fw6liDZc7BBmEaSYn01fMU1OUYbf6GPsbTtd8WmnqbI20SeycoHSeiybkE/q1Q+qlThQ==    dependencies:      lru-cache ""^6.0.0""  "
6fa852f87a0bb83f951e9ac38b4481462b10e11c,remote/yarn.lock,modified,3,3,6,https://github.com/microsoft/vscode/blob/6fa852f87a0bb83f951e9ac38b4481462b10e11c/remote%2Fyarn.lock,https://github.com/microsoft/vscode/raw/6fa852f87a0bb83f951e9ac38b4481462b10e11c/remote%2Fyarn.lock,https://api.github.com/repos/microsoft/vscode/contents/remote%2Fyarn.lock?ref=6fa852f87a0bb83f951e9ac38b4481462b10e11c,"@@ -661,9 +661,9 @@ safe-buffer@~5.1.0, safe-buffer@~5.1.1:    integrity sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==    semver@^7.3.5: -  version ""7.3.5"" -  resolved ""https://registry.yarnpkg.com/semver/-/semver-7.3.5.tgz#0b621c879348d8998e4b0e4be94b3f12e6018ef7"" -  integrity sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ== +  version ""7.5.3"" +  resolved ""https://registry.yarnpkg.com/semver/-/semver-7.5.3.tgz#161ce8c2c6b4b3bdca6caadc9fa3317a4c4fe88e"" +  integrity sha512-QBlUtyVk/5EeHbi7X0fw6liDZc7BBmEaSYn01fMU1OUYbf6GPsbTtd8WmnqbI20SeycoHSeiybkE/q1Q+qlThQ==    dependencies:      lru-cache ""^6.0.0""  "
99494a7a29e381c72103c3ccfcd31b4d7cdf259a,src/vs/workbench/contrib/remote/browser/remoteIndicator.ts,modified,18,23,41,https://github.com/microsoft/vscode/blob/99494a7a29e381c72103c3ccfcd31b4d7cdf259a/src%2Fvs%2Fworkbench%2Fcontrib%2Fremote%2Fbrowser%2FremoteIndicator.ts,https://github.com/microsoft/vscode/raw/99494a7a29e381c72103c3ccfcd31b4d7cdf259a/src%2Fvs%2Fworkbench%2Fcontrib%2Fremote%2Fbrowser%2FremoteIndicator.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fremote%2Fbrowser%2FremoteIndicator.ts?ref=99494a7a29e381c72103c3ccfcd31b4d7cdf259a,"@@ -8,8 +8,8 @@ import { STATUS_BAR_HOST_NAME_BACKGROUND, STATUS_BAR_HOST_NAME_FOREGROUND } from  import { themeColorFromId } from 'vs/platform/theme/common/themeService';  import { IRemoteAgentService, remoteConnectionLatencyMeasurer } from 'vs/workbench/services/remote/common/remoteAgentService';  import { RunOnceScheduler, retry } from 'vs/base/common/async'; -import { Event } from 'vs/base/common/event'; -import { Disposable, dispose } from 'vs/base/common/lifecycle'; +import { Emitter, Event } from 'vs/base/common/event'; +import { Disposable } from 'vs/base/common/lifecycle';  import { MenuId, IMenuService, MenuItemAction, MenuRegistry, registerAction2, Action2, SubmenuItemAction } from 'vs/platform/actions/common/actions';  import { IWorkbenchContribution } from 'vs/workbench/common/contributions';  import { StatusbarAlignment, IStatusbarService, IStatusbarEntryAccessor, IStatusbarEntry } from 'vs/workbench/services/statusbar/browser/statusbar'; @@ -115,6 +115,9 @@ export class RemoteStatusIndicator extends Disposable implements IWorkbenchContr  	private loggedInvalidGroupNames: { [group: string]: boolean } = Object.create(null);  	private readonly remoteExtensionMetadata: RemoteExtensionMetadata[];  	private remoteMetadataInitialized: boolean = false; +	private readonly _onDidChangeEntries = this._register(new Emitter<void>()); +	private readonly onDidChangeEntries: Event<void> = this._onDidChangeEntries.event; +  	constructor(  		@IStatusbarService private readonly statusbarService: IStatusbarService,  		@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService, @@ -341,6 +344,7 @@ export class RemoteStatusIndicator extends Disposable implements IWorkbenchContr  		}    		this.remoteMetadataInitialized = true; +		this._onDidChangeEntries.fire();  		showRemoteStartEntry.bindTo(this.contextKeyService).set(true);  		this.updateRemoteStatusIndicator();  	} @@ -551,15 +555,8 @@ export class RemoteStatusIndicator extends Disposable implements IWorkbenchContr  			}  		}   -		// Show when there are commands or installable remote extensions. -		if (this.hasRemoteMenuCommands(true) || this.remoteExtensionMetadata.some(ext => !ext.installed && ext.isPlatformCompatible)) { -			this.renderRemoteStatusIndicator(`$(remote)`, nls.localize('noHost.tooltip', ""Open a Remote Window"")); -			return; -		} - -		// No Remote Extensions: hide status indicator -		dispose(this.remoteStatusEntry); -		this.remoteStatusEntry = undefined; +		this.renderRemoteStatusIndicator(`$(remote)`, nls.localize('noHost.tooltip', ""Open a Remote Window"")); +		return;  	}    	private renderRemoteStatusIndicator(initialText: string, initialTooltip?: string | MarkdownString, command?: string, showProgress?: boolean): void { @@ -573,7 +570,7 @@ export class RemoteStatusIndicator extends Disposable implements IWorkbenchContr  			text,  			showProgress,  			tooltip, -			command: command ?? (this.hasRemoteMenuCommands(false) || this.remoteExtensionMetadata.some(ext => !ext.installed && ext.isPlatformCompatible)) ? RemoteStatusIndicator.REMOTE_ACTIONS_COMMAND_ID : undefined +			command: command ?? RemoteStatusIndicator.REMOTE_ACTIONS_COMMAND_ID  		};    		if (this.remoteStatusEntry) { @@ -834,17 +831,15 @@ export class RemoteStatusIndicator extends Disposable implements IWorkbenchContr  		const itemUpdater = this.remoteIndicatorMenu.onDidChange(() => quickPick.items = computeItems());  		quickPick.onDidHide(itemUpdater.dispose);   -		quickPick.show(); -	} - -	private hasRemoteMenuCommands(ignoreInstallAdditional: boolean): boolean { -		if (this.remoteAuthority !== undefined || this.virtualWorkspaceLocation !== undefined) { -			if (RemoteStatusIndicator.SHOW_CLOSE_REMOTE_COMMAND_ID) { -				return true; -			} -		} else if (!ignoreInstallAdditional && this.extensionGalleryService.isEnabled()) { -			return true; +		if (!this.remoteMetadataInitialized) { +			quickPick.busy = true; +			this._register(this.onDidChangeEntries(() => { +				// If quick pick is open, update the quick pick items after initialization. +				quickPick.busy = false; +				quickPick.items = computeItems(); +			}));  		} -		return this.getRemoteMenuActions().length > 0; + +		quickPick.show();  	}  }"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/code/browser/workbench/workbench.ts,modified,36,133,169,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fcode%2Fbrowser%2Fworkbench%2Fworkbench.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fcode%2Fbrowser%2Fworkbench%2Fworkbench.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fcode%2Fbrowser%2Fworkbench%2Fworkbench.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -4,38 +4,32 @@   *--------------------------------------------------------------------------------------------*/    import { isStandalone } from 'vs/base/browser/browser'; -import { CancellationToken } from 'vs/base/common/cancellation';  import { parse } from 'vs/base/common/marshalling';  import { Emitter } from 'vs/base/common/event';  import { Disposable, IDisposable } from 'vs/base/common/lifecycle';  import { Schemas } from 'vs/base/common/network';  import { isEqual } from 'vs/base/common/resources';  import { URI, UriComponents } from 'vs/base/common/uri'; -import { request } from 'vs/base/parts/request/browser/request';  import product from 'vs/platform/product/common/product';  import { isFolderToOpen, isWorkspaceToOpen } from 'vs/platform/window/common/window';  import { create } from 'vs/workbench/workbench.web.main';  import { posix } from 'vs/base/common/path';  import { ltrim } from 'vs/base/common/strings'; -import type { ICredentialsProvider } from 'vs/platform/credentials/common/credentials';  import type { IURLCallbackProvider } from 'vs/workbench/services/url/browser/urlService';  import type { IWorkbenchConstructionOptions } from 'vs/workbench/browser/web.api';  import type { IWorkspace, IWorkspaceProvider } from 'vs/workbench/services/host/browser/browserHostService'; +import { ISecretStorageProvider } from 'vs/platform/secrets/common/secrets'; +import { AuthenticationSessionInfo } from 'vs/workbench/services/authentication/browser/authenticationService';   -interface ICredential { -	service: string; -	account: string; -	password: string; -} - -class LocalStorageCredentialsProvider implements ICredentialsProvider { +class LocalStorageSecretStorageProvider implements ISecretStorageProvider { +	private static readonly STORAGE_KEY = 'secrets.provider';   -	private static readonly CREDENTIALS_STORAGE_KEY = 'credentials.provider'; +	private _secrets: Record<string, string> | undefined;   -	private readonly authService: string | undefined; +	type: 'in-memory' | 'persisted' | 'unknown' = 'persisted';    	constructor() { -		let authSessionInfo: { readonly id: string; readonly accessToken: string; readonly providerId: string; readonly canSignOut?: boolean; readonly scopes: string[][] } | undefined; +		let authSessionInfo: (AuthenticationSessionInfo & { scopes: string[][] }) | undefined;  		const authSessionElement = document.getElementById('vscode-workbench-auth-session');  		const authSessionElementAttribute = authSessionElement ? authSessionElement.getAttribute('data-settings') : undefined;  		if (authSessionElementAttribute) { @@ -46,133 +40,60 @@ class LocalStorageCredentialsProvider implements ICredentialsProvider {    		if (authSessionInfo) {  			// Settings Sync Entry -			this.setPassword(`${product.urlProtocol}.login`, 'account', JSON.stringify(authSessionInfo)); +			this.set(`${product.urlProtocol}.loginAccount`, JSON.stringify(authSessionInfo));    			// Auth extension Entry -			this.authService = `${product.urlProtocol}-${authSessionInfo.providerId}.login`; -			this.setPassword(this.authService, 'account', JSON.stringify(authSessionInfo.scopes.map(scopes => ({ +			if (authSessionInfo.providerId !== 'github') { +				console.error(`Unexpected auth provider: ${authSessionInfo.providerId}. Expected 'github'.`); +				return; +			} +			const authAccount = JSON.stringify({ extensionId: 'vscode.github-authentication', key: 'github.auth' }); +			this.set(authAccount, JSON.stringify(authSessionInfo.scopes.map(scopes => ({  				id: authSessionInfo!.id,  				scopes,  				accessToken: authSessionInfo!.accessToken  			}))));  		}  	}   -	private _credentials: ICredential[] | undefined; -	private get credentials(): ICredential[] { -		if (!this._credentials) { -			try { -				const serializedCredentials = window.localStorage.getItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY); -				if (serializedCredentials) { -					this._credentials = JSON.parse(serializedCredentials); -				} -			} catch (error) { -				// ignore -			} - -			if (!Array.isArray(this._credentials)) { -				this._credentials = []; -			} -		} - -		return this._credentials; -	} - -	private save(): void { -		window.localStorage.setItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY, JSON.stringify(this.credentials)); -	} - -	async getPassword(service: string, account: string): Promise<string | null> { -		return this.doGetPassword(service, account); +	get(key: string): Promise<string | undefined> { +		return Promise.resolve(this.secrets[key]);  	} +	set(key: string, value: string): Promise<void> { +		this.secrets[key] = value; +		this.save();   -	private async doGetPassword(service: string, account?: string): Promise<string | null> { -		for (const credential of this.credentials) { -			if (credential.service === service) { -				if (typeof account !== 'string' || account === credential.account) { -					return credential.password; -				} -			} -		} - -		return null; +		return Promise.resolve();  	} - -	async setPassword(service: string, account: string, password: string): Promise<void> { -		this.doDeletePassword(service, account); - -		this.credentials.push({ service, account, password }); +	async delete(key: string): Promise<void> { +		delete this.secrets[key];    		this.save();   -		try { -			if (password && service === this.authService) { -				const value = JSON.parse(password); -				if (Array.isArray(value) && value.length === 0) { -					await this.logout(service); -				} -			} -		} catch (error) { -			console.log(error); -		} +		return Promise.resolve();  	}   -	async deletePassword(service: string, account: string): Promise<boolean> { -		const result = await this.doDeletePassword(service, account); - -		if (result && service === this.authService) { +	private get secrets(): Record<string, string> { +		if (!this._secrets) {  			try { -				await this.logout(service); +				const serializedCredentials = window.localStorage.getItem(LocalStorageSecretStorageProvider.STORAGE_KEY); +				if (serializedCredentials) { +					this._secrets = JSON.parse(serializedCredentials); +				}  			} catch (error) { -				console.log(error); +				// ignore  			} -		} - -		return result; -	}   -	private async doDeletePassword(service: string, account: string): Promise<boolean> { -		let found = false; - -		this._credentials = this.credentials.filter(credential => { -			if (credential.service === service && credential.account === account) { -				found = true; - -				return false; +			if (!(this._secrets instanceof Object)) { +				this._secrets = {};  			} - -			return true; -		}); - -		if (found) { -			this.save();  		}   -		return found; -	} - -	async findPassword(service: string): Promise<string | null> { -		return this.doGetPassword(service); +		return this._secrets;  	}   -	async findCredentials(service: string): Promise<Array<{ account: string; password: string }>> { -		return this.credentials -			.filter(credential => credential.service === service) -			.map(({ account, password }) => ({ account, password })); -	} - -	private async logout(service: string): Promise<void> { -		const queryValues: Map<string, string> = new Map(); -		queryValues.set('logout', String(true)); -		queryValues.set('service', service); - -		await request({ -			url: doCreateUri('/auth/logout', queryValues).toString(true) -		}, CancellationToken.None); -	} - -	async clear(): Promise<void> { -		window.localStorage.removeItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY); +	private save(): void { +		window.localStorage.setItem(LocalStorageSecretStorageProvider.STORAGE_KEY, JSON.stringify(this.secrets));  	}  }   @@ -469,24 +390,6 @@ class WorkspaceProvider implements IWorkspaceProvider {  	}  }   -function doCreateUri(path: string, queryValues: Map<string, string>): URI { -	let query: string | undefined = undefined; - -	if (queryValues) { -		let index = 0; -		queryValues.forEach((value, key) => { -			if (!query) { -				query = ''; -			} - -			const prefix = (index++ === 0) ? '' : '&'; -			query += `${prefix}${key}=${encodeURIComponent(value)}`; -		}); -	} - -	return URI.parse(window.location.href).with({ path, query }); -} -  (function () {    	// Find config by checking for DOM @@ -504,6 +407,6 @@ function doCreateUri(path: string, queryValues: Map<string, string>): URI {  		settingsSyncOptions: config.settingsSyncOptions ? { enabled: config.settingsSyncOptions.enabled, } : undefined,  		workspaceProvider: WorkspaceProvider.create(config),  		urlCallbackProvider: new LocalStorageURLCallbackProvider(config.callbackRoute), -		credentialsProvider: config.remoteAuthority ? undefined /* with a remote, we don't use a local credentials provider */ : new LocalStorageCredentialsProvider() +		secretStorageProvider: config.remoteAuthority ? undefined /* with a remote, we don't use a local secret storage provider */ : new LocalStorageSecretStorageProvider()  	});  })();"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/workbench/browser/parts/activitybar/activitybarActions.ts,modified,3,1,4,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fbrowser%2Fparts%2Factivitybar%2FactivitybarActions.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fbrowser%2Fparts%2Factivitybar%2FactivitybarActions.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fbrowser%2Fparts%2Factivitybar%2FactivitybarActions.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -41,6 +41,7 @@ import { ICredentialsService } from 'vs/platform/credentials/common/credentials'  import { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';  import { StandardMouseEvent } from 'vs/base/browser/mouseEvent';  import { ILogService } from 'vs/platform/log/common/log'; +import { ISecretStorageService } from 'vs/platform/secrets/common/secrets';    export class ViewContainerActivityAction extends ActivityAction {   @@ -235,7 +236,7 @@ export class AccountsActivityActionViewItem extends MenuActivityActionViewItem {  	private readonly problematicProviders: Set<string> = new Set();    	private initialized = false; -	private sessionFromEmbedder = getCurrentAuthenticationSessionInfo(this.credentialsService, this.productService); +	private sessionFromEmbedder = getCurrentAuthenticationSessionInfo(this.credentialsService, this.secretStorageService, this.productService);    	constructor(  		action: ActivityAction, @@ -253,6 +254,7 @@ export class AccountsActivityActionViewItem extends MenuActivityActionViewItem {  		@IConfigurationService configurationService: IConfigurationService,  		@IStorageService private readonly storageService: IStorageService,  		@IKeybindingService keybindingService: IKeybindingService, +		@ISecretStorageService private readonly secretStorageService: ISecretStorageService,  		@ICredentialsService private readonly credentialsService: ICredentialsService,  		@ILogService private readonly logService: ILogService  	) {"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/workbench/browser/web.main.ts,modified,10,1,11,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fbrowser%2Fweb.main.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fbrowser%2Fweb.main.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fbrowser%2Fweb.main.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -92,6 +92,10 @@ import { BrowserRemoteResourceLoader } from 'vs/workbench/services/remote/browse  import { BufferLogger } from 'vs/platform/log/common/bufferLog';  import { FileLoggerService } from 'vs/platform/log/common/fileLog';  import { IEmbedderTerminalService } from 'vs/workbench/services/terminal/common/embedderTerminalService'; +import { BrowserSecretStorageService } from 'vs/workbench/services/secrets/browser/secretStorageService'; +import { EncryptionService } from 'vs/workbench/services/encryption/browser/encryptionService'; +import { IEncryptionService } from 'vs/platform/encryption/common/encryptionService'; +import { ISecretStorageService } from 'vs/platform/secrets/common/secrets';    export class BrowserMain extends Disposable {   @@ -384,9 +388,14 @@ export class BrowserMain extends Disposable {  		const credentialsService = new BrowserCredentialsService(environmentService, remoteAgentService, productService);  		serviceCollection.set(ICredentialsService, credentialsService);   +		const encryptionService = new EncryptionService(); +		serviceCollection.set(IEncryptionService, encryptionService); +		const secretStorageService = new BrowserSecretStorageService(storageService, encryptionService, environmentService, logService); +		serviceCollection.set(ISecretStorageService, secretStorageService); +  		// Userdata Initialize Service  		const userDataInitializers: IUserDataInitializer[] = []; -		userDataInitializers.push(new UserDataSyncInitializer(environmentService, credentialsService, userDataSyncStoreManagementService, fileService, userDataProfilesService, storageService, productService, requestService, logService, uriIdentityService)); +		userDataInitializers.push(new UserDataSyncInitializer(environmentService, secretStorageService, credentialsService, userDataSyncStoreManagementService, fileService, userDataProfilesService, storageService, productService, requestService, logService, uriIdentityService));  		if (environmentService.options.profile) {  			userDataInitializers.push(new UserDataProfileInitializer(environmentService, fileService, userDataProfileService, storageService, logService, uriIdentityService, requestService));  		}"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/workbench/contrib/editSessions/browser/editSessionsStorageService.ts,modified,3,1,4,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fcontrib%2FeditSessions%2Fbrowser%2FeditSessionsStorageService.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fcontrib%2FeditSessions%2Fbrowser%2FeditSessionsStorageService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2FeditSessions%2Fbrowser%2FeditSessionsStorageService.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -25,6 +25,7 @@ import { IUserDataSyncMachinesService, UserDataSyncMachinesService } from 'vs/pl  import { Emitter } from 'vs/base/common/event';  import { CancellationError } from 'vs/base/common/errors';  import { EditSessionsStoreClient } from 'vs/workbench/contrib/editSessions/common/editSessionsStorageClient'; +import { ISecretStorageService } from 'vs/platform/secrets/common/secrets';    type ExistingSession = IQuickPickItem & { session: AuthenticationSession & { providerId: string } };  type AuthenticationProviderOption = IQuickPickItem & { provider: IAuthenticationProvider }; @@ -81,6 +82,7 @@ export class EditSessionsWorkbenchService extends Disposable implements IEditSes  		@IProductService private readonly productService: IProductService,  		@IContextKeyService private readonly contextKeyService: IContextKeyService,  		@IDialogService private readonly dialogService: IDialogService, +		@ISecretStorageService private readonly secretStorageService: ISecretStorageService,  		@ICredentialsService private readonly credentialsService: ICredentialsService  	) {  		super(); @@ -278,7 +280,7 @@ export class EditSessionsWorkbenchService extends Disposable implements IEditSes  		// If settings sync is already enabled, avoid asking again to authenticate  		if (this.shouldAttemptEditSessionInit()) {  			this.logService.info(`Reusing user data sync enablement`); -			const authenticationSessionInfo = await getCurrentAuthenticationSessionInfo(this.credentialsService, this.productService); +			const authenticationSessionInfo = await getCurrentAuthenticationSessionInfo(this.credentialsService, this.secretStorageService, this.productService);  			if (authenticationSessionInfo !== undefined) {  				this.logService.info(`Using current authentication session with ID ${authenticationSessionInfo.id}`);  				this.existingSessionId = authenticationSessionInfo.id;"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/workbench/services/authentication/browser/authenticationService.ts,modified,13,3,16,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2Fauthentication%2Fbrowser%2FauthenticationService.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2Fauthentication%2Fbrowser%2FauthenticationService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fservices%2Fauthentication%2Fbrowser%2FauthenticationService.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -19,6 +19,7 @@ import { InstantiationType, registerSingleton } from 'vs/platform/instantiation/  import { Severity } from 'vs/platform/notification/common/notification';  import { IProductService } from 'vs/platform/product/common/productService';  import { IQuickInputService } from 'vs/platform/quickinput/common/quickInput'; +import { ISecretStorageService } from 'vs/platform/secrets/common/secrets';  import { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';  import { IActivityService, NumberBadge } from 'vs/workbench/services/activity/common/activity';  import { IAuthenticationCreateSessionOptions, AuthenticationProviderInformation, AuthenticationSession, AuthenticationSessionsChangeEvent, IAuthenticationProvider, IAuthenticationService } from 'vs/workbench/services/authentication/common/authentication'; @@ -76,9 +77,17 @@ export function addAccountUsage(storageService: IStorageService, providerId: str  	storageService.store(accountKey, JSON.stringify(usages), StorageScope.APPLICATION, StorageTarget.MACHINE);  }   +// TODO: pull this out into its own service  export type AuthenticationSessionInfo = { readonly id: string; readonly accessToken: string; readonly providerId: string; readonly canSignOut?: boolean }; -export async function getCurrentAuthenticationSessionInfo(credentialsService: ICredentialsService, productService: IProductService): Promise<AuthenticationSessionInfo | undefined> { -	const authenticationSessionValue = await credentialsService.getPassword(`${productService.urlProtocol}.login`, 'account'); +export async function getCurrentAuthenticationSessionInfo( +	// TODO: Remove when all known embedders implement SecretStorageProviders instead of CredentialsProviders +	credentialsService: ICredentialsService, +	secretStorageService: ISecretStorageService, +	productService: IProductService +): Promise<AuthenticationSessionInfo | undefined> { +	const authenticationSessionValue = +		await secretStorageService.get(`${productService.urlProtocol}.loginAccount`) +		?? await credentialsService.getPassword(`${productService.urlProtocol}.login`, 'account');  	if (authenticationSessionValue) {  		try {  			const authenticationSessionInfo: AuthenticationSessionInfo = JSON.parse(authenticationSessionValue); @@ -90,7 +99,8 @@ export async function getCurrentAuthenticationSessionInfo(credentialsService: IC  				return authenticationSessionInfo;  			}  		} catch (e) { -			// ignore as this is a best effort operation. +			// This is a best effort operation. +			console.error(`Failed parsing current auth session value: ${e}`);  		}  	}  	return undefined;"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/workbench/services/secrets/browser/secretStorageService.ts,modified,0,4,4,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2Fsecrets%2Fbrowser%2FsecretStorageService.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2Fsecrets%2Fbrowser%2FsecretStorageService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fservices%2Fsecrets%2Fbrowser%2FsecretStorageService.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -5,9 +5,7 @@    import { IEncryptionService } from 'vs/platform/encryption/common/encryptionService';  import { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions'; -import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';  import { ILogService } from 'vs/platform/log/common/log'; -import { INotificationService } from 'vs/platform/notification/common/notification';  import { ISecretStorageProvider, ISecretStorageService, BaseSecretStorageService } from 'vs/platform/secrets/common/secrets';  import { IStorageService } from 'vs/platform/storage/common/storage';  import { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService'; @@ -20,8 +18,6 @@ export class BrowserSecretStorageService extends BaseSecretStorageService {  		@IStorageService storageService: IStorageService,  		@IEncryptionService encryptionService: IEncryptionService,  		@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService, -		@IInstantiationService instantiationService: IInstantiationService, -		@INotificationService notificationService: INotificationService,  		@ILogService logService: ILogService  	) {  		super(storageService, encryptionService, logService);"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/workbench/services/userDataSync/browser/userDataSyncInit.ts,modified,3,1,4,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2FuserDataSync%2Fbrowser%2FuserDataSyncInit.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2FuserDataSync%2Fbrowser%2FuserDataSyncInit.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fservices%2FuserDataSync%2Fbrowser%2FuserDataSyncInit.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -35,6 +35,7 @@ import { TasksInitializer } from 'vs/platform/userDataSync/common/tasksSync';  import { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';  import { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';  import { IUserDataInitializer } from 'vs/workbench/services/userData/browser/userDataInit'; +import { ISecretStorageService } from 'vs/platform/secrets/common/secrets';    export class UserDataSyncInitializer implements IUserDataInitializer {   @@ -46,6 +47,7 @@ export class UserDataSyncInitializer implements IUserDataInitializer {    	constructor(  		@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService, +		@ISecretStorageService private readonly secretStorageService: ISecretStorageService,  		@ICredentialsService private readonly credentialsService: ICredentialsService,  		@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,  		@IFileService private readonly fileService: IFileService, @@ -90,7 +92,7 @@ export class UserDataSyncInitializer implements IUserDataInitializer {    					let authenticationSession;  					try { -						authenticationSession = await getCurrentAuthenticationSessionInfo(this.credentialsService, this.productService); +						authenticationSession = await getCurrentAuthenticationSessionInfo(this.credentialsService, this.secretStorageService, this.productService);  					} catch (error) {  						this.logService.error(error);  					}"
322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,src/vs/workbench/services/userDataSync/browser/userDataSyncWorkbenchService.ts,modified,3,1,4,https://github.com/microsoft/vscode/blob/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2FuserDataSync%2Fbrowser%2FuserDataSyncWorkbenchService.ts,https://github.com/microsoft/vscode/raw/322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f/src%2Fvs%2Fworkbench%2Fservices%2FuserDataSync%2Fbrowser%2FuserDataSyncWorkbenchService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fservices%2FuserDataSync%2Fbrowser%2FuserDataSyncWorkbenchService.ts?ref=322bc2d7d86e8d0c2ccb1bfdabe594e2011d500f,"@@ -39,6 +39,7 @@ import { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity'  import { isDiffEditorInput } from 'vs/workbench/common/editor';  import { IBrowserWorkbenchEnvironmentService } from 'vs/workbench/services/environment/browser/environmentService';  import { IUserDataInitializationService } from 'vs/workbench/services/userData/browser/userDataInit'; +import { ISecretStorageService } from 'vs/platform/secrets/common/secrets';    type AccountQuickPickItem = { label: string; authenticationProvider: IAuthenticationProvider; account?: UserDataSyncAccount; description?: string };   @@ -105,6 +106,7 @@ export class UserDataSyncWorkbenchService extends Disposable implements IUserDat  		@IExtensionService private readonly extensionService: IExtensionService,  		@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,  		@ICredentialsService private readonly credentialsService: ICredentialsService, +		@ISecretStorageService private readonly secretStorageService: ISecretStorageService,  		@INotificationService private readonly notificationService: INotificationService,  		@IProgressService private readonly progressService: IProgressService,  		@IDialogService private readonly dialogService: IDialogService, @@ -169,7 +171,7 @@ export class UserDataSyncWorkbenchService extends Disposable implements IUserDat  	}    	private async initialize(): Promise<void> { -		const authenticationSession = await getCurrentAuthenticationSessionInfo(this.credentialsService, this.productService); +		const authenticationSession = await getCurrentAuthenticationSessionInfo(this.credentialsService, this.secretStorageService, this.productService);  		if (this.currentSessionId === undefined && authenticationSession?.id) {  			if (this.environmentService.options?.settingsSyncOptions?.authenticationProvider && this.environmentService.options.settingsSyncOptions.enabled) {  				this.currentSessionId = authenticationSession.id;"
c7d219b53f5e602f27d36dc1676709f5e49ab2c2,src/vs/workbench/contrib/testing/browser/testingProgressUiService.ts,modified,1,1,2,https://github.com/microsoft/vscode/blob/c7d219b53f5e602f27d36dc1676709f5e49ab2c2/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingProgressUiService.ts,https://github.com/microsoft/vscode/raw/c7d219b53f5e602f27d36dc1676709f5e49ab2c2/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingProgressUiService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingProgressUiService.ts?ref=c7d219b53f5e602f27d36dc1676709f5e49ab2c2,"@@ -82,7 +82,7 @@ export class TestingProgressTrigger extends Disposable {  	}    	private openTestView() { -		this.viewsService.openView(Testing.ExplorerViewId, false); +		this.viewsService.openView(Testing.ResultsViewId, false);  	}  }  "
856bc1e28de12896333edefe113b0311353d6d61,src/vs/workbench/contrib/testing/browser/testingExplorerView.ts,modified,3,2,5,https://github.com/microsoft/vscode/blob/856bc1e28de12896333edefe113b0311353d6d61/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingExplorerView.ts,https://github.com/microsoft/vscode/raw/856bc1e28de12896333edefe113b0311353d6d61/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingExplorerView.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingExplorerView.ts?ref=856bc1e28de12896333edefe113b0311353d6d61,"@@ -566,7 +566,8 @@ class TestingExplorerViewModel extends Disposable {  				keyboardNavigationLabelProvider: instantiationService.createInstance(TreeKeyboardNavigationLabelProvider),  				accessibilityProvider: instantiationService.createInstance(ListAccessibilityProvider),  				filter: this.filter, -				findWidgetEnabled: false +				findWidgetEnabled: false, +				openOnSingleClick: false,  			}) as TestingObjectTree<FuzzyScore>;     @@ -612,7 +613,7 @@ class TestingExplorerViewModel extends Disposable {  			testService.excluded.onTestExclusionsChanged,  		)(this.tree.refilter, this.tree));   -		this._register(this.tree.onMouseDblClick(e => { +		this._register(this.tree.onDidOpen(e => {  			if (e.element instanceof TestItemTreeElement && !e.element.children.size && e.element.test.item.uri) {  				commandService.executeCommand('vscode.revealTest', e.element.test.item.extId);  			}"
753fdf84207db7023f197c84c52bbfed03350099,src/vs/workbench/contrib/testing/browser/testingOutputPeek.ts,modified,1,1,2,https://github.com/microsoft/vscode/blob/753fdf84207db7023f197c84c52bbfed03350099/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingOutputPeek.ts,https://github.com/microsoft/vscode/raw/753fdf84207db7023f197c84c52bbfed03350099/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingOutputPeek.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Ftesting%2Fbrowser%2FtestingOutputPeek.ts?ref=753fdf84207db7023f197c84c52bbfed03350099,"@@ -2002,7 +2002,7 @@ class TreeActionsProvider {  				const extId = element.test.item.extId;  				primary.push(new Action(  					'testing.outputPeek.goToFile', -					localize('testing.goToFile', ""Go to File""), +					localize('testing.goToFile', ""Go to Source""),  					ThemeIcon.asClassName(Codicon.goToFile),  					undefined,  					() => this.commandService.executeCommand('vscode.revealTest', extId),"
26a45ba4d3ba4f89f61ef94747857bc5cc1e6967,src/vs/workbench/contrib/preferences/browser/media/settingsWidgets.css,modified,2,3,5,https://github.com/microsoft/vscode/blob/26a45ba4d3ba4f89f61ef94747857bc5cc1e6967/src%2Fvs%2Fworkbench%2Fcontrib%2Fpreferences%2Fbrowser%2Fmedia%2FsettingsWidgets.css,https://github.com/microsoft/vscode/raw/26a45ba4d3ba4f89f61ef94747857bc5cc1e6967/src%2Fvs%2Fworkbench%2Fcontrib%2Fpreferences%2Fbrowser%2Fmedia%2FsettingsWidgets.css,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fpreferences%2Fbrowser%2Fmedia%2FsettingsWidgets.css?ref=26a45ba4d3ba4f89f61ef94747857bc5cc1e6967,"@@ -18,9 +18,8 @@  .settings-editor > .settings-body .settings-tree-container .setting-item.setting-item-list .setting-list-sibling,  .settings-editor > .settings-body .settings-tree-container .setting-item.setting-item-list .setting-list-object-widget .setting-list-object-key,  .settings-editor > .settings-body .settings-tree-container .setting-item.setting-item-list .setting-list-object-widget .setting-list-object-value { -	white-space: pre; -	overflow: hidden; -	text-overflow: ellipsis; +	white-space: normal; +	overflow-wrap: normal;  }    .settings-editor > .settings-body .settings-tree-container .setting-item-bool .setting-value-checkbox {"
b540ba7b277b27f2481ba2a9dbf380019d4cffdd,extensions/search-result/src/extension.ts,modified,1,1,2,https://github.com/microsoft/vscode/blob/b540ba7b277b27f2481ba2a9dbf380019d4cffdd/extensions%2Fsearch-result%2Fsrc%2Fextension.ts,https://github.com/microsoft/vscode/raw/b540ba7b277b27f2481ba2a9dbf380019d4cffdd/extensions%2Fsearch-result%2Fsrc%2Fextension.ts,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Fsearch-result%2Fsrc%2Fextension.ts?ref=b540ba7b277b27f2481ba2a9dbf380019d4cffdd,"@@ -78,7 +78,7 @@ export function activate(context: vscode.ExtensionContext) {  				const lineResult = parseSearchResults(document, token)[position.line];  				if (!lineResult) { return []; }  				if (lineResult.type === 'file') { -					return lineResult.allLocations; +					return lineResult.allLocations.map(l => ({ ...l, originSelectionRange: lineResult.location.originSelectionRange }));  				}    				const location = lineResult.locations.find(l => l.originSelectionRange.contains(position));"
060dfba0dd0c6b103abd26c2c0fc873539735d9e,src/vs/workbench/browser/actions/developerActions.ts,modified,48,32,80,https://github.com/microsoft/vscode/blob/060dfba0dd0c6b103abd26c2c0fc873539735d9e/src%2Fvs%2Fworkbench%2Fbrowser%2Factions%2FdeveloperActions.ts,https://github.com/microsoft/vscode/raw/060dfba0dd0c6b103abd26c2c0fc873539735d9e/src%2Fvs%2Fworkbench%2Fbrowser%2Factions%2FdeveloperActions.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fbrowser%2Factions%2FdeveloperActions.ts?ref=060dfba0dd0c6b103abd26c2c0fc873539735d9e,"@@ -92,6 +92,13 @@ class InspectContextKeysAction extends Action2 {  	}  }   +interface IScreencastKeyboardOptions { +	readonly showKeys?: boolean; +	readonly showCommands?: boolean; +	readonly showCommandGroups?: boolean; +	readonly showSingleEditorCursorMoves?: boolean; +} +  class ToggleScreencastModeAction extends Action2 {    	static disposable: IDisposable | undefined; @@ -259,11 +266,12 @@ class ToggleScreencastModeAction extends Action2 {  				return;  			}   +			const options = configurationService.getValue<IScreencastKeyboardOptions>('screencastMode.keyboardOptions');  			const event = new StandardKeyboardEvent(e);  			const shortcut = keybindingService.softDispatch(event, event.target);    			// Hide the single arrow key pressed -			if (shortcut.kind === ResultKind.KbFound && shortcut.commandId && configurationService.getValue('screencastMode.hideSingleEditorCursorMoves') && ( +			if (shortcut.kind === ResultKind.KbFound && shortcut.commandId && !(options.showSingleEditorCursorMoves ?? true) && (  				['cursorLeft', 'cursorRight', 'cursorUp', 'cursorDown'].includes(shortcut.commandId))  			) {  				return; @@ -280,18 +288,17 @@ class ToggleScreencastModeAction extends Action2 {  				length = 0;  			}   -			const format = configurationService.getValue<'keys' | 'command' | 'commandWithGroup' | 'commandAndKeys' | 'commandWithGroupAndKeys'>('screencastMode.keyboardShortcutsFormat');  			const keybinding = keybindingService.resolveKeyboardEvent(event);  			const command = (this._isKbFound(shortcut) && shortcut.commandId) ? MenuRegistry.getCommand(shortcut.commandId) : null;   -			let titleLabel = ''; +			let commandAndGroupLabel = '';  			let keyLabel: string | undefined | null = keybinding.getLabel();    			if (command) { -				titleLabel = typeof command.title === 'string' ? command.title : command.title.value; +				commandAndGroupLabel = typeof command.title === 'string' ? command.title : command.title.value;   -				if ((format === 'commandWithGroup' || format === 'commandWithGroupAndKeys') && command.category) { -					titleLabel = `${typeof command.category === 'string' ? command.category : command.category.value}: ${titleLabel} `; +				if ((options.showCommandGroups ?? false) && command.category) { +					commandAndGroupLabel = `${typeof command.category === 'string' ? command.category : command.category.value}: ${commandAndGroupLabel} `;  				}    				if (this._isKbFound(shortcut) && shortcut.commandId) { @@ -304,13 +311,11 @@ class ToggleScreencastModeAction extends Action2 {  				}  			}   -			const onlyKeyboardShortcuts = configurationService.getValue('screencastMode.onlyKeyboardShortcuts'); - -			if (format !== 'keys' && titleLabel && !onlyKeyboardShortcuts) { -				append(keyboardMarker, $('span.title', {}, `${titleLabel} `)); +			if ((options.showCommands ?? true) && commandAndGroupLabel) { +				append(keyboardMarker, $('span.title', {}, `${commandAndGroupLabel} `));  			}   -			if (onlyKeyboardShortcuts || !titleLabel || (this._isKbFound(shortcut) && shortcut.commandId) && (format === 'keys' || format === 'commandAndKeys' || format === 'commandWithGroupAndKeys')) { +			if (options.showKeys ?? true) {  				// Fix label for arrow keys  				keyLabel = keyLabel?.replace('UpArrow', '↑')  					?.replace('DownArrow', '↓') @@ -421,27 +426,38 @@ configurationRegistry.registerConfiguration({  			maximum: 100,  			description: localize('screencastMode.fontSize', ""Controls the font size (in pixels) of the screencast mode keyboard."")  		}, -		'screencastMode.keyboardShortcutsFormat': { -			enum: ['keys', 'command', 'commandWithGroup', 'commandAndKeys', 'commandWithGroupAndKeys'], -			enumDescriptions: [ -				localize('keyboardShortcutsFormat.keys', ""Keys.""), -				localize('keyboardShortcutsFormat.command', ""Command title.""), -				localize('keyboardShortcutsFormat.commandWithGroup', ""Command title prefixed by its group.""), -				localize('keyboardShortcutsFormat.commandAndKeys', ""Command title and keys.""), -				localize('keyboardShortcutsFormat.commandWithGroupAndKeys', ""Command title and keys, with the command prefixed by its group."") -			], -			description: localize('screencastMode.keyboardShortcutsFormat', ""Controls what is displayed in the keyboard overlay when showing shortcuts.""), -			default: 'commandAndKeys' -		}, -		'screencastMode.onlyKeyboardShortcuts': { -			type: 'boolean', -			description: localize('screencastMode.onlyKeyboardShortcuts', ""Show only keyboard shortcuts in screencast mode (do not include action names).""), -			default: false -		}, -		'screencastMode.hideSingleEditorCursorMoves': { -			type: 'boolean', -			description: localize('screencastMode.hideSingleEditorCursorMoves', ""Hide the single editor cursor move commands in screencast mode.""), -			default: false +		'screencastMode.keyboardOptions': { +			type: 'object', +			description: localize('screencastMode.keyboardOptions.description', ""Options for customizing the keyboard overlay in screencast mode.""), +			properties: { +				'showKeys': { +					type: 'boolean', +					default: true, +					description: localize('screencastMode.keyboardOptions.showKeys', ""Show raw keys."") +				}, +				'showCommands': { +					type: 'boolean', +					default: true, +					description: localize('screencastMode.keyboardOptions.showCommands', ""Show command names."") +				}, +				'showCommandGroups': { +					type: 'boolean', +					default: false, +					description: localize('screencastMode.keyboardOptions.showCommandGroups', ""Show command group names, when commands are also shown."") +				}, +				'showSingleEditorCursorMoves': { +					type: 'boolean', +					default: true, +					description: localize('screencastMode.keyboardOptions.showSingleEditorCursorMoves', ""Show single editor cursor move commands."") +				} +			}, +			default: { +				'showKeys': true, +				'showCommands': true, +				'showCommandGroups': false, +				'showSingleEditorCursorMoves': true +			}, +			additionalProperties: false  		},  		'screencastMode.keyboardOverlayTimeout': {  			type: 'number',"
68a99e2f46d36f624ff0b1f57509411022785319,src/vs/editor/contrib/inlineCompletions/browser/commands.ts,modified,4,1,5,https://github.com/microsoft/vscode/blob/68a99e2f46d36f624ff0b1f57509411022785319/src%2Fvs%2Feditor%2Fcontrib%2FinlineCompletions%2Fbrowser%2Fcommands.ts,https://github.com/microsoft/vscode/raw/68a99e2f46d36f624ff0b1f57509411022785319/src%2Fvs%2Feditor%2Fcontrib%2FinlineCompletions%2Fbrowser%2Fcommands.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Feditor%2Fcontrib%2FinlineCompletions%2Fbrowser%2Fcommands.ts?ref=68a99e2f46d36f624ff0b1f57509411022785319,"@@ -11,6 +11,7 @@ import { EditorContextKeys } from 'vs/editor/common/editorContextKeys';  import { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from 'vs/editor/contrib/inlineCompletions/browser/commandIds';  import { InlineCompletionContextKeys } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys';  import { InlineCompletionsController } from 'vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController'; +import { Context as SuggestContext } from 'vs/editor/contrib/suggest/browser/suggest';  import * as nls from 'vs/nls';  import { MenuId, Action2 } from 'vs/platform/actions/common/actions';  import { IConfigurationService } from 'vs/platform/configuration/common/configuration'; @@ -85,6 +86,7 @@ export class AcceptNextWordOfInlineCompletion extends EditorAction {  			kbOpts: {  				weight: KeybindingWeight.EditorContrib + 1,  				primary: KeyMod.CtrlCmd | KeyCode.RightArrow, +				kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),  			},  			menuOpts: [{  				menuId: MenuId.InlineSuggestionToolbar, @@ -145,7 +147,8 @@ export class AcceptInlineCompletion extends EditorAction {  				kbExpr: ContextKeyExpr.and(  					InlineCompletionContextKeys.inlineSuggestionVisible,  					EditorContextKeys.tabMovesFocus.toNegated(), -					InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize +					InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, +					SuggestContext.Visible.toNegated()  				),  			}  		});"
68a99e2f46d36f624ff0b1f57509411022785319,src/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.ts,modified,7,9,16,https://github.com/microsoft/vscode/blob/68a99e2f46d36f624ff0b1f57509411022785319/src%2Fvs%2Feditor%2Fcontrib%2FinlineCompletions%2Fbrowser%2FinlineCompletionsModel.ts,https://github.com/microsoft/vscode/raw/68a99e2f46d36f624ff0b1f57509411022785319/src%2Fvs%2Feditor%2Fcontrib%2FinlineCompletions%2Fbrowser%2FinlineCompletionsModel.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Feditor%2Fcontrib%2FinlineCompletions%2Fbrowser%2FinlineCompletionsModel.ts?ref=68a99e2f46d36f624ff0b1f57509411022785319,"@@ -278,11 +278,11 @@ export class InlineCompletionsModel extends Disposable {  			throw new BugIndicatingError();  		}   -		const ghostText = this.ghostText.get(); -		const completion = this.selectedInlineCompletion.get()?.toInlineCompletion(undefined); -		if (!ghostText || !completion) { +		const state = this.state.get(); +		if (!state || state.ghostText.isEmpty() || !state.completion) {  			return;  		} +		const completion = state.completion.toInlineCompletion(undefined);    		editor.pushUndoStop();  		if (completion.snippetInfo) { @@ -370,21 +370,19 @@ export class InlineCompletionsModel extends Disposable {  			throw new BugIndicatingError();  		}   -		const ghostText = this.ghostText.get(); -		const completion = this.selectedInlineCompletion.get()?.toInlineCompletion(undefined); -		if (!ghostText || !completion) { +		const state = this.state.get(); +		if (!state || state.ghostText.isEmpty() || !state.completion) {  			return;  		} +		const ghostText = state.ghostText; +		const completion = state.completion.toInlineCompletion(undefined);    		if (completion.snippetInfo || completion.filterText !== completion.insertText) {  			// not in WYSIWYG mode, partial commit might change completion, thus it is not supported  			await this.accept(editor);  			return;  		}   -		if (ghostText.parts.length === 0) { -			return; -		}  		const firstPart = ghostText.parts[0];  		const position = new Position(ghostText.lineNumber, firstPart.column);  		const line = firstPart.lines.join('\n');"
ccea02b96dbc1351795de5ce66d8b52f10576fde,extensions/git/src/model.ts,modified,12,7,19,https://github.com/microsoft/vscode/blob/ccea02b96dbc1351795de5ce66d8b52f10576fde/extensions%2Fgit%2Fsrc%2Fmodel.ts,https://github.com/microsoft/vscode/raw/ccea02b96dbc1351795de5ce66d8b52f10576fde/extensions%2Fgit%2Fsrc%2Fmodel.ts,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Fgit%2Fsrc%2Fmodel.ts?ref=ccea02b96dbc1351795de5ce66d8b52f10576fde,"@@ -493,8 +493,9 @@ export class Model implements IBranchProtectionProviderRegistry, IRemoteSourcePu  	@sequentialize  	async openRepository(repoPath: string, openIfClosed = false): Promise<void> {  		this.logger.trace(`Opening repository: ${repoPath}`); -		if (this.getRepositoryExact(repoPath)) { -			this.logger.trace(`Repository for path ${repoPath} already exists`); +		const existingRepository = await this.getRepositoryExact(repoPath); +		if (existingRepository) { +			this.logger.trace(`Repository for path ${repoPath} already exists: ${existingRepository.root})`);  			return;  		}   @@ -524,8 +525,9 @@ export class Model implements IBranchProtectionProviderRegistry, IRemoteSourcePu  			const { repositoryRoot, unsafeRepositoryMatch } = await this.getRepositoryRoot(repoPath);  			this.logger.trace(`Repository root for path ${repoPath} is: ${repositoryRoot}`);   -			if (this.getRepositoryExact(repositoryRoot)) { -				this.logger.trace(`Repository for path ${repositoryRoot} already exists`); +			const existingRepository = await this.getRepositoryExact(repositoryRoot); +			if (existingRepository) { +				this.logger.trace(`Repository for path ${repositoryRoot} already exists: ${existingRepository.root}`);  				return;  			}   @@ -763,9 +765,12 @@ export class Model implements IBranchProtectionProviderRegistry, IRemoteSourcePu  		return liveRepository && liveRepository.repository;  	}   -	private getRepositoryExact(repoPath: string): Repository | undefined { -		const openRepository = this.openRepositories -			.find(r => pathEquals(r.repository.root, repoPath)); +	private async getRepositoryExact(repoPath: string): Promise<Repository | undefined> { +		const repoPathCanonical = await fs.promises.realpath(repoPath, { encoding: 'utf8' }); +		const openRepository = this.openRepositories.find(async r => { +			const rootPathCanonical = await fs.promises.realpath(r.repository.root, { encoding: 'utf8' }); +			return pathEquals(rootPathCanonical, repoPathCanonical); +		});  		return openRepository?.repository;  	}  "
b7b88e4dbb934b06f227ec75ab1f72565a8648ae,.vscode/settings.json,modified,1,0,1,https://github.com/microsoft/vscode/blob/b7b88e4dbb934b06f227ec75ab1f72565a8648ae/.vscode%2Fsettings.json,https://github.com/microsoft/vscode/raw/b7b88e4dbb934b06f227ec75ab1f72565a8648ae/.vscode%2Fsettings.json,https://api.github.com/repos/microsoft/vscode/contents/.vscode%2Fsettings.json?ref=b7b88e4dbb934b06f227ec75ab1f72565a8648ae,"@@ -135,6 +135,7 @@  		""git"",  		""sash""  	], +	""githubPullRequests.experimental.createView"": true,  	""debug.javascript.terminalOptions"": {  		""outFiles"": [  			""${workspaceFolder}/out/**/*.js"","
1f094a0b3a791c8fce6343fc88f8b52957fab644,package.json,modified,1,1,2,https://github.com/microsoft/vscode/blob/1f094a0b3a791c8fce6343fc88f8b52957fab644/package.json,https://github.com/microsoft/vscode/raw/1f094a0b3a791c8fce6343fc88f8b52957fab644/package.json,https://api.github.com/repos/microsoft/vscode/contents/package.json?ref=1f094a0b3a791c8fce6343fc88f8b52957fab644,"@@ -1,6 +1,6 @@  {    ""name"": ""code-oss-dev"", -  ""version"": ""1.80.0"", +  ""version"": ""1.80.1"",    ""distro"": ""b12d0f94278d485affdf25a13a8563e0a792a7cc"",    ""author"": {      ""name"": ""Microsoft Corporation"""
00db67e44079d78850922701c0e63e3053d48640,extensions/emmet/src/test/abbreviationAction.test.ts,modified,2,2,4,https://github.com/microsoft/vscode/blob/00db67e44079d78850922701c0e63e3053d48640/extensions%2Femmet%2Fsrc%2Ftest%2FabbreviationAction.test.ts,https://github.com/microsoft/vscode/raw/00db67e44079d78850922701c0e63e3053d48640/extensions%2Femmet%2Fsrc%2Ftest%2FabbreviationAction.test.ts,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Femmet%2Fsrc%2Ftest%2FabbreviationAction.test.ts?ref=00db67e44079d78850922701c0e63e3053d48640,"@@ -410,7 +410,7 @@ suite('Tests for Expand Abbreviations (HTML)', () => {  	// 	});  	// });   -	test('No expanding when html is excluded in the settings in completion list', async () => { +	test.skip('No expanding when html is excluded in the settings in completion list', async () => {  		const oldConfig = workspace.getConfiguration('emmet').inspect('excludeLanguages')?.globalValue;  		await workspace.getConfiguration('emmet').update('excludeLanguages', ['html'], ConfigurationTarget.Global);  		await testHtmlCompletionProvider(new Selection(9, 6, 9, 6), '', '', true); @@ -469,7 +469,7 @@ suite('Tests for jsx, xml and xsl', () => {  		});  	});   -	test('Expand abbreviation with no self closing tags for html', () => { +	test.skip('Expand abbreviation with no self closing tags for html', () => {  		return withRandomFileEditor('img', 'html', async (editor, _doc) => {  			editor.selection = new Selection(0, 6, 0, 6);  			await expandEmmetAbbreviation({ language: 'html' });"
afacb63ab5fbefa94b2fb76efe950fd1679f6989,extensions/notebook-renderers/yarn.lock,modified,3,3,6,https://github.com/microsoft/vscode/blob/afacb63ab5fbefa94b2fb76efe950fd1679f6989/extensions%2Fnotebook-renderers%2Fyarn.lock,https://github.com/microsoft/vscode/raw/afacb63ab5fbefa94b2fb76efe950fd1679f6989/extensions%2Fnotebook-renderers%2Fyarn.lock,https://api.github.com/repos/microsoft/vscode/contents/extensions%2Fnotebook-renderers%2Fyarn.lock?ref=afacb63ab5fbefa94b2fb76efe950fd1679f6989,"@@ -334,9 +334,9 @@ symbol-tree@^3.2.4:    integrity sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==    tough-cookie@^4.1.2: -  version ""4.1.2"" -  resolved ""https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-4.1.2.tgz#e53e84b85f24e0b65dd526f46628db6c85f6b874"" -  integrity sha512-G9fqXWoYFZgTc2z8Q5zaHy/vJMjm+WV0AkAeHxVCQiEB1b+dGvWzFW6QV07cY5jQ5gRkeid2qIkzkxUnmoQZUQ== +  version ""4.1.3"" +  resolved ""https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-4.1.3.tgz#97b9adb0728b42280aa3d814b6b999b2ff0318bf"" +  integrity sha512-aX/y5pVRkfRnfmuX+OdbSdXvPe6ieKX/G2s7e98f4poJHnqH3281gDPm/metm6E/WRamfx7WC4HUqkWHfQHprw==    dependencies:      psl ""^1.1.33""      punycode ""^2.1.1"""
dccc793f79fa850393e7a0668788340a1a6813d8,yarn.lock,modified,29,5,34,https://github.com/microsoft/vscode/blob/dccc793f79fa850393e7a0668788340a1a6813d8/yarn.lock,https://github.com/microsoft/vscode/raw/dccc793f79fa850393e7a0668788340a1a6813d8/yarn.lock,https://api.github.com/repos/microsoft/vscode/contents/yarn.lock?ref=dccc793f79fa850393e7a0668788340a1a6813d8,"@@ -8319,6 +8319,11 @@ q@^1.1.2:    resolved ""https://registry.yarnpkg.com/q/-/q-1.5.1.tgz#7e32f75b41381291d04611f1bf14109ac00651d7""    integrity sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc=   +querystringify@^2.1.1: +  version ""2.2.0"" +  resolved ""https://registry.yarnpkg.com/querystringify/-/querystringify-2.2.0.tgz#3345941b4153cb9d082d8eee4cda2016a9aef7f6"" +  integrity sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ== +  queue-tick@^1.0.1:    version ""1.0.1""    resolved ""https://registry.yarnpkg.com/queue-tick/-/queue-tick-1.0.1.tgz#f6f07ac82c1fd60f82e098b417a80e52f1f4c142"" @@ -8588,6 +8593,11 @@ require-main-filename@^2.0.0:    resolved ""https://registry.yarnpkg.com/require-main-filename/-/require-main-filename-2.0.0.tgz#d0b329ecc7cc0f61649f62215be69af54aa8989b""    integrity sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==   +requires-port@^1.0.0: +  version ""1.0.0"" +  resolved ""https://registry.yarnpkg.com/requires-port/-/requires-port-1.0.0.tgz#925d2601d39ac485e091cf0da5c6e694dc3dcaff"" +  integrity sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ== +  resolve-alpn@^1.0.0:    version ""1.2.1""    resolved ""https://registry.yarnpkg.com/resolve-alpn/-/resolve-alpn-1.2.1.tgz#b7adbdac3546aaaec20b45e7d8265927072726f9"" @@ -9851,13 +9861,14 @@ token-types@^5.0.0-alpha.2:      ieee754 ""^1.2.1""    tough-cookie@^4.0.0: -  version ""4.0.0"" -  resolved ""https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-4.0.0.tgz#d822234eeca882f991f0f908824ad2622ddbece4"" -  integrity sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwtcB0t/MjACGR18pcRbg== +  version ""4.1.3"" +  resolved ""https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-4.1.3.tgz#97b9adb0728b42280aa3d814b6b999b2ff0318bf"" +  integrity sha512-aX/y5pVRkfRnfmuX+OdbSdXvPe6ieKX/G2s7e98f4poJHnqH3281gDPm/metm6E/WRamfx7WC4HUqkWHfQHprw==    dependencies:      psl ""^1.1.33""      punycode ""^2.1.1"" -    universalify ""^0.1.2"" +    universalify ""^0.2.0"" +    url-parse ""^1.5.3""    tr46@~0.0.3:    version ""0.0.3"" @@ -10122,11 +10133,16 @@ universal-user-agent@^6.0.0:    resolved ""https://registry.yarnpkg.com/universal-user-agent/-/universal-user-agent-6.0.0.tgz#3381f8503b251c0d9cd21bc1de939ec9df5480ee""    integrity sha512-isyNax3wXoKaulPDZWHQqbmIx1k2tb9fb3GGDBRxCscfYV2Ch7WxPArBsFEG8s/safwXTT7H4QGhaIkTp9447w==   -universalify@^0.1.0, universalify@^0.1.2: +universalify@^0.1.0:    version ""0.1.2""    resolved ""https://registry.yarnpkg.com/universalify/-/universalify-0.1.2.tgz#b646f69be3942dabcecc9d6639c80dc105efaa66""    integrity sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==   +universalify@^0.2.0: +  version ""0.2.0"" +  resolved ""https://registry.yarnpkg.com/universalify/-/universalify-0.2.0.tgz#6451760566fa857534745ab1dde952d1b1761be0"" +  integrity sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg== +  unquote@~1.1.1:    version ""1.1.1""    resolved ""https://registry.yarnpkg.com/unquote/-/unquote-1.1.1.tgz#8fded7324ec6e88a0ff8b905e7c098cdc086d544"" @@ -10165,6 +10181,14 @@ urix@^0.1.0:    resolved ""https://registry.yarnpkg.com/urix/-/urix-0.1.0.tgz#da937f7a62e21fec1fd18d49b35c2935067a6c72""    integrity sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=   +url-parse@^1.5.3: +  version ""1.5.10"" +  resolved ""https://registry.yarnpkg.com/url-parse/-/url-parse-1.5.10.tgz#9d3c2f736c1d75dd3bd2be507dcc111f1e2ea9c1"" +  integrity sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ== +  dependencies: +    querystringify ""^2.1.1"" +    requires-port ""^1.0.0"" +  use@^3.1.0:    version ""3.1.1""    resolved ""https://registry.yarnpkg.com/use/-/use-3.1.1.tgz#d50c8cac79a19fbc20f2911f56eb973f4e10070f"""
a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,build/azure-pipelines/alpine/product-build-alpine.yml,modified,24,32,56,https://github.com/microsoft/vscode/blob/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Falpine%2Fproduct-build-alpine.yml,https://github.com/microsoft/vscode/raw/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Falpine%2Fproduct-build-alpine.yml,https://api.github.com/repos/microsoft/vscode/contents/build%2Fazure-pipelines%2Falpine%2Fproduct-build-alpine.yml?ref=a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,"@@ -104,55 +104,47 @@ steps:      - script: |        set -e -      TARGET=$([ ""$VSCODE_ARCH"" == ""x64"" ] && echo ""linux-alpine"" || echo ""alpine-arm64"") +      TARGET=$([ ""$VSCODE_ARCH"" == ""x64"" ] && echo ""linux-alpine"" || echo ""alpine-arm64"") # TODO@joaomoreno        yarn gulp vscode-reh-$TARGET-min-ci -      yarn gulp vscode-reh-web-$TARGET-min-ci +      (cd .. && mv vscode-reh-$TARGET vscode-server-$TARGET) # TODO@joaomoreno +      ARCHIVE_PATH="".build/linux/server/vscode-server-$TARGET.tar.gz"" +      mkdir -p $(dirname $ARCHIVE_PATH) +      tar --owner=0 --group=0 -czf $ARCHIVE_PATH -C .. vscode-server-$TARGET +      echo ""##vso[task.setvariable variable=SERVER_PATH]$ARCHIVE_PATH""      env:        GITHUB_TOKEN: ""$(github-distro-mixin-password)"" -    displayName: Build +    displayName: Build server      - script: |        set -e        TARGET=$([ ""$VSCODE_ARCH"" == ""x64"" ] && echo ""linux-alpine"" || echo ""alpine-arm64"") -      REPO=""$(pwd)"" -      ROOT=""$REPO/.."" - -      # Publish Remote Extension Host -      LEGACY_SERVER_BUILD_NAME=""vscode-reh-$TARGET"" -      SERVER_BUILD_NAME=""vscode-server-$TARGET"" -      SERVER_TARBALL_FILENAME=""vscode-server-$TARGET.tar.gz"" -      SERVER_TARBALL_PATH=""$ROOT/$SERVER_TARBALL_FILENAME"" - -      rm -rf $ROOT/vscode-server-*.tar.* -      (cd $ROOT && mv $LEGACY_SERVER_BUILD_NAME $SERVER_BUILD_NAME && tar --owner=0 --group=0 -czf $SERVER_TARBALL_PATH $SERVER_BUILD_NAME) - -      # Publish Remote Extension Host (Web) -      LEGACY_SERVER_BUILD_NAME=""vscode-reh-web-$TARGET"" -      SERVER_BUILD_NAME=""vscode-server-$TARGET-web"" -      SERVER_TARBALL_FILENAME=""vscode-server-$TARGET-web.tar.gz"" -      SERVER_TARBALL_PATH=""$ROOT/$SERVER_TARBALL_FILENAME"" - -      rm -rf $ROOT/vscode-server-*-web.tar.* -      (cd $ROOT && mv $LEGACY_SERVER_BUILD_NAME $SERVER_BUILD_NAME && tar --owner=0 --group=0 -czf $SERVER_TARBALL_PATH $SERVER_BUILD_NAME) -    displayName: Prepare for publish +      yarn gulp vscode-reh-web-$TARGET-min-ci +      (cd .. && mv vscode-reh-web-$TARGET vscode-server-$TARGET-web) # TODO@joaomoreno +      ARCHIVE_PATH="".build/linux/web/vscode-server-$TARGET-web.tar.gz"" +      mkdir -p $(dirname $ARCHIVE_PATH) +      tar --owner=0 --group=0 -czf $ARCHIVE_PATH -C .. vscode-server-$TARGET-web +      echo ""##vso[task.setvariable variable=WEB_PATH]$ARCHIVE_PATH"" +    env: +      GITHUB_TOKEN: ""$(github-distro-mixin-password)"" +    displayName: Build server (web)   -  - publish: $(Agent.BuildDirectory)/vscode-server-alpine-$(VSCODE_ARCH).tar.gz +  - publish: $(SERVER_PATH)      artifact: vscode_server_alpine_$(VSCODE_ARCH)_archive-unsigned      displayName: Publish server archive -    condition: and(succeeded(), ne(variables['VSCODE_ARCH'], 'x64')) +    condition: and(succeededOrFailed(), ne(variables['SERVER_PATH'], ''), ne(variables['VSCODE_ARCH'], 'x64'))   -  - publish: $(Agent.BuildDirectory)/vscode-server-alpine-$(VSCODE_ARCH)-web.tar.gz +  - publish: $(WEB_PATH)      artifact: vscode_web_alpine_$(VSCODE_ARCH)_archive-unsigned      displayName: Publish web server archive -    condition: and(succeeded(), ne(variables['VSCODE_ARCH'], 'x64')) +    condition: and(succeededOrFailed(), ne(variables['WEB_PATH'], ''), ne(variables['VSCODE_ARCH'], 'x64'))      # Legacy x64 artifact name -  - publish: $(Agent.BuildDirectory)/vscode-server-linux-alpine.tar.gz +  - publish: $(SERVER_PATH)      artifact: vscode_server_linux_alpine_archive-unsigned      displayName: Publish x64 server archive -    condition: and(succeeded(), eq(variables['VSCODE_ARCH'], 'x64')) +    condition: and(succeededOrFailed(), ne(variables['SERVER_PATH'], ''), eq(variables['VSCODE_ARCH'], 'x64'))   -  - publish: $(Agent.BuildDirectory)/vscode-server-linux-alpine-web.tar.gz +  - publish: $(WEB_PATH)      artifact: vscode_web_linux_alpine_archive-unsigned      displayName: Publish x64 web server archive -    condition: and(succeeded(), eq(variables['VSCODE_ARCH'], 'x64')) +    condition: and(succeededOrFailed(), ne(variables['WEB_PATH'], ''), eq(variables['VSCODE_ARCH'], 'x64'))"
a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,build/azure-pipelines/darwin/product-build-darwin.yml,modified,15,14,29,https://github.com/microsoft/vscode/blob/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Fdarwin%2Fproduct-build-darwin.yml,https://github.com/microsoft/vscode/raw/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Fdarwin%2Fproduct-build-darwin.yml,https://api.github.com/repos/microsoft/vscode/contents/build%2Fazure-pipelines%2Fdarwin%2Fproduct-build-darwin.yml?ref=a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,"@@ -111,17 +111,26 @@ steps:    - template: ../common/install-builtin-extensions.yml      - ${{ if ne(parameters.VSCODE_QUALITY, 'oss') }}: -    - script: yarn gulp vscode-darwin-$(VSCODE_ARCH)-min-ci +    - script: | +        set -e +        yarn gulp vscode-darwin-$(VSCODE_ARCH)-min-ci +        echo ""##vso[task.setvariable variable=BUILT_CLIENT_ARCHIVE]true""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)""        displayName: Build client   -    - script: yarn gulp vscode-reh-darwin-$(VSCODE_ARCH)-min-ci +    - script: | +        set -e +        yarn gulp vscode-reh-darwin-$(VSCODE_ARCH)-min-ci +        echo ""##vso[task.setvariable variable=BUILT_SERVER_ARCHIVE]true""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)""        displayName: Build server   -    - script: yarn gulp vscode-reh-web-darwin-$(VSCODE_ARCH)-min-ci +    - script: | +        set -e +        yarn gulp vscode-reh-web-darwin-$(VSCODE_ARCH)-min-ci +        echo ""##vso[task.setvariable variable=BUILT_WEB_ARCHIVE]true""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)""        displayName: Build server (web) @@ -211,23 +220,15 @@ steps:        - publish: $(Agent.BuildDirectory)/VSCode-darwin-$(VSCODE_ARCH).zip        artifact: unsigned_vscode_client_darwin_$(VSCODE_ARCH)_archive +      condition: and(succeededOrFailed(), eq(variables['BUILT_CLIENT_ARCHIVE'], 'true'))        displayName: Publish client archive        - publish: $(Agent.BuildDirectory)/vscode-server-darwin-$(VSCODE_ARCH).zip        artifact: vscode_server_darwin_$(VSCODE_ARCH)_archive-unsigned +      condition: and(succeededOrFailed(), eq(variables['BUILT_SERVER_ARCHIVE'], 'true'))        displayName: Publish server archive        - publish: $(Agent.BuildDirectory)/vscode-server-darwin-$(VSCODE_ARCH)-web.zip        artifact: vscode_web_darwin_$(VSCODE_ARCH)_archive-unsigned +      condition: and(succeededOrFailed(), eq(variables['BUILT_WEB_ARCHIVE'], 'true'))        displayName: Publish web server archive - -    - task: AzureCLI@2 -      inputs: -        azureSubscription: ""vscode-builds-subscription"" -        scriptType: pscore -        scriptLocation: inlineScript -        addSpnToEnvironment: true -        inlineScript: | -          Write-Host ""##vso[task.setvariable variable=AZURE_TENANT_ID]$env:tenantId"" -          Write-Host ""##vso[task.setvariable variable=AZURE_CLIENT_ID]$env:servicePrincipalId"" -          Write-Host ""##vso[task.setvariable variable=AZURE_CLIENT_SECRET;issecret=true]$env:servicePrincipalKey"""
a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,build/azure-pipelines/linux/prepare-publish.sh,removed,0,66,66,https://github.com/microsoft/vscode/blob/6c8cdf325eb1dc8a0e2ea9205a1d2ca05f69c101/build%2Fazure-pipelines%2Flinux%2Fprepare-publish.sh,https://github.com/microsoft/vscode/raw/6c8cdf325eb1dc8a0e2ea9205a1d2ca05f69c101/build%2Fazure-pipelines%2Flinux%2Fprepare-publish.sh,https://api.github.com/repos/microsoft/vscode/contents/build%2Fazure-pipelines%2Flinux%2Fprepare-publish.sh?ref=6c8cdf325eb1dc8a0e2ea9205a1d2ca05f69c101,"@@ -1,66 +0,0 @@ -#!/usr/bin/env bash -set -e -REPO=""$(pwd)"" -ROOT=""$REPO/.."" - -# Publish tarball -PLATFORM_LINUX=""linux-$VSCODE_ARCH"" -BUILDNAME=""VSCode-$PLATFORM_LINUX"" -BUILD_VERSION=""$(date +%s)"" -[ -z ""$VSCODE_QUALITY"" ] && TARBALL_FILENAME=""code-$VSCODE_ARCH-$BUILD_VERSION.tar.gz"" || TARBALL_FILENAME=""code-$VSCODE_QUALITY-$VSCODE_ARCH-$BUILD_VERSION.tar.gz"" -TARBALL_PATH=""$ROOT/$TARBALL_FILENAME"" - -rm -rf $ROOT/code-*.tar.* -(cd $ROOT && tar -czf $TARBALL_PATH $BUILDNAME) - -# Publish Remote Extension Host -LEGACY_SERVER_BUILD_NAME=""vscode-reh-$PLATFORM_LINUX"" -SERVER_BUILD_NAME=""vscode-server-$PLATFORM_LINUX"" -SERVER_TARBALL_FILENAME=""vscode-server-$PLATFORM_LINUX.tar.gz"" -SERVER_TARBALL_PATH=""$ROOT/$SERVER_TARBALL_FILENAME"" - -rm -rf $ROOT/vscode-server-*.tar.* -(cd $ROOT && mv $LEGACY_SERVER_BUILD_NAME $SERVER_BUILD_NAME && tar --owner=0 --group=0 -czf $SERVER_TARBALL_PATH $SERVER_BUILD_NAME) - -# Publish Remote Extension Host (Web) -LEGACY_SERVER_BUILD_NAME=""vscode-reh-web-$PLATFORM_LINUX"" -SERVER_BUILD_NAME=""vscode-server-$PLATFORM_LINUX-web"" -SERVER_TARBALL_FILENAME=""vscode-server-$PLATFORM_LINUX-web.tar.gz"" -SERVER_TARBALL_PATH=""$ROOT/$SERVER_TARBALL_FILENAME"" - -rm -rf $ROOT/vscode-server-*-web.tar.* -(cd $ROOT && mv $LEGACY_SERVER_BUILD_NAME $SERVER_BUILD_NAME && tar --owner=0 --group=0 -czf $SERVER_TARBALL_PATH $SERVER_BUILD_NAME) - -# Publish DEB -case $VSCODE_ARCH in -	x64) DEB_ARCH=""amd64"" ;; -	*) DEB_ARCH=""$VSCODE_ARCH"" ;; -esac - -PLATFORM_DEB=""linux-deb-$VSCODE_ARCH"" -DEB_FILENAME=""$(ls $REPO/.build/linux/deb/$DEB_ARCH/deb/)"" -DEB_PATH=""$REPO/.build/linux/deb/$DEB_ARCH/deb/$DEB_FILENAME"" - -# Publish RPM -case $VSCODE_ARCH in -	x64) RPM_ARCH=""x86_64"" ;; -	armhf) RPM_ARCH=""armv7hl"" ;; -	arm64) RPM_ARCH=""aarch64"" ;; -	*) RPM_ARCH=""$VSCODE_ARCH"" ;; -esac - -PLATFORM_RPM=""linux-rpm-$VSCODE_ARCH"" -RPM_FILENAME=""$(ls $REPO/.build/linux/rpm/$RPM_ARCH/ | grep .rpm)"" -RPM_PATH=""$REPO/.build/linux/rpm/$RPM_ARCH/$RPM_FILENAME"" - -# Publish Snap -# Pack snap tarball artifact, in order to preserve file perms -mkdir -p $REPO/.build/linux/snap-tarball -SNAP_TARBALL_PATH=""$REPO/.build/linux/snap-tarball/snap-$VSCODE_ARCH.tar.gz"" -rm -rf $SNAP_TARBALL_PATH -(cd .build/linux && tar -czf $SNAP_TARBALL_PATH snap) - -# Export DEB_PATH, RPM_PATH -echo ""##vso[task.setvariable variable=DEB_PATH]$DEB_PATH"" -echo ""##vso[task.setvariable variable=RPM_PATH]$RPM_PATH"" -echo ""##vso[task.setvariable variable=TARBALL_PATH]$TARBALL_PATH"""
a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,build/azure-pipelines/linux/product-build-linux.yml,modified,63,26,89,https://github.com/microsoft/vscode/blob/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Flinux%2Fproduct-build-linux.yml,https://github.com/microsoft/vscode/raw/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Flinux%2Fproduct-build-linux.yml,https://api.github.com/repos/microsoft/vscode/contents/build%2Fazure-pipelines%2Flinux%2Fproduct-build-linux.yml?ref=a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,"@@ -101,7 +101,7 @@ steps:          azureSubscriptionEndpoint: ""vscode-builds-subscription""          azureContainerRegistry: vscodehub.azurecr.io          command: ""Run an image"" -        imageName: vscode-linux-build-agent:centos7-devtoolset8-${{ parameters.VSCODE_ARCH }} +        imageName: vscode-linux-build-agent:centos7-devtoolset8-$(VSCODE_ARCH)          containerCommand: uname        condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'))   @@ -159,7 +159,7 @@ steps:        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1        GITHUB_TOKEN: ""$(github-distro-mixin-password)""        ${{ if and(ne(parameters.VSCODE_QUALITY, 'oss'), or(eq(parameters.VSCODE_ARCH, 'x64'), eq(parameters.VSCODE_ARCH, 'arm64'))) }}: -        VSCODE_REMOTE_DEPENDENCIES_CONTAINER_NAME: vscodehub.azurecr.io/vscode-linux-build-agent:centos7-devtoolset8-${{ parameters.VSCODE_ARCH }} +        VSCODE_REMOTE_DEPENDENCIES_CONTAINER_NAME: vscodehub.azurecr.io/vscode-linux-build-agent:centos7-devtoolset8-$(VSCODE_ARCH)      displayName: Install dependencies      condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'))   @@ -183,17 +183,37 @@ steps:    - template: ../common/install-builtin-extensions.yml      - ${{ if ne(parameters.VSCODE_QUALITY, 'oss') }}: -    - script: yarn gulp vscode-linux-$(VSCODE_ARCH)-min-ci +    - script: | +        set -e +        yarn gulp vscode-linux-$(VSCODE_ARCH)-min-ci +        ARCHIVE_PATH="".build/linux/client/code-${{ parameters.VSCODE_QUALITY }}-$(VSCODE_ARCH)-$(date +%s).tar.gz"" +        mkdir -p $(dirname $ARCHIVE_PATH) +        tar -czf $ARCHIVE_PATH -C .. VSCode-linux-$(VSCODE_ARCH) +        echo ""##vso[task.setvariable variable=CLIENT_PATH]$ARCHIVE_PATH""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)""        displayName: Build client   -    - script: yarn gulp vscode-reh-linux-$(VSCODE_ARCH)-min-ci +    - script: | +        set -e +        yarn gulp vscode-reh-linux-$(VSCODE_ARCH)-min-ci +        (cd .. && mv vscode-reh-linux-$(VSCODE_ARCH) vscode-server-linux-$(VSCODE_ARCH)) # TODO@joaomoreno +        ARCHIVE_PATH="".build/linux/server/vscode-server-linux-$(VSCODE_ARCH).tar.gz"" +        mkdir -p $(dirname $ARCHIVE_PATH) +        tar --owner=0 --group=0 -czf $ARCHIVE_PATH -C .. vscode-server-linux-$(VSCODE_ARCH) +        echo ""##vso[task.setvariable variable=SERVER_PATH]$ARCHIVE_PATH""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)""        displayName: Build server   -    - script: yarn gulp vscode-reh-web-linux-$(VSCODE_ARCH)-min-ci +    - script: | +        set -e +        yarn gulp vscode-reh-web-linux-$(VSCODE_ARCH)-min-ci +        (cd .. && mv vscode-reh-web-linux-$(VSCODE_ARCH) vscode-server-linux-$(VSCODE_ARCH)-web) # TODO@joaomoreno +        ARCHIVE_PATH="".build/linux/web/vscode-server-linux-$(VSCODE_ARCH)-web.tar.gz"" +        mkdir -p $(dirname $ARCHIVE_PATH) +        tar --owner=0 --group=0 -czf $ARCHIVE_PATH -C .. vscode-server-linux-$(VSCODE_ARCH)-web +        echo ""##vso[task.setvariable variable=WEB_PATH]$ARCHIVE_PATH""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)""        displayName: Build server (web) @@ -228,13 +248,25 @@ steps:          mv $(Build.ArtifactStagingDirectory)/cli/$APP_NAME $(agent.builddirectory)/VSCode-linux-$(VSCODE_ARCH)/bin/$CLI_APP_NAME        displayName: Make CLI executable   -    - script: yarn gulp ""vscode-linux-$(VSCODE_ARCH)-build-deb"" +    - script:  | +        set -e +        yarn gulp ""vscode-linux-$(VSCODE_ARCH)-build-deb"" +        echo ""##vso[task.setvariable variable=DEB_PATH]$(ls .build/linux/deb/*/deb/*.deb)""        displayName: Build deb package   -    - script: yarn gulp ""vscode-linux-$(VSCODE_ARCH)-build-rpm"" +    - script:  | +        set -e +        yarn gulp ""vscode-linux-$(VSCODE_ARCH)-build-rpm"" +        echo ""##vso[task.setvariable variable=RPM_PATH]$(ls .build/linux/rpm/*/*.rpm)""        displayName: Build rpm package   -    - script: yarn gulp ""vscode-linux-$(VSCODE_ARCH)-prepare-snap"" +    - script: | +        set -e +        yarn gulp ""vscode-linux-$(VSCODE_ARCH)-prepare-snap"" +        ARCHIVE_PATH="".build/linux/snap-tarball/snap-$(VSCODE_ARCH).tar.gz"" +        mkdir -p $(dirname $ARCHIVE_PATH) +        tar -czf $ARCHIVE_PATH -C .build/linux snap +        echo ""##vso[task.setvariable variable=SNAP_PATH]$ARCHIVE_PATH""        displayName: Prepare snap package        - task: UseDotNet@2 @@ -248,8 +280,8 @@ steps:      - script: node build/azure-pipelines/common/sign $(Agent.ToolsDirectory)/esrpclient/*/*/net6.0/esrpcli.dll rpm $(ESRP-PKI) $(esrp-aad-username) $(esrp-aad-password) .build/linux/rpm '*.rpm'        displayName: Codesign rpm   -    - script: ./build/azure-pipelines/linux/prepare-publish.sh -      displayName: Prepare for Publish +    # - script: ./build/azure-pipelines/linux/prepare-publish.sh +    #   displayName: Prepare for Publish        - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0        displayName: Generate SBOM (client) @@ -271,28 +303,33 @@ steps:        displayName: Publish SBOM (server)        artifact: vscode_server_linux_$(VSCODE_ARCH)_sbom   -    - publish: $(DEB_PATH) -      artifact: vscode_client_linux_$(VSCODE_ARCH)_deb-package -      displayName: Publish deb package - -    - publish: $(RPM_PATH) -      artifact: vscode_client_linux_$(VSCODE_ARCH)_rpm-package -      displayName: Publish rpm package - -    - publish: $(TARBALL_PATH) +    - publish: $(CLIENT_PATH)        artifact: vscode_client_linux_$(VSCODE_ARCH)_archive-unsigned +      condition: and(succeededOrFailed(), ne(variables['CLIENT_PATH'], ''))        displayName: Publish client archive   -    - publish: $(Agent.BuildDirectory)/vscode-server-linux-$(VSCODE_ARCH).tar.gz +    - publish: $(SERVER_PATH)        artifact: vscode_server_linux_$(VSCODE_ARCH)_archive-unsigned +      condition: and(succeededOrFailed(), ne(variables['SERVER_PATH'], ''))        displayName: Publish server archive   -    - publish: $(Agent.BuildDirectory)/vscode-server-linux-$(VSCODE_ARCH)-web.tar.gz +    - publish: $(WEB_PATH)        artifact: vscode_web_linux_$(VSCODE_ARCH)_archive-unsigned +      condition: and(succeededOrFailed(), ne(variables['WEB_PATH'], ''))        displayName: Publish web server archive   -    - task: PublishPipelineArtifact@0 -      displayName: ""Publish Pipeline Artifact"" -      inputs: -        artifactName: ""snap-$(VSCODE_ARCH)"" -        targetPath: .build/linux/snap-tarball +    - publish: $(DEB_PATH) +      artifact: vscode_client_linux_$(VSCODE_ARCH)_deb-package +      condition: and(succeededOrFailed(), ne(variables['DEB_PATH'], '')) +      displayName: Publish deb package + +    - publish: $(RPM_PATH) +      artifact: vscode_client_linux_$(VSCODE_ARCH)_rpm-package +      condition: and(succeededOrFailed(), ne(variables['RPM_PATH'], '')) +      displayName: Publish rpm package + +    - publish: $(SNAP_PATH) +      artifact: snap-$(VSCODE_ARCH) +      condition: and(succeededOrFailed(), ne(variables['SNAP_PATH'], '')) +      displayName: Publish snap pre-package +"
a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,build/azure-pipelines/linux/snap-build-linux.yml,modified,2,3,5,https://github.com/microsoft/vscode/blob/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Flinux%2Fsnap-build-linux.yml,https://github.com/microsoft/vscode/raw/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Flinux%2Fsnap-build-linux.yml,https://api.github.com/repos/microsoft/vscode/contents/build%2Fazure-pipelines%2Flinux%2Fsnap-build-linux.yml?ref=a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,"@@ -27,14 +27,13 @@ steps:        sudo apt-get install -y yarn          # Define variables -      REPO=""$(pwd)"" -      SNAP_ROOT=""$REPO/.build/linux/snap/$(VSCODE_ARCH)"" +      SNAP_ROOT="".build/linux/snap/$(VSCODE_ARCH)""          # Install build dependencies        (cd build && yarn)          # Unpack snap tarball artifact, in order to preserve file perms -      SNAP_TARBALL_PATH=""$REPO/.build/linux/snap-tarball/snap-$(VSCODE_ARCH).tar.gz"" +      SNAP_TARBALL_PATH="".build/linux/snap-tarball/snap-$(VSCODE_ARCH).tar.gz""        (cd .build/linux && tar -xzf $SNAP_TARBALL_PATH)          # Create snap package"
a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,build/azure-pipelines/web/product-build-web.yml,modified,9,16,25,https://github.com/microsoft/vscode/blob/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Fweb%2Fproduct-build-web.yml,https://github.com/microsoft/vscode/raw/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Fweb%2Fproduct-build-web.yml,https://api.github.com/repos/microsoft/vscode/contents/build%2Fazure-pipelines%2Fweb%2Fproduct-build-web.yml?ref=a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,"@@ -87,7 +87,13 @@ steps:      - template: ../common/install-builtin-extensions.yml   -  - script: yarn gulp vscode-web-min-ci +  - script: | +      set -e +      yarn gulp vscode-web-min-ci +      ARCHIVE_PATH="".build/web/vscode-web.tar.gz"" +      mkdir -p $(dirname $ARCHIVE_PATH) +      tar --owner=0 --group=0 -czf $ARCHIVE_PATH -C .. vscode-web +      echo ""##vso[task.setvariable variable=WEB_PATH]$ARCHIVE_PATH""      env:        GITHUB_TOKEN: ""$(github-distro-mixin-password)""      displayName: Build @@ -133,20 +139,7 @@ steps:          node build/azure-pipelines/upload-nlsmetadata      displayName: Upload NLS Metadata   -  - script: | -      set -e -      REPO=""$(pwd)"" -      ROOT=""$REPO/.."" - -      WEB_BUILD_NAME=""vscode-web"" -      WEB_TARBALL_FILENAME=""vscode-web.tar.gz"" -      WEB_TARBALL_PATH=""$ROOT/$WEB_TARBALL_FILENAME"" - -      rm -rf $ROOT/vscode-web.tar.* - -      cd $ROOT && tar --owner=0 --group=0 -czf $WEB_TARBALL_PATH $WEB_BUILD_NAME -    displayName: Prepare for publish - -  - publish: $(Agent.BuildDirectory)/vscode-web.tar.gz +  - publish: $(WEB_PATH)      artifact: vscode_web_linux_standalone_archive-unsigned +    condition: and(succeededOrFailed(), ne(variables['WEB_PATH'], ''))      displayName: Publish web archive"
a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,build/azure-pipelines/win32/product-build-win32.yml,modified,6,2,8,https://github.com/microsoft/vscode/blob/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Fwin32%2Fproduct-build-win32.yml,https://github.com/microsoft/vscode/raw/a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546/build%2Fazure-pipelines%2Fwin32%2Fproduct-build-win32.yml,https://api.github.com/repos/microsoft/vscode/contents/build%2Fazure-pipelines%2Fwin32%2Fproduct-build-win32.yml?ref=a8f05a47278cb3a6a8e5dbd8d468e7fb7c498546,"@@ -154,6 +154,7 @@ steps:          . build/azure-pipelines/win32/exec.ps1          $ErrorActionPreference = ""Stop""          exec { yarn gulp ""vscode-win32-$(VSCODE_ARCH)-min-ci"" } +        echo ""##vso[task.setvariable variable=BUILT_CLIENT_ARCHIVE]true""          echo ""##vso[task.setvariable variable=CodeSigningFolderPath]$(agent.builddirectory)/VSCode-win32-$(VSCODE_ARCH)""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)"" @@ -168,7 +169,9 @@ steps:          . build/azure-pipelines/win32/exec.ps1          $ErrorActionPreference = ""Stop""          exec { yarn gulp ""vscode-reh-win32-$(VSCODE_ARCH)-min-ci"" } +        echo ""##vso[task.setvariable variable=BUILT_SERVER_ARCHIVE]true""          exec { yarn gulp ""vscode-reh-web-win32-$(VSCODE_ARCH)-min-ci"" } +        echo ""##vso[task.setvariable variable=BUILT_WEB_ARCHIVE]true""          echo ""##vso[task.setvariable variable=CodeSigningFolderPath]$(CodeSigningFolderPath),$(agent.builddirectory)/vscode-reh-win32-$(VSCODE_ARCH)""        env:          GITHUB_TOKEN: ""$(github-distro-mixin-password)"" @@ -269,6 +272,7 @@ steps:          - publish: $(System.DefaultWorkingDirectory)\.build\win32-$(VSCODE_ARCH)\archive\$(ARCHIVE_NAME)          artifact: vscode_client_win32_$(VSCODE_ARCH)_archive +        condition: and(succeededOrFailed(), eq(variables['BUILT_CLIENT_ARCHIVE'], 'true'))          displayName: Publish archive          - publish: $(System.DefaultWorkingDirectory)\.build\win32-$(VSCODE_ARCH)\system-setup\$(SYSTEM_SETUP_NAME) @@ -282,9 +286,9 @@ steps:        - publish: $(System.DefaultWorkingDirectory)\.build\vscode-server-win32-$(VSCODE_ARCH).zip          artifact: vscode_server_win32_$(VSCODE_ARCH)_archive          displayName: Publish server archive -        condition: and(succeeded(), ne(variables['VSCODE_ARCH'], 'arm64')) +        condition: and(succeededOrFailed(), eq(variables['BUILT_SERVER_ARCHIVE'], 'true'), ne(variables['VSCODE_ARCH'], 'arm64'))          - publish: $(System.DefaultWorkingDirectory)\.build\vscode-server-win32-$(VSCODE_ARCH)-web.zip          artifact: vscode_web_win32_$(VSCODE_ARCH)_archive          displayName: Publish web server archive -        condition: and(succeeded(), ne(variables['VSCODE_ARCH'], 'arm64')) +        condition: and(succeededOrFailed(), eq(variables['BUILT_WEB_ARCHIVE'], 'true'), ne(variables['VSCODE_ARCH'], 'arm64'))"
0694aa43106dd3a6a0788666d2465a2481ad89eb,src/vs/workbench/contrib/search/browser/searchModel.ts,modified,4,1,5,https://github.com/microsoft/vscode/blob/0694aa43106dd3a6a0788666d2465a2481ad89eb/src%2Fvs%2Fworkbench%2Fcontrib%2Fsearch%2Fbrowser%2FsearchModel.ts,https://github.com/microsoft/vscode/raw/0694aa43106dd3a6a0788666d2465a2481ad89eb/src%2Fvs%2Fworkbench%2Fcontrib%2Fsearch%2Fbrowser%2FsearchModel.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fsearch%2Fbrowser%2FsearchModel.ts?ref=0694aa43106dd3a6a0788666d2465a2481ad89eb,"@@ -1334,7 +1334,10 @@ export class FolderMatchWorkspaceRoot extends FolderMatchWithResource {  		}    		const fileMatchParentParts: URI[] = []; -		const normalizedResource = this.uriIdentityService.extUri.normalizePath(this.resource); +		const normalizedResource = this.uriIdentityService.extUri.normalizePath( +			(this.resource.path.endsWith('/')) ? +				this.resource.with({ path: this.resource.path.substring(0, this.resource.path.length - 1) }) : +				this.resource);  		let uri = this.normalizedUriParent(rawFileMatch.resource);    		while (!this.uriEquals(normalizedResource, uri)) {"
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/platform/terminal/electron-main/electronPtyHostStarter.ts,modified,3,3,6,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Felectron-main%2FelectronPtyHostStarter.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Felectron-main%2FelectronPtyHostStarter.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fplatform%2Fterminal%2Felectron-main%2FelectronPtyHostStarter.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -23,8 +23,8 @@ export class ElectronPtyHostStarter extends Disposable implements IPtyHostStarte    	private utilityProcess: UtilityProcess | undefined = undefined;   -	private readonly _onBeforeWindowConnection = new Emitter<void>(); -	readonly onBeforeWindowConnection = this._onBeforeWindowConnection.event; +	private readonly _onRequestConnection = new Emitter<void>(); +	readonly onRequestConnection = this._onRequestConnection.event;  	private readonly _onWillShutdown = new Emitter<void>();  	readonly onWillShutdown = this._onWillShutdown.event;   @@ -104,7 +104,7 @@ export class ElectronPtyHostStarter extends Disposable implements IPtyHostStarte  	}    	private _onWindowConnection(e: IpcMainEvent, nonce: string) { -		this._onBeforeWindowConnection.fire(); +		this._onRequestConnection.fire();    		const port = this.utilityProcess!.connect();  "
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/platform/terminal/node/ptyHost.ts,modified,1,1,2,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHost.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHost.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHost.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -14,7 +14,7 @@ export interface IPtyHostConnection {  }    export interface IPtyHostStarter extends IDisposable { -	onBeforeWindowConnection?: Event<void>; +	onRequestConnection?: Event<void>;  	onWillShutdown?: Event<void>;    	/**"
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/platform/terminal/node/ptyHostMain.ts,modified,1,0,1,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostMain.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostMain.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostMain.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -88,6 +88,7 @@ async function startPtyHost() {    	// Clean up  	process.once('exit', () => { +		logService.trace('Pty host exiting');  		logService.dispose();  		heartbeatService.dispose();  		ptyService.dispose();"
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/platform/terminal/node/ptyHostService.ts,modified,23,16,39,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostService.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FptyHostService.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -5,10 +5,10 @@    import { Emitter, Event } from 'vs/base/common/event';  import { Disposable, toDisposable } from 'vs/base/common/lifecycle'; -import { IProcessEnvironment, OperatingSystem, isWindows } from 'vs/base/common/platform'; +import { IProcessEnvironment, OS, OperatingSystem, isWindows } from 'vs/base/common/platform';  import { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';  import { IConfigurationService } from 'vs/platform/configuration/common/configuration'; -import { ILogService, ILoggerService } from 'vs/platform/log/common/log'; +import { ILogService, ILoggerService, LogLevel } from 'vs/platform/log/common/log';  import { RemoteLoggerChannelClient } from 'vs/platform/log/common/logIpc';  import { getResolvedShellEnv } from 'vs/platform/shell/node/shellEnv';  import { IPtyHostProcessReplayEvent } from 'vs/platform/terminal/common/capabilities/capabilities'; @@ -19,6 +19,7 @@ import { IGetTerminalLayoutInfoArgs, IProcessDetails, ISetTerminalLayoutInfoArgs  import { IPtyHostConnection, IPtyHostStarter } from 'vs/platform/terminal/node/ptyHost';  import { detectAvailableProfiles } from 'vs/platform/terminal/node/terminalProfiles';  import * as performance from 'vs/base/common/performance'; +import { getSystemShell } from 'vs/base/node/shell';    enum Constants {  	MaxRestarts = 5 @@ -43,6 +44,13 @@ export class PtyHostService extends Disposable implements IPtyService {  		this._ensurePtyHost();  		return this.__proxy!;  	} +	/** +	 * Get the proxy if it exists, otherwise undefined. This is used when calls are not needed to be +	 * passed through to the pty host if it has not yet been spawned. +	 */ +	private get _optionalProxy(): IPtyService | undefined { +		return this.__proxy; +	}    	private _ensurePtyHost() {  		if (!this.__connection) { @@ -102,12 +110,9 @@ export class PtyHostService extends Disposable implements IPtyService {  		this._resolveVariablesRequestStore = this._register(new RequestStore(undefined, this._logService));  		this._resolveVariablesRequestStore.onCreateRequest(this._onPtyHostRequestResolveVariables.fire, this._onPtyHostRequestResolveVariables);   -		// Force the pty host to start as the first window is starting if the starter has that -		// capability -		if (this._ptyHostStarter.onBeforeWindowConnection) { -			Event.once(this._ptyHostStarter.onBeforeWindowConnection)(() => this._ensurePtyHost()); -		} else { -			this._ensurePtyHost(); +		// Start the pty host when a window requests a connection, if the starter has that capability. +		if (this._ptyHostStarter.onRequestConnection) { +			Event.once(this._ptyHostStarter.onRequestConnection)(() => this._ensurePtyHost());  		}    		this._ptyHostStarter.onWillShutdown?.(() => this._wasQuitRequested = true); @@ -118,7 +123,7 @@ export class PtyHostService extends Disposable implements IPtyService {  	}    	private async _refreshIgnoreProcessNames(): Promise<void> { -		return this._proxy.refreshIgnoreProcessNames?.(this._ignoreProcessNames); +		return this._optionalProxy?.refreshIgnoreProcessNames?.(this._ignoreProcessNames);  	}    	private async _resolveShellEnv(): Promise<typeof process.env> { @@ -139,6 +144,11 @@ export class PtyHostService extends Disposable implements IPtyService {  		const connection = this._ptyHostStarter.start();  		const client = connection.client;   +		// Log a full stack trace which will tell the exact reason the pty host is starting up +		if (this._logService.getLevel() === LogLevel.Trace) { +			this._logService.trace('PtyHostService#_startPtyHost', new Error().stack?.replace(/^Error/, '')); +		} +  		// Setup heartbeat service and trigger a heartbeat immediately to reset the timeouts  		const heartbeatService = ProxyChannel.toService<IHeartbeatService>(client.getChannel(TerminalIpcChannels.Heartbeat));  		heartbeatService.onBeat(() => this._handleHeartbeat()); @@ -224,13 +234,10 @@ export class PtyHostService extends Disposable implements IPtyService {  		return this._proxy.listProcesses();  	}  	async getPerformanceMarks(): Promise<performance.PerformanceMark[]> { -		if (!this.__proxy) { -			return []; -		} -		return this._proxy.getPerformanceMarks(); +		return this._optionalProxy?.getPerformanceMarks() ?? [];  	} -	reduceConnectionGraceTime(): Promise<void> { -		return this._proxy.reduceConnectionGraceTime(); +	async reduceConnectionGraceTime(): Promise<void> { +		return this._optionalProxy?.reduceConnectionGraceTime();  	}  	start(id: number): Promise<ITerminalLaunchError | { injectedArgs: string[] } | undefined> {  		return this._proxy.start(id); @@ -280,7 +287,7 @@ export class PtyHostService extends Disposable implements IPtyService {  	}    	getDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> { -		return this._proxy.getDefaultSystemShell(osOverride); +		return this._optionalProxy?.getDefaultSystemShell(osOverride) ?? getSystemShell(osOverride ?? OS, process.env);  	}  	async getProfiles(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles: boolean = false): Promise<ITerminalProfile[]> {  		const shellEnv = await this._resolveShellEnv();"
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/platform/terminal/node/terminalProcess.ts,modified,7,1,8,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FterminalProcess.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FterminalProcess.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fplatform%2Fterminal%2Fnode%2FterminalProcess.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -13,7 +13,7 @@ import { IProcessEnvironment, isLinux, isMacintosh, isWindows } from 'vs/base/co  import { URI } from 'vs/base/common/uri';  import { Promises } from 'vs/base/node/pfs';  import { localize } from 'vs/nls'; -import { ILogService } from 'vs/platform/log/common/log'; +import { ILogService, LogLevel } from 'vs/platform/log/common/log';  import { IProductService } from 'vs/platform/product/common/productService';  import { FlowControlConstants, IShellLaunchConfig, ITerminalChildProcess, ITerminalLaunchError, IProcessProperty, IProcessPropertyMap as IProcessPropertyMap, ProcessPropertyType, TerminalShellType, IProcessReadyEvent, ITerminalProcessOptions, PosixShellType, IProcessReadyWindowsPty } from 'vs/platform/terminal/common/terminal';  import { ChildProcessMonitor } from 'vs/platform/terminal/node/childProcessMonitor'; @@ -353,6 +353,9 @@ export class TerminalProcess extends Disposable implements ITerminalChildProcess  	// Allow any trailing data events to be sent before the exit event is sent.  	// See https://github.com/Tyriar/node-pty/issues/72  	private _queueProcessExit() { +		if (this._logService.getLevel() === LogLevel.Trace) { +			this._logService.trace('TerminalProcess#_queueProcessExit', new Error().stack?.replace(/^Error/, '')); +		}  		if (this._closeTimeout) {  			clearTimeout(this._closeTimeout);  		} @@ -417,6 +420,9 @@ export class TerminalProcess extends Disposable implements ITerminalChildProcess  	}    	shutdown(immediate: boolean): void { +		if (this._logService.getLevel() === LogLevel.Trace) { +			this._logService.trace('TerminalProcess#shutdown', new Error().stack?.replace(/^Error/, '')); +		}  		// don't force immediate disposal of the terminal processes on Windows as an additional  		// mitigation for https://github.com/microsoft/vscode/issues/71966 which causes the pty host  		// to become unresponsive, disconnecting all terminals across all windows."
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/workbench/contrib/terminal/browser/remoteTerminalBackend.ts,modified,22,16,38,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FremoteTerminalBackend.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FremoteTerminalBackend.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FremoteTerminalBackend.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -6,7 +6,7 @@  import { DeferredPromise } from 'vs/base/common/async';  import { Emitter } from 'vs/base/common/event';  import { revive } from 'vs/base/common/marshalling'; -import { PerformanceMark } from 'vs/base/common/performance'; +import { PerformanceMark, mark } from 'vs/base/common/performance';  import { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';  import { ICommandService } from 'vs/platform/commands/common/commands';  import { IConfigurationService } from 'vs/platform/configuration/common/configuration'; @@ -324,22 +324,28 @@ class RemoteTerminalBackend extends BaseTerminalBackend implements ITerminalBack  		// Revive processes if needed  		const serializedState = this._storageService.get(TerminalStorageKeys.TerminalBufferState, StorageScope.WORKSPACE);  		const parsed = this._deserializeTerminalState(serializedState); -		if (parsed) { -			try { -				// Note that remote terminals do not get their environment re-resolved unlike in local terminals - -				await this._remoteTerminalChannel.reviveTerminalProcesses(parsed, Intl.DateTimeFormat().resolvedOptions().locale); -				this._storageService.remove(TerminalStorageKeys.TerminalBufferState, StorageScope.WORKSPACE); -				// If reviving processes, send the terminal layout info back to the pty host as it -				// will not have been persisted on application exit -				const layoutInfo = this._storageService.get(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE); -				if (layoutInfo) { -					await this._remoteTerminalChannel.setTerminalLayoutInfo(JSON.parse(layoutInfo)); -					this._storageService.remove(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE); -				} -			} catch { -				// no-op +		if (!parsed) { +			return undefined; +		} + +		try { +			// Note that remote terminals do not get their environment re-resolved unlike in local terminals + +			mark('code/terminal/willReviveTerminalProcessesRemote'); +			await this._remoteTerminalChannel.reviveTerminalProcesses(parsed, Intl.DateTimeFormat().resolvedOptions().locale); +			mark('code/terminal/didReviveTerminalProcessesRemote'); +			this._storageService.remove(TerminalStorageKeys.TerminalBufferState, StorageScope.WORKSPACE); +			// If reviving processes, send the terminal layout info back to the pty host as it +			// will not have been persisted on application exit +			const layoutInfo = this._storageService.get(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE); +			if (layoutInfo) { +				mark('code/terminal/willSetTerminalLayoutInfoRemote'); +				await this._remoteTerminalChannel.setTerminalLayoutInfo(JSON.parse(layoutInfo)); +				mark('code/terminal/didSetTerminalLayoutInfoRemote'); +				this._storageService.remove(TerminalStorageKeys.TerminalLayoutInfo, StorageScope.WORKSPACE);  			} +		} catch (e: unknown) { +			this._logService.warn('RemoteTerminalBackend#getTerminalLayoutInfo Error', e && typeof e === 'object' && 'message' in e ? e.message : e);  		}    		return this._remoteTerminalChannel.getTerminalLayoutInfo();"
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/workbench/contrib/terminal/browser/terminalInstance.ts,modified,15,6,21,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalInstance.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalInstance.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalInstance.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -2080,24 +2080,33 @@ export class TerminalInstance extends Disposable implements ITerminalInstance {  		this._refreshEnvironmentVariableInfoWidgetState(info);  	}   -	private _refreshEnvironmentVariableInfoWidgetState(info?: IEnvironmentVariableInfo): void { +	private async _refreshEnvironmentVariableInfoWidgetState(info?: IEnvironmentVariableInfo): Promise<void> {  		// Check if the status should exist  		if (!info) {  			this.statusList.remove(TerminalStatus.RelaunchNeeded);  			this.statusList.remove(TerminalStatus.EnvironmentVariableInfoChangesActive);  			return;  		}   -		// Recreate the process if the terminal has not yet been interacted with and it's not a -		// special terminal (eg. extension terminal) +		// Recreate the process seamlessly without informing the use if the following conditions are +		// met.  		if ( +			// The change requires a relaunch  			info.requiresAction && +			// The feature is enabled  			this._configHelper.config.environmentChangesRelaunch && +			// Has not been interacted with  			!this._processManager.hasWrittenData && +			// Not a feature terminal or is a reconnecting task terminal (TODO: Need to explain the latter case)  			(!this._shellLaunchConfig.isFeatureTerminal || (this.reconnectionProperties && this._configurationService.getValue(TaskSettingId.Reconnection) === true)) && -			!this._shellLaunchConfig.customPtyImplementation -			&& !this._shellLaunchConfig.isExtensionOwnedTerminal && -			!this._shellLaunchConfig.attachPersistentProcess +			// Not a custom pty +			!this._shellLaunchConfig.customPtyImplementation && +			// Not an extension owned terminal +			!this._shellLaunchConfig.isExtensionOwnedTerminal && +			// Not a reconnected or revived terminal +			!this._shellLaunchConfig.attachPersistentProcess && +			// Not a Windows remote using ConPTY (#187084) +			!(this._processManager.remoteAuthority && this._configHelper.config.windowsEnableConpty && (await this._processManager.getBackendOS()) === OperatingSystem.Windows)  		) {  			this.relaunch();  			return;"
f7550c1a700f98eeee7ed716f43b365e22b390bc,src/vs/workbench/contrib/terminal/browser/terminalService.ts,modified,5,1,6,https://github.com/microsoft/vscode/blob/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalService.ts,https://github.com/microsoft/vscode/raw/f7550c1a700f98eeee7ed716f43b365e22b390bc/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalService.ts,https://api.github.com/repos/microsoft/vscode/contents/src%2Fvs%2Fworkbench%2Fcontrib%2Fterminal%2Fbrowser%2FterminalService.ts?ref=f7550c1a700f98eeee7ed716f43b365e22b390bc,"@@ -422,7 +422,7 @@ export class TerminalService implements ITerminalService {  	private _setConnected() {  		this._connectionState = TerminalConnectionState.Connected;  		this._onDidChangeConnectionState.fire(); -		this._logService.trace('Reconnected to terminals'); +		this._logService.trace('Pty host ready');  	}    	private async _reconnectToRemoteTerminals(): Promise<void> { @@ -444,6 +444,8 @@ export class TerminalService implements ITerminalService {  		// now that terminals have been restored,  		// attach listeners to update remote when terminals are changed  		this._attachProcessLayoutListeners(); + +		this._logService.trace('Reconnected to remote terminals');  	}    	private async _reconnectToLocalTerminals(): Promise<void> { @@ -462,6 +464,8 @@ export class TerminalService implements ITerminalService {  		// now that terminals have been restored,  		// attach listeners to update local state when terminals are changed  		this._attachProcessLayoutListeners(); + +		this._logService.trace('Reconnected to local terminals');  	}    	private _recreateTerminalGroups(layoutInfo?: ITerminalsLayoutInfo): Promise<ITerminalGroup[]> {"
